!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(e,t){"use strict";function n(e,t){t=t||J;var n=t.createElement("script");n.text=e,t.head.appendChild(n).parentNode.removeChild(n)}function i(e){var t=!!e&&"length"in e&&e.length,n=pe.type(e);return"function"!==n&&!pe.isWindow(e)&&("array"===n||0===t||"number"==typeof t&&t>0&&t-1 in e)}function o(e,t,n){if(pe.isFunction(t))return pe.grep(e,function(e,i){return!!t.call(e,i,e)!==n});if(t.nodeType)return pe.grep(e,function(e){return e===t!==n});if("string"==typeof t){if(xe.test(t))return pe.filter(t,e,n);t=pe.filter(t,e)}return pe.grep(e,function(e){return oe.call(t,e)>-1!==n&&1===e.nodeType})}function r(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}function s(e){var t={};return pe.each(e.match(Pe)||[],function(e,n){t[n]=!0}),t}function a(e){return e}function l(e){throw e}function u(e,t,n){var i;try{e&&pe.isFunction(i=e.promise)?i.call(e).done(t).fail(n):e&&pe.isFunction(i=e.then)?i.call(e,t,n):t.call(void 0,e)}catch(e){n.call(void 0,e)}}function c(){J.removeEventListener("DOMContentLoaded",c),e.removeEventListener("load",c),pe.ready()}function d(){this.expando=pe.expando+d.uid++}function p(e,t,n){var i;if(void 0===n&&1===e.nodeType)if(i="data-"+t.replace(Ie,"-$&").toLowerCase(),n=e.getAttribute(i),"string"==typeof n){try{n="true"===n||"false"!==n&&("null"===n?null:+n+""===n?+n:Ne.test(n)?JSON.parse(n):n)}catch(o){}je.set(e,t,n)}else n=void 0;return n}function f(e,t,n,i){var o,r=1,s=20,a=i?function(){return i.cur()}:function(){return pe.css(e,t,"")},l=a(),u=n&&n[3]||(pe.cssNumber[t]?"":"px"),c=(pe.cssNumber[t]||"px"!==u&&+l)&&Le.exec(pe.css(e,t));if(c&&c[3]!==u){u=u||c[3],n=n||[],c=+l||1;do r=r||".5",c/=r,pe.style(e,t,c+u);while(r!==(r=a()/l)&&1!==r&&--s)}return n&&(c=+c||+l||0,o=n[1]?c+(n[1]+1)*n[2]:+n[2],i&&(i.unit=u,i.start=c,i.end=o)),o}function h(e){var t,n=e.ownerDocument,i=e.nodeName,o=ze[i];return o?o:(t=n.body.appendChild(n.createElement(i)),o=pe.css(t,"display"),t.parentNode.removeChild(t),"none"===o&&(o="block"),ze[i]=o,o)}function g(e,t){for(var n,i,o=[],r=0,s=e.length;r<s;r++)i=e[r],i.style&&(n=i.style.display,t?("none"===n&&(o[r]=Me.get(i,"display")||null,o[r]||(i.style.display="")),""===i.style.display&&He(i)&&(o[r]=h(i))):"none"!==n&&(o[r]="none",Me.set(i,"display",n)));for(r=0;r<s;r++)null!=o[r]&&(e[r].style.display=o[r]);return e}function m(e,t){var n="undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||"*"):"undefined"!=typeof e.querySelectorAll?e.querySelectorAll(t||"*"):[];return void 0===t||t&&pe.nodeName(e,t)?pe.merge([e],n):n}function v(e,t){for(var n=0,i=e.length;n<i;n++)Me.set(e[n],"globalEval",!t||Me.get(t[n],"globalEval"))}function y(e,t,n,i,o){for(var r,s,a,l,u,c,d=t.createDocumentFragment(),p=[],f=0,h=e.length;f<h;f++)if(r=e[f],r||0===r)if("object"===pe.type(r))pe.merge(p,r.nodeType?[r]:r);else if(Ge.test(r)){for(s=s||d.appendChild(t.createElement("div")),a=(We.exec(r)||["",""])[1].toLowerCase(),l=Ve[a]||Ve._default,s.innerHTML=l[1]+pe.htmlPrefilter(r)+l[2],c=l[0];c--;)s=s.lastChild;pe.merge(p,s.childNodes),s=d.firstChild,s.textContent=""}else p.push(t.createTextNode(r));for(d.textContent="",f=0;r=p[f++];)if(i&&pe.inArray(r,i)>-1)o&&o.push(r);else if(u=pe.contains(r.ownerDocument,r),s=m(d.appendChild(r),"script"),u&&v(s),n)for(c=0;r=s[c++];)Ue.test(r.type||"")&&n.push(r);return d}function b(){return!0}function k(){return!1}function w(){try{return J.activeElement}catch(e){}}function x(e,t,n,i,o,r){var s,a;if("object"==typeof t){"string"!=typeof n&&(i=i||n,n=void 0);for(a in t)x(e,a,n,i,t[a],r);return e}if(null==i&&null==o?(o=n,i=n=void 0):null==o&&("string"==typeof n?(o=i,i=void 0):(o=i,i=n,n=void 0)),o===!1)o=k;else if(!o)return e;return 1===r&&(s=o,o=function(e){return pe().off(e),s.apply(this,arguments)},o.guid=s.guid||(s.guid=pe.guid++)),e.each(function(){pe.event.add(this,t,o,i,n)})}function C(e,t){return pe.nodeName(e,"table")&&pe.nodeName(11!==t.nodeType?t:t.firstChild,"tr")?e.getElementsByTagName("tbody")[0]||e:e}function S(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function T(e){var t=tt.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function _(e,t){var n,i,o,r,s,a,l,u;if(1===t.nodeType){if(Me.hasData(e)&&(r=Me.access(e),s=Me.set(t,r),u=r.events)){delete s.handle,s.events={};for(o in u)for(n=0,i=u[o].length;n<i;n++)pe.event.add(t,o,u[o][n])}je.hasData(e)&&(a=je.access(e),l=pe.extend({},a),je.set(t,l))}}function O(e,t){var n=t.nodeName.toLowerCase();"input"===n&&Be.test(e.type)?t.checked=e.checked:"input"!==n&&"textarea"!==n||(t.defaultValue=e.defaultValue)}function P(e,t,i,o){t=ne.apply([],t);var r,s,a,l,u,c,d=0,p=e.length,f=p-1,h=t[0],g=pe.isFunction(h);if(g||p>1&&"string"==typeof h&&!ce.checkClone&&et.test(h))return e.each(function(n){var r=e.eq(n);g&&(t[0]=h.call(this,n,r.html())),P(r,t,i,o)});if(p&&(r=y(t,e[0].ownerDocument,!1,e,o),s=r.firstChild,1===r.childNodes.length&&(r=s),s||o)){for(a=pe.map(m(r,"script"),S),l=a.length;d<p;d++)u=r,d!==f&&(u=pe.clone(u,!0,!0),l&&pe.merge(a,m(u,"script"))),i.call(e[d],u,d);if(l)for(c=a[a.length-1].ownerDocument,pe.map(a,T),d=0;d<l;d++)u=a[d],Ue.test(u.type||"")&&!Me.access(u,"globalEval")&&pe.contains(c,u)&&(u.src?pe._evalUrl&&pe._evalUrl(u.src):n(u.textContent.replace(nt,""),c))}return e}function A(e,t,n){for(var i,o=t?pe.filter(t,e):e,r=0;null!=(i=o[r]);r++)n||1!==i.nodeType||pe.cleanData(m(i)),i.parentNode&&(n&&pe.contains(i.ownerDocument,i)&&v(m(i,"script")),i.parentNode.removeChild(i));return e}function $(e,t,n){var i,o,r,s,a=e.style;return n=n||rt(e),n&&(s=n.getPropertyValue(t)||n[t],""!==s||pe.contains(e.ownerDocument,e)||(s=pe.style(e,t)),!ce.pixelMarginRight()&&ot.test(s)&&it.test(t)&&(i=a.width,o=a.minWidth,r=a.maxWidth,a.minWidth=a.maxWidth=a.width=s,s=n.width,a.width=i,a.minWidth=o,a.maxWidth=r)),void 0!==s?s+"":s}function E(e,t){return{get:function(){return e()?void delete this.get:(this.get=t).apply(this,arguments)}}}function D(e){if(e in ct)return e;for(var t=e[0].toUpperCase()+e.slice(1),n=ut.length;n--;)if(e=ut[n]+t,e in ct)return e}function M(e,t,n){var i=Le.exec(t);return i?Math.max(0,i[2]-(n||0))+(i[3]||"px"):t}function j(e,t,n,i,o){for(var r=n===(i?"border":"content")?4:"width"===t?1:0,s=0;r<4;r+=2)"margin"===n&&(s+=pe.css(e,n+Re[r],!0,o)),i?("content"===n&&(s-=pe.css(e,"padding"+Re[r],!0,o)),"margin"!==n&&(s-=pe.css(e,"border"+Re[r]+"Width",!0,o))):(s+=pe.css(e,"padding"+Re[r],!0,o),"padding"!==n&&(s+=pe.css(e,"border"+Re[r]+"Width",!0,o)));return s}function N(e,t,n){var i,o=!0,r=rt(e),s="border-box"===pe.css(e,"boxSizing",!1,r);if(e.getClientRects().length&&(i=e.getBoundingClientRect()[t]),i<=0||null==i){if(i=$(e,t,r),(i<0||null==i)&&(i=e.style[t]),ot.test(i))return i;o=s&&(ce.boxSizingReliable()||i===e.style[t]),i=parseFloat(i)||0}return i+j(e,t,n||(s?"border":"content"),o,r)+"px"}function I(e,t,n,i,o){return new I.prototype.init(e,t,n,i,o)}function F(){pt&&(e.requestAnimationFrame(F),pe.fx.tick())}function L(){return e.setTimeout(function(){dt=void 0}),dt=pe.now()}function R(e,t){var n,i=0,o={height:e};for(t=t?1:0;i<4;i+=2-t)n=Re[i],o["margin"+n]=o["padding"+n]=e;return t&&(o.opacity=o.width=e),o}function H(e,t,n){for(var i,o=(B.tweeners[t]||[]).concat(B.tweeners["*"]),r=0,s=o.length;r<s;r++)if(i=o[r].call(n,t,e))return i}function q(e,t,n){var i,o,r,s,a,l,u,c,d="width"in t||"height"in t,p=this,f={},h=e.style,m=e.nodeType&&He(e),v=Me.get(e,"fxshow");n.queue||(s=pe._queueHooks(e,"fx"),null==s.unqueued&&(s.unqueued=0,a=s.empty.fire,s.empty.fire=function(){s.unqueued||a()}),s.unqueued++,p.always(function(){p.always(function(){s.unqueued--,pe.queue(e,"fx").length||s.empty.fire()})}));for(i in t)if(o=t[i],ft.test(o)){if(delete t[i],r=r||"toggle"===o,o===(m?"hide":"show")){if("show"!==o||!v||void 0===v[i])continue;m=!0}f[i]=v&&v[i]||pe.style(e,i)}if(l=!pe.isEmptyObject(t),l||!pe.isEmptyObject(f)){d&&1===e.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],u=v&&v.display,null==u&&(u=Me.get(e,"display")),c=pe.css(e,"display"),"none"===c&&(u?c=u:(g([e],!0),u=e.style.display||u,c=pe.css(e,"display"),g([e]))),("inline"===c||"inline-block"===c&&null!=u)&&"none"===pe.css(e,"float")&&(l||(p.done(function(){h.display=u}),null==u&&(c=h.display,u="none"===c?"":c)),h.display="inline-block")),n.overflow&&(h.overflow="hidden",p.always(function(){h.overflow=n.overflow[0],h.overflowX=n.overflow[1],h.overflowY=n.overflow[2]})),l=!1;for(i in f)l||(v?"hidden"in v&&(m=v.hidden):v=Me.access(e,"fxshow",{display:u}),r&&(v.hidden=!m),m&&g([e],!0),p.done(function(){m||g([e]),Me.remove(e,"fxshow");for(i in f)pe.style(e,i,f[i])})),l=H(m?v[i]:0,i,p),i in v||(v[i]=l.start,m&&(l.end=l.start,l.start=0))}}function z(e,t){var n,i,o,r,s;for(n in e)if(i=pe.camelCase(n),o=t[i],r=e[n],pe.isArray(r)&&(o=r[1],r=e[n]=r[0]),n!==i&&(e[i]=r,delete e[n]),s=pe.cssHooks[i],s&&"expand"in s){r=s.expand(r),delete e[i];for(n in r)n in e||(e[n]=r[n],t[n]=o)}else t[i]=o}function B(e,t,n){var i,o,r=0,s=B.prefilters.length,a=pe.Deferred().always(function(){delete l.elem}),l=function(){if(o)return!1;for(var t=dt||L(),n=Math.max(0,u.startTime+u.duration-t),i=n/u.duration||0,r=1-i,s=0,l=u.tweens.length;s<l;s++)u.tweens[s].run(r);return a.notifyWith(e,[u,r,n]),r<1&&l?n:(a.resolveWith(e,[u]),!1)},u=a.promise({elem:e,props:pe.extend({},t),opts:pe.extend(!0,{specialEasing:{},easing:pe.easing._default},n),originalProperties:t,originalOptions:n,startTime:dt||L(),duration:n.duration,tweens:[],createTween:function(t,n){var i=pe.Tween(e,u.opts,t,n,u.opts.specialEasing[t]||u.opts.easing);return u.tweens.push(i),i},stop:function(t){var n=0,i=t?u.tweens.length:0;if(o)return this;for(o=!0;n<i;n++)u.tweens[n].run(1);return t?(a.notifyWith(e,[u,1,0]),a.resolveWith(e,[u,t])):a.rejectWith(e,[u,t]),this}}),c=u.props;for(z(c,u.opts.specialEasing);r<s;r++)if(i=B.prefilters[r].call(u,e,c,u.opts))return pe.isFunction(i.stop)&&(pe._queueHooks(u.elem,u.opts.queue).stop=pe.proxy(i.stop,i)),i;return pe.map(c,H,u),pe.isFunction(u.opts.start)&&u.opts.start.call(e,u),pe.fx.timer(pe.extend(l,{elem:e,anim:u,queue:u.opts.queue})),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always)}function W(e){return e.getAttribute&&e.getAttribute("class")||""}function U(e,t,n,i){var o;if(pe.isArray(t))pe.each(t,function(t,o){n||_t.test(e)?i(e,o):U(e+"["+("object"==typeof o&&null!=o?t:"")+"]",o,n,i)});else if(n||"object"!==pe.type(t))i(e,t);else for(o in t)U(e+"["+o+"]",t[o],n,i)}function V(e){return function(t,n){"string"!=typeof t&&(n=t,t="*");var i,o=0,r=t.toLowerCase().match(Pe)||[];if(pe.isFunction(n))for(;i=r[o++];)"+"===i[0]?(i=i.slice(1)||"*",(e[i]=e[i]||[]).unshift(n)):(e[i]=e[i]||[]).push(n)}}function G(e,t,n,i){function o(a){var l;return r[a]=!0,pe.each(e[a]||[],function(e,a){var u=a(t,n,i);return"string"!=typeof u||s||r[u]?s?!(l=u):void 0:(t.dataTypes.unshift(u),o(u),!1)}),l}var r={},s=e===Lt;return o(t.dataTypes[0])||!r["*"]&&o("*")}function K(e,t){var n,i,o=pe.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((o[n]?e:i||(i={}))[n]=t[n]);return i&&pe.extend(!0,e,i),e}function X(e,t,n){for(var i,o,r,s,a=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===i&&(i=e.mimeType||t.getResponseHeader("Content-Type"));if(i)for(o in a)if(a[o]&&a[o].test(i)){l.unshift(o);break}if(l[0]in n)r=l[0];else{for(o in n){if(!l[0]||e.converters[o+" "+l[0]]){r=o;break}s||(s=o)}r=r||s}if(r)return r!==l[0]&&l.unshift(r),n[r]}function Y(e,t,n,i){var o,r,s,a,l,u={},c=e.dataTypes.slice();if(c[1])for(s in e.converters)u[s.toLowerCase()]=e.converters[s];for(r=c.shift();r;)if(e.responseFields[r]&&(n[e.responseFields[r]]=t),!l&&i&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=r,r=c.shift())if("*"===r)r=l;else if("*"!==l&&l!==r){if(s=u[l+" "+r]||u["* "+r],!s)for(o in u)if(a=o.split(" "),a[1]===r&&(s=u[l+" "+a[0]]||u["* "+a[0]])){s===!0?s=u[o]:u[o]!==!0&&(r=a[0],c.unshift(a[1]));break}if(s!==!0)if(s&&e["throws"])t=s(t);else try{t=s(t)}catch(d){return{state:"parsererror",error:s?d:"No conversion from "+l+" to "+r}}}return{state:"success",data:t}}function Q(e){return pe.isWindow(e)?e:9===e.nodeType&&e.defaultView}var Z=[],J=e.document,ee=Object.getPrototypeOf,te=Z.slice,ne=Z.concat,ie=Z.push,oe=Z.indexOf,re={},se=re.toString,ae=re.hasOwnProperty,le=ae.toString,ue=le.call(Object),ce={},de="3.1.0",pe=function(e,t){return new pe.fn.init(e,t)},fe=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,he=/^-ms-/,ge=/-([a-z])/g,me=function(e,t){return t.toUpperCase()};pe.fn=pe.prototype={jquery:de,constructor:pe,length:0,toArray:function(){return te.call(this)},get:function(e){return null!=e?e<0?this[e+this.length]:this[e]:te.call(this)},pushStack:function(e){var t=pe.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return pe.each(this,e)},map:function(e){return this.pushStack(pe.map(this,function(t,n){return e.call(t,n,t)}))},slice:function(){return this.pushStack(te.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(n>=0&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:ie,sort:Z.sort,splice:Z.splice},pe.extend=pe.fn.extend=function(){var e,t,n,i,o,r,s=arguments[0]||{},a=1,l=arguments.length,u=!1;for("boolean"==typeof s&&(u=s,s=arguments[a]||{},a++),"object"==typeof s||pe.isFunction(s)||(s={}),a===l&&(s=this,a--);a<l;a++)if(null!=(e=arguments[a]))for(t in e)n=s[t],i=e[t],s!==i&&(u&&i&&(pe.isPlainObject(i)||(o=pe.isArray(i)))?(o?(o=!1,r=n&&pe.isArray(n)?n:[]):r=n&&pe.isPlainObject(n)?n:{},s[t]=pe.extend(u,r,i)):void 0!==i&&(s[t]=i));return s},pe.extend({expando:"jQuery"+(de+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return"function"===pe.type(e)},isArray:Array.isArray,isWindow:function(e){return null!=e&&e===e.window},isNumeric:function(e){var t=pe.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},isPlainObject:function(e){var t,n;return!(!e||"[object Object]"!==se.call(e)||(t=ee(e))&&(n=ae.call(t,"constructor")&&t.constructor,"function"!=typeof n||le.call(n)!==ue))},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?re[se.call(e)]||"object":typeof e},globalEval:function(e){n(e)},camelCase:function(e){return e.replace(he,"ms-").replace(ge,me)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t){var n,o=0;if(i(e))for(n=e.length;o<n&&t.call(e[o],o,e[o])!==!1;o++);else for(o in e)if(t.call(e[o],o,e[o])===!1)break;return e},trim:function(e){return null==e?"":(e+"").replace(fe,"")},makeArray:function(e,t){var n=t||[];return null!=e&&(i(Object(e))?pe.merge(n,"string"==typeof e?[e]:e):ie.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:oe.call(t,e,n)},merge:function(e,t){for(var n=+t.length,i=0,o=e.length;i<n;i++)e[o++]=t[i];return e.length=o,e},grep:function(e,t,n){for(var i,o=[],r=0,s=e.length,a=!n;r<s;r++)i=!t(e[r],r),i!==a&&o.push(e[r]);return o},map:function(e,t,n){var o,r,s=0,a=[];if(i(e))for(o=e.length;s<o;s++)r=t(e[s],s,n),null!=r&&a.push(r);else for(s in e)r=t(e[s],s,n),null!=r&&a.push(r);return ne.apply([],a)},guid:1,proxy:function(e,t){var n,i,o;if("string"==typeof t&&(n=e[t],t=e,e=n),pe.isFunction(e))return i=te.call(arguments,2),o=function(){return e.apply(t||this,i.concat(te.call(arguments)))},o.guid=e.guid=e.guid||pe.guid++,o},now:Date.now,support:ce}),"function"==typeof Symbol&&(pe.fn[Symbol.iterator]=Z[Symbol.iterator]),pe.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){re["[object "+t+"]"]=t.toLowerCase()});var ve=function(e){function t(e,t,n,i){var o,r,s,a,l,u,c,p=t&&t.ownerDocument,h=t?t.nodeType:9;if(n=n||[],"string"!=typeof e||!e||1!==h&&9!==h&&11!==h)return n;if(!i&&((t?t.ownerDocument||t:q)!==M&&D(t),t=t||M,N)){if(11!==h&&(l=ve.exec(e)))if(o=l[1]){if(9===h){if(!(s=t.getElementById(o)))return n;if(s.id===o)return n.push(s),n}else if(p&&(s=p.getElementById(o))&&R(t,s)&&s.id===o)return n.push(s),n}else{if(l[2])return Z.apply(n,t.getElementsByTagName(e)),n;if((o=l[3])&&x.getElementsByClassName&&t.getElementsByClassName)return Z.apply(n,t.getElementsByClassName(o)),n}if(x.qsa&&!V[e+" "]&&(!I||!I.test(e))){if(1!==h)p=t,c=e;else if("object"!==t.nodeName.toLowerCase()){for((a=t.getAttribute("id"))?a=a.replace(we,xe):t.setAttribute("id",a=H),u=_(e),r=u.length;r--;)u[r]="#"+a+" "+f(u[r]);c=u.join(","),p=ye.test(e)&&d(t.parentNode)||t}if(c)try{return Z.apply(n,p.querySelectorAll(c)),n}catch(g){}finally{a===H&&t.removeAttribute("id")}}}return P(e.replace(ae,"$1"),t,n,i)}function n(){function e(n,i){return t.push(n+" ")>C.cacheLength&&delete e[t.shift()],e[n+" "]=i}var t=[];return e}function i(e){return e[H]=!0,e}function o(e){var t=M.createElement("fieldset");try{return!!e(t)}catch(n){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function r(e,t){for(var n=e.split("|"),i=n.length;i--;)C.attrHandle[n[i]]=t}function s(e,t){var n=t&&e,i=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(i)return i;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function a(e){return function(t){var n=t.nodeName.toLowerCase();return"input"===n&&t.type===e}}function l(e){return function(t){var n=t.nodeName.toLowerCase();return("input"===n||"button"===n)&&t.type===e}}function u(e){return function(t){return"label"in t&&t.disabled===e||"form"in t&&t.disabled===e||"form"in t&&t.disabled===!1&&(t.isDisabled===e||t.isDisabled!==!e&&("label"in t||!Se(t))!==e)}}function c(e){return i(function(t){return t=+t,i(function(n,i){for(var o,r=e([],n.length,t),s=r.length;s--;)n[o=r[s]]&&(n[o]=!(i[o]=n[o]))})})}function d(e){return e&&"undefined"!=typeof e.getElementsByTagName&&e}function p(){}function f(e){for(var t=0,n=e.length,i="";t<n;t++)i+=e[t].value;return i}function h(e,t,n){var i=t.dir,o=t.next,r=o||i,s=n&&"parentNode"===r,a=B++;return t.first?function(t,n,o){for(;t=t[i];)if(1===t.nodeType||s)return e(t,n,o)}:function(t,n,l){var u,c,d,p=[z,a];if(l){for(;t=t[i];)if((1===t.nodeType||s)&&e(t,n,l))return!0}else for(;t=t[i];)if(1===t.nodeType||s)if(d=t[H]||(t[H]={}),c=d[t.uniqueID]||(d[t.uniqueID]={}),o&&o===t.nodeName.toLowerCase())t=t[i]||t;else{if((u=c[r])&&u[0]===z&&u[1]===a)return p[2]=u[2];if(c[r]=p,p[2]=e(t,n,l))return!0}}}function g(e){return e.length>1?function(t,n,i){for(var o=e.length;o--;)if(!e[o](t,n,i))return!1;return!0}:e[0]}function m(e,n,i){for(var o=0,r=n.length;o<r;o++)t(e,n[o],i);return i}function v(e,t,n,i,o){for(var r,s=[],a=0,l=e.length,u=null!=t;a<l;a++)(r=e[a])&&(n&&!n(r,i,o)||(s.push(r),u&&t.push(a)));return s}function y(e,t,n,o,r,s){return o&&!o[H]&&(o=y(o)),r&&!r[H]&&(r=y(r,s)),i(function(i,s,a,l){var u,c,d,p=[],f=[],h=s.length,g=i||m(t||"*",a.nodeType?[a]:a,[]),y=!e||!i&&t?g:v(g,p,e,a,l),b=n?r||(i?e:h||o)?[]:s:y;if(n&&n(y,b,a,l),o)for(u=v(b,f),o(u,[],a,l),c=u.length;c--;)(d=u[c])&&(b[f[c]]=!(y[f[c]]=d));if(i){if(r||e){if(r){for(u=[],c=b.length;c--;)(d=b[c])&&u.push(y[c]=d);r(null,b=[],u,l)}for(c=b.length;c--;)(d=b[c])&&(u=r?ee(i,d):p[c])>-1&&(i[u]=!(s[u]=d))}}else b=v(b===s?b.splice(h,b.length):b),r?r(null,s,b,l):Z.apply(s,b)})}function b(e){for(var t,n,i,o=e.length,r=C.relative[e[0].type],s=r||C.relative[" "],a=r?1:0,l=h(function(e){return e===t},s,!0),u=h(function(e){return ee(t,e)>-1},s,!0),c=[function(e,n,i){var o=!r&&(i||n!==A)||((t=n).nodeType?l(e,n,i):u(e,n,i));return t=null,o}];a<o;a++)if(n=C.relative[e[a].type])c=[h(g(c),n)];else{if(n=C.filter[e[a].type].apply(null,e[a].matches),n[H]){for(i=++a;i<o&&!C.relative[e[i].type];i++);return y(a>1&&g(c),a>1&&f(e.slice(0,a-1).concat({value:" "===e[a-2].type?"*":""})).replace(ae,"$1"),n,a<i&&b(e.slice(a,i)),i<o&&b(e=e.slice(i)),i<o&&f(e))}c.push(n)}return g(c)}function k(e,n){var o=n.length>0,r=e.length>0,s=function(i,s,a,l,u){var c,d,p,f=0,h="0",g=i&&[],m=[],y=A,b=i||r&&C.find.TAG("*",u),k=z+=null==y?1:Math.random()||.1,w=b.length;for(u&&(A=s===M||s||u);h!==w&&null!=(c=b[h]);h++){if(r&&c){for(d=0,s||c.ownerDocument===M||(D(c),a=!N);p=e[d++];)if(p(c,s||M,a)){l.push(c);break}u&&(z=k)}o&&((c=!p&&c)&&f--,i&&g.push(c))}if(f+=h,o&&h!==f){for(d=0;p=n[d++];)p(g,m,s,a);if(i){if(f>0)for(;h--;)g[h]||m[h]||(m[h]=Y.call(l));m=v(m)}Z.apply(l,m),u&&!i&&m.length>0&&f+n.length>1&&t.uniqueSort(l)}return u&&(z=k,A=y),g};return o?i(s):s}var w,x,C,S,T,_,O,P,A,$,E,D,M,j,N,I,F,L,R,H="sizzle"+1*new Date,q=e.document,z=0,B=0,W=n(),U=n(),V=n(),G=function(e,t){return e===t&&(E=!0),0},K={}.hasOwnProperty,X=[],Y=X.pop,Q=X.push,Z=X.push,J=X.slice,ee=function(e,t){for(var n=0,i=e.length;n<i;n++)if(e[n]===t)return n;return-1},te="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",ne="[\\x20\\t\\r\\n\\f]",ie="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",oe="\\["+ne+"*("+ie+")(?:"+ne+"*([*^$|!~]?=)"+ne+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+ie+"))|)"+ne+"*\\]",re=":("+ie+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+oe+")*)|.*)\\)|)",se=new RegExp(ne+"+","g"),ae=new RegExp("^"+ne+"+|((?:^|[^\\\\])(?:\\\\.)*)"+ne+"+$","g"),le=new RegExp("^"+ne+"*,"+ne+"*"),ue=new RegExp("^"+ne+"*([>+~]|"+ne+")"+ne+"*"),ce=new RegExp("="+ne+"*([^\\]'\"]*?)"+ne+"*\\]","g"),de=new RegExp(re),pe=new RegExp("^"+ie+"$"),fe={ID:new RegExp("^#("+ie+")"),CLASS:new RegExp("^\\.("+ie+")"),TAG:new RegExp("^("+ie+"|[*])"),ATTR:new RegExp("^"+oe),PSEUDO:new RegExp("^"+re),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+ne+"*(even|odd|(([+-]|)(\\d*)n|)"+ne+"*(?:([+-]|)"+ne+"*(\\d+)|))"+ne+"*\\)|)","i"),bool:new RegExp("^(?:"+te+")$","i"),needsContext:new RegExp("^"+ne+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+ne+"*((?:-\\d)?\\d*)"+ne+"*\\)|)(?=[^-]|$)","i")},he=/^(?:input|select|textarea|button)$/i,ge=/^h\d$/i,me=/^[^{]+\{\s*\[native \w/,ve=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ye=/[+~]/,be=new RegExp("\\\\([\\da-f]{1,6}"+ne+"?|("+ne+")|.)","ig"),ke=function(e,t,n){var i="0x"+t-65536;return i!==i||n?t:i<0?String.fromCharCode(i+65536):String.fromCharCode(i>>10|55296,1023&i|56320)},we=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,xe=function(e,t){return t?"\0"===e?"�":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},Ce=function(){D()},Se=h(function(e){return e.disabled===!0},{dir:"parentNode",next:"legend"});try{Z.apply(X=J.call(q.childNodes),q.childNodes),X[q.childNodes.length].nodeType}catch(Te){Z={apply:X.length?function(e,t){Q.apply(e,J.call(t))}:function(e,t){for(var n=e.length,i=0;e[n++]=t[i++];);e.length=n-1}}}x=t.support={},T=t.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return!!t&&"HTML"!==t.nodeName},D=t.setDocument=function(e){var t,n,i=e?e.ownerDocument||e:q;return i!==M&&9===i.nodeType&&i.documentElement?(M=i,j=M.documentElement,N=!T(M),q!==M&&(n=M.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",Ce,!1):n.attachEvent&&n.attachEvent("onunload",Ce)),x.attributes=o(function(e){return e.className="i",!e.getAttribute("className")}),x.getElementsByTagName=o(function(e){return e.appendChild(M.createComment("")),!e.getElementsByTagName("*").length}),x.getElementsByClassName=me.test(M.getElementsByClassName),x.getById=o(function(e){return j.appendChild(e).id=H,!M.getElementsByName||!M.getElementsByName(H).length}),x.getById?(C.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&N){var n=t.getElementById(e);return n?[n]:[]}},C.filter.ID=function(e){var t=e.replace(be,ke);return function(e){return e.getAttribute("id")===t}}):(delete C.find.ID,C.filter.ID=function(e){var t=e.replace(be,ke);return function(e){var n="undefined"!=typeof e.getAttributeNode&&e.getAttributeNode("id");return n&&n.value===t}}),C.find.TAG=x.getElementsByTagName?function(e,t){return"undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):x.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,i=[],o=0,r=t.getElementsByTagName(e);if("*"===e){for(;n=r[o++];)1===n.nodeType&&i.push(n);return i}return r},C.find.CLASS=x.getElementsByClassName&&function(e,t){if("undefined"!=typeof t.getElementsByClassName&&N)return t.getElementsByClassName(e)},F=[],I=[],(x.qsa=me.test(M.querySelectorAll))&&(o(function(e){j.appendChild(e).innerHTML="<a id='"+H+"'></a><select id='"+H+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&I.push("[*^$]="+ne+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||I.push("\\["+ne+"*(?:value|"+te+")"),e.querySelectorAll("[id~="+H+"-]").length||I.push("~="),e.querySelectorAll(":checked").length||I.push(":checked"),e.querySelectorAll("a#"+H+"+*").length||I.push(".#.+[+~]")}),o(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=M.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&I.push("name"+ne+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&I.push(":enabled",":disabled"),j.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&I.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),I.push(",.*:")})),(x.matchesSelector=me.test(L=j.matches||j.webkitMatchesSelector||j.mozMatchesSelector||j.oMatchesSelector||j.msMatchesSelector))&&o(function(e){x.disconnectedMatch=L.call(e,"*"),L.call(e,"[s!='']:x"),F.push("!=",re)}),I=I.length&&new RegExp(I.join("|")),F=F.length&&new RegExp(F.join("|")),t=me.test(j.compareDocumentPosition),R=t||me.test(j.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,i=t&&t.parentNode;return e===i||!(!i||1!==i.nodeType||!(n.contains?n.contains(i):e.compareDocumentPosition&&16&e.compareDocumentPosition(i)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},G=t?function(e,t){if(e===t)return E=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n?n:(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1,1&n||!x.sortDetached&&t.compareDocumentPosition(e)===n?e===M||e.ownerDocument===q&&R(q,e)?-1:t===M||t.ownerDocument===q&&R(q,t)?1:$?ee($,e)-ee($,t):0:4&n?-1:1)}:function(e,t){if(e===t)return E=!0,0;var n,i=0,o=e.parentNode,r=t.parentNode,a=[e],l=[t];if(!o||!r)return e===M?-1:t===M?1:o?-1:r?1:$?ee($,e)-ee($,t):0;if(o===r)return s(e,t);for(n=e;n=n.parentNode;)a.unshift(n);for(n=t;n=n.parentNode;)l.unshift(n);for(;a[i]===l[i];)i++;return i?s(a[i],l[i]):a[i]===q?-1:l[i]===q?1:0},M):M},t.matches=function(e,n){return t(e,null,null,n)},t.matchesSelector=function(e,n){if((e.ownerDocument||e)!==M&&D(e),n=n.replace(ce,"='$1']"),x.matchesSelector&&N&&!V[n+" "]&&(!F||!F.test(n))&&(!I||!I.test(n)))try{var i=L.call(e,n);if(i||x.disconnectedMatch||e.document&&11!==e.document.nodeType)return i}catch(o){}return t(n,M,null,[e]).length>0},t.contains=function(e,t){return(e.ownerDocument||e)!==M&&D(e),R(e,t)},t.attr=function(e,t){(e.ownerDocument||e)!==M&&D(e);var n=C.attrHandle[t.toLowerCase()],i=n&&K.call(C.attrHandle,t.toLowerCase())?n(e,t,!N):void 0;return void 0!==i?i:x.attributes||!N?e.getAttribute(t):(i=e.getAttributeNode(t))&&i.specified?i.value:null},t.escape=function(e){return(e+"").replace(we,xe)},t.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},t.uniqueSort=function(e){var t,n=[],i=0,o=0;if(E=!x.detectDuplicates,$=!x.sortStable&&e.slice(0),e.sort(G),E){for(;t=e[o++];)t===e[o]&&(i=n.push(o));for(;i--;)e.splice(n[i],1)}return $=null,e},S=t.getText=function(e){var t,n="",i=0,o=e.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=S(e)}else if(3===o||4===o)return e.nodeValue}else for(;t=e[i++];)n+=S(t);return n},C=t.selectors={cacheLength:50,createPseudo:i,match:fe,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(be,ke),e[3]=(e[3]||e[4]||e[5]||"").replace(be,ke),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||t.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&t.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return fe.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&de.test(n)&&(t=_(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(be,ke).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=W[e+" "];return t||(t=new RegExp("(^|"+ne+")"+e+"("+ne+"|$)"))&&W(e,function(e){return t.test("string"==typeof e.className&&e.className||"undefined"!=typeof e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(e,n,i){return function(o){var r=t.attr(o,e);return null==r?"!="===n:!n||(r+="","="===n?r===i:"!="===n?r!==i:"^="===n?i&&0===r.indexOf(i):"*="===n?i&&r.indexOf(i)>-1:"$="===n?i&&r.slice(-i.length)===i:"~="===n?(" "+r.replace(se," ")+" ").indexOf(i)>-1:"|="===n&&(r===i||r.slice(0,i.length+1)===i+"-"))}},CHILD:function(e,t,n,i,o){var r="nth"!==e.slice(0,3),s="last"!==e.slice(-4),a="of-type"===t;return 1===i&&0===o?function(e){return!!e.parentNode}:function(t,n,l){var u,c,d,p,f,h,g=r!==s?"nextSibling":"previousSibling",m=t.parentNode,v=a&&t.nodeName.toLowerCase(),y=!l&&!a,b=!1;if(m){if(r){for(;g;){for(p=t;p=p[g];)if(a?p.nodeName.toLowerCase()===v:1===p.nodeType)return!1;h=g="only"===e&&!h&&"nextSibling"}return!0}if(h=[s?m.firstChild:m.lastChild],s&&y){for(p=m,d=p[H]||(p[H]={}),c=d[p.uniqueID]||(d[p.uniqueID]={}),u=c[e]||[],f=u[0]===z&&u[1],b=f&&u[2],p=f&&m.childNodes[f];p=++f&&p&&p[g]||(b=f=0)||h.pop();)if(1===p.nodeType&&++b&&p===t){c[e]=[z,f,b];break}}else if(y&&(p=t,d=p[H]||(p[H]={}),c=d[p.uniqueID]||(d[p.uniqueID]={}),u=c[e]||[],f=u[0]===z&&u[1],b=f),b===!1)for(;(p=++f&&p&&p[g]||(b=f=0)||h.pop())&&((a?p.nodeName.toLowerCase()!==v:1!==p.nodeType)||!++b||(y&&(d=p[H]||(p[H]={}),c=d[p.uniqueID]||(d[p.uniqueID]={}),c[e]=[z,b]),p!==t)););return b-=o,b===i||b%i===0&&b/i>=0}}},PSEUDO:function(e,n){var o,r=C.pseudos[e]||C.setFilters[e.toLowerCase()]||t.error("unsupported pseudo: "+e);return r[H]?r(n):r.length>1?(o=[e,e,"",n],C.setFilters.hasOwnProperty(e.toLowerCase())?i(function(e,t){for(var i,o=r(e,n),s=o.length;s--;)i=ee(e,o[s]),e[i]=!(t[i]=o[s])}):function(e){return r(e,0,o)}):r}},pseudos:{not:i(function(e){var t=[],n=[],o=O(e.replace(ae,"$1"));return o[H]?i(function(e,t,n,i){for(var r,s=o(e,null,i,[]),a=e.length;a--;)(r=s[a])&&(e[a]=!(t[a]=r))}):function(e,i,r){return t[0]=e,o(t,null,r,n),t[0]=null,!n.pop()}}),has:i(function(e){return function(n){return t(e,n).length>0}}),contains:i(function(e){return e=e.replace(be,ke),function(t){return(t.textContent||t.innerText||S(t)).indexOf(e)>-1}}),lang:i(function(e){return pe.test(e||"")||t.error("unsupported lang: "+e),e=e.replace(be,ke).toLowerCase(),function(t){var n;do if(n=N?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return n=n.toLowerCase(),n===e||0===n.indexOf(e+"-");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===j},focus:function(e){return e===M.activeElement&&(!M.hasFocus||M.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:u(!1),disabled:u(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;
return!0},parent:function(e){return!C.pseudos.empty(e)},header:function(e){return ge.test(e.nodeName)},input:function(e){return he.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:c(function(){return[0]}),last:c(function(e,t){return[t-1]}),eq:c(function(e,t,n){return[n<0?n+t:n]}),even:c(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:c(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:c(function(e,t,n){for(var i=n<0?n+t:n;--i>=0;)e.push(i);return e}),gt:c(function(e,t,n){for(var i=n<0?n+t:n;++i<t;)e.push(i);return e})}},C.pseudos.nth=C.pseudos.eq;for(w in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})C.pseudos[w]=a(w);for(w in{submit:!0,reset:!0})C.pseudos[w]=l(w);return p.prototype=C.filters=C.pseudos,C.setFilters=new p,_=t.tokenize=function(e,n){var i,o,r,s,a,l,u,c=U[e+" "];if(c)return n?0:c.slice(0);for(a=e,l=[],u=C.preFilter;a;){i&&!(o=le.exec(a))||(o&&(a=a.slice(o[0].length)||a),l.push(r=[])),i=!1,(o=ue.exec(a))&&(i=o.shift(),r.push({value:i,type:o[0].replace(ae," ")}),a=a.slice(i.length));for(s in C.filter)!(o=fe[s].exec(a))||u[s]&&!(o=u[s](o))||(i=o.shift(),r.push({value:i,type:s,matches:o}),a=a.slice(i.length));if(!i)break}return n?a.length:a?t.error(e):U(e,l).slice(0)},O=t.compile=function(e,t){var n,i=[],o=[],r=V[e+" "];if(!r){for(t||(t=_(e)),n=t.length;n--;)r=b(t[n]),r[H]?i.push(r):o.push(r);r=V(e,k(o,i)),r.selector=e}return r},P=t.select=function(e,t,n,i){var o,r,s,a,l,u="function"==typeof e&&e,c=!i&&_(e=u.selector||e);if(n=n||[],1===c.length){if(r=c[0]=c[0].slice(0),r.length>2&&"ID"===(s=r[0]).type&&x.getById&&9===t.nodeType&&N&&C.relative[r[1].type]){if(t=(C.find.ID(s.matches[0].replace(be,ke),t)||[])[0],!t)return n;u&&(t=t.parentNode),e=e.slice(r.shift().value.length)}for(o=fe.needsContext.test(e)?0:r.length;o--&&(s=r[o],!C.relative[a=s.type]);)if((l=C.find[a])&&(i=l(s.matches[0].replace(be,ke),ye.test(r[0].type)&&d(t.parentNode)||t))){if(r.splice(o,1),e=i.length&&f(r),!e)return Z.apply(n,i),n;break}}return(u||O(e,c))(i,t,!N,n,!t||ye.test(e)&&d(t.parentNode)||t),n},x.sortStable=H.split("").sort(G).join("")===H,x.detectDuplicates=!!E,D(),x.sortDetached=o(function(e){return 1&e.compareDocumentPosition(M.createElement("fieldset"))}),o(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||r("type|href|height|width",function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),x.attributes&&o(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||r("value",function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),o(function(e){return null==e.getAttribute("disabled")})||r(te,function(e,t,n){var i;if(!n)return e[t]===!0?t.toLowerCase():(i=e.getAttributeNode(t))&&i.specified?i.value:null}),t}(e);pe.find=ve,pe.expr=ve.selectors,pe.expr[":"]=pe.expr.pseudos,pe.uniqueSort=pe.unique=ve.uniqueSort,pe.text=ve.getText,pe.isXMLDoc=ve.isXML,pe.contains=ve.contains,pe.escapeSelector=ve.escape;var ye=function(e,t,n){for(var i=[],o=void 0!==n;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(o&&pe(e).is(n))break;i.push(e)}return i},be=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},ke=pe.expr.match.needsContext,we=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,xe=/^.[^:#\[\.,]*$/;pe.filter=function(e,t,n){var i=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===i.nodeType?pe.find.matchesSelector(i,e)?[i]:[]:pe.find.matches(e,pe.grep(t,function(e){return 1===e.nodeType}))},pe.fn.extend({find:function(e){var t,n,i=this.length,o=this;if("string"!=typeof e)return this.pushStack(pe(e).filter(function(){for(t=0;t<i;t++)if(pe.contains(o[t],this))return!0}));for(n=this.pushStack([]),t=0;t<i;t++)pe.find(e,o[t],n);return i>1?pe.uniqueSort(n):n},filter:function(e){return this.pushStack(o(this,e||[],!1))},not:function(e){return this.pushStack(o(this,e||[],!0))},is:function(e){return!!o(this,"string"==typeof e&&ke.test(e)?pe(e):e||[],!1).length}});var Ce,Se=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,Te=pe.fn.init=function(e,t,n){var i,o;if(!e)return this;if(n=n||Ce,"string"==typeof e){if(i="<"===e[0]&&">"===e[e.length-1]&&e.length>=3?[null,e,null]:Se.exec(e),!i||!i[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(i[1]){if(t=t instanceof pe?t[0]:t,pe.merge(this,pe.parseHTML(i[1],t&&t.nodeType?t.ownerDocument||t:J,!0)),we.test(i[1])&&pe.isPlainObject(t))for(i in t)pe.isFunction(this[i])?this[i](t[i]):this.attr(i,t[i]);return this}return o=J.getElementById(i[2]),o&&(this[0]=o,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):pe.isFunction(e)?void 0!==n.ready?n.ready(e):e(pe):pe.makeArray(e,this)};Te.prototype=pe.fn,Ce=pe(J);var _e=/^(?:parents|prev(?:Until|All))/,Oe={children:!0,contents:!0,next:!0,prev:!0};pe.fn.extend({has:function(e){var t=pe(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(pe.contains(this,t[e]))return!0})},closest:function(e,t){var n,i=0,o=this.length,r=[],s="string"!=typeof e&&pe(e);if(!ke.test(e))for(;i<o;i++)for(n=this[i];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(s?s.index(n)>-1:1===n.nodeType&&pe.find.matchesSelector(n,e))){r.push(n);break}return this.pushStack(r.length>1?pe.uniqueSort(r):r)},index:function(e){return e?"string"==typeof e?oe.call(pe(e),this[0]):oe.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(pe.uniqueSort(pe.merge(this.get(),pe(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),pe.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return ye(e,"parentNode")},parentsUntil:function(e,t,n){return ye(e,"parentNode",n)},next:function(e){return r(e,"nextSibling")},prev:function(e){return r(e,"previousSibling")},nextAll:function(e){return ye(e,"nextSibling")},prevAll:function(e){return ye(e,"previousSibling")},nextUntil:function(e,t,n){return ye(e,"nextSibling",n)},prevUntil:function(e,t,n){return ye(e,"previousSibling",n)},siblings:function(e){return be((e.parentNode||{}).firstChild,e)},children:function(e){return be(e.firstChild)},contents:function(e){return e.contentDocument||pe.merge([],e.childNodes)}},function(e,t){pe.fn[e]=function(n,i){var o=pe.map(this,t,n);return"Until"!==e.slice(-5)&&(i=n),i&&"string"==typeof i&&(o=pe.filter(i,o)),this.length>1&&(Oe[e]||pe.uniqueSort(o),_e.test(e)&&o.reverse()),this.pushStack(o)}});var Pe=/\S+/g;pe.Callbacks=function(e){e="string"==typeof e?s(e):pe.extend({},e);var t,n,i,o,r=[],a=[],l=-1,u=function(){for(o=e.once,i=t=!0;a.length;l=-1)for(n=a.shift();++l<r.length;)r[l].apply(n[0],n[1])===!1&&e.stopOnFalse&&(l=r.length,n=!1);e.memory||(n=!1),t=!1,o&&(r=n?[]:"")},c={add:function(){return r&&(n&&!t&&(l=r.length-1,a.push(n)),function i(t){pe.each(t,function(t,n){pe.isFunction(n)?e.unique&&c.has(n)||r.push(n):n&&n.length&&"string"!==pe.type(n)&&i(n)})}(arguments),n&&!t&&u()),this},remove:function(){return pe.each(arguments,function(e,t){for(var n;(n=pe.inArray(t,r,n))>-1;)r.splice(n,1),n<=l&&l--}),this},has:function(e){return e?pe.inArray(e,r)>-1:r.length>0},empty:function(){return r&&(r=[]),this},disable:function(){return o=a=[],r=n="",this},disabled:function(){return!r},lock:function(){return o=a=[],n||t||(r=n=""),this},locked:function(){return!!o},fireWith:function(e,n){return o||(n=n||[],n=[e,n.slice?n.slice():n],a.push(n),t||u()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!i}};return c},pe.extend({Deferred:function(t){var n=[["notify","progress",pe.Callbacks("memory"),pe.Callbacks("memory"),2],["resolve","done",pe.Callbacks("once memory"),pe.Callbacks("once memory"),0,"resolved"],["reject","fail",pe.Callbacks("once memory"),pe.Callbacks("once memory"),1,"rejected"]],i="pending",o={state:function(){return i},always:function(){return r.done(arguments).fail(arguments),this},"catch":function(e){return o.then(null,e)},pipe:function(){var e=arguments;return pe.Deferred(function(t){pe.each(n,function(n,i){var o=pe.isFunction(e[i[4]])&&e[i[4]];r[i[1]](function(){var e=o&&o.apply(this,arguments);e&&pe.isFunction(e.promise)?e.promise().progress(t.notify).done(t.resolve).fail(t.reject):t[i[0]+"With"](this,o?[e]:arguments)})}),e=null}).promise()},then:function(t,i,o){function r(t,n,i,o){return function(){var u=this,c=arguments,d=function(){var e,d;if(!(t<s)){if(e=i.apply(u,c),e===n.promise())throw new TypeError("Thenable self-resolution");d=e&&("object"==typeof e||"function"==typeof e)&&e.then,pe.isFunction(d)?o?d.call(e,r(s,n,a,o),r(s,n,l,o)):(s++,d.call(e,r(s,n,a,o),r(s,n,l,o),r(s,n,a,n.notifyWith))):(i!==a&&(u=void 0,c=[e]),(o||n.resolveWith)(u,c))}},p=o?d:function(){try{d()}catch(e){pe.Deferred.exceptionHook&&pe.Deferred.exceptionHook(e,p.stackTrace),t+1>=s&&(i!==l&&(u=void 0,c=[e]),n.rejectWith(u,c))}};t?p():(pe.Deferred.getStackHook&&(p.stackTrace=pe.Deferred.getStackHook()),e.setTimeout(p))}}var s=0;return pe.Deferred(function(e){n[0][3].add(r(0,e,pe.isFunction(o)?o:a,e.notifyWith)),n[1][3].add(r(0,e,pe.isFunction(t)?t:a)),n[2][3].add(r(0,e,pe.isFunction(i)?i:l))}).promise()},promise:function(e){return null!=e?pe.extend(e,o):o}},r={};return pe.each(n,function(e,t){var s=t[2],a=t[5];o[t[1]]=s.add,a&&s.add(function(){i=a},n[3-e][2].disable,n[0][2].lock),s.add(t[3].fire),r[t[0]]=function(){return r[t[0]+"With"](this===r?void 0:this,arguments),this},r[t[0]+"With"]=s.fireWith}),o.promise(r),t&&t.call(r,r),r},when:function(e){var t=arguments.length,n=t,i=Array(n),o=te.call(arguments),r=pe.Deferred(),s=function(e){return function(n){i[e]=this,o[e]=arguments.length>1?te.call(arguments):n,--t||r.resolveWith(i,o)}};if(t<=1&&(u(e,r.done(s(n)).resolve,r.reject),"pending"===r.state()||pe.isFunction(o[n]&&o[n].then)))return r.then();for(;n--;)u(o[n],s(n),r.reject);return r.promise()}});var Ae=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;pe.Deferred.exceptionHook=function(t,n){e.console&&e.console.warn&&t&&Ae.test(t.name)&&e.console.warn("jQuery.Deferred exception: "+t.message,t.stack,n)},pe.readyException=function(t){e.setTimeout(function(){throw t})};var $e=pe.Deferred();pe.fn.ready=function(e){return $e.then(e)["catch"](function(e){pe.readyException(e)}),this},pe.extend({isReady:!1,readyWait:1,holdReady:function(e){e?pe.readyWait++:pe.ready(!0)},ready:function(e){(e===!0?--pe.readyWait:pe.isReady)||(pe.isReady=!0,e!==!0&&--pe.readyWait>0||$e.resolveWith(J,[pe]))}}),pe.ready.then=$e.then,"complete"===J.readyState||"loading"!==J.readyState&&!J.documentElement.doScroll?e.setTimeout(pe.ready):(J.addEventListener("DOMContentLoaded",c),e.addEventListener("load",c));var Ee=function(e,t,n,i,o,r,s){var a=0,l=e.length,u=null==n;if("object"===pe.type(n)){o=!0;for(a in n)Ee(e,t,a,n[a],!0,r,s)}else if(void 0!==i&&(o=!0,pe.isFunction(i)||(s=!0),u&&(s?(t.call(e,i),t=null):(u=t,t=function(e,t,n){return u.call(pe(e),n)})),t))for(;a<l;a++)t(e[a],n,s?i:i.call(e[a],a,t(e[a],n)));return o?e:u?t.call(e):l?t(e[0],n):r},De=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};d.uid=1,d.prototype={cache:function(e){var t=e[this.expando];return t||(t={},De(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var i,o=this.cache(e);if("string"==typeof t)o[pe.camelCase(t)]=n;else for(i in t)o[pe.camelCase(i)]=t[i];return o},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][pe.camelCase(t)]},access:function(e,t,n){return void 0===t||t&&"string"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,i=e[this.expando];if(void 0!==i){if(void 0!==t){pe.isArray(t)?t=t.map(pe.camelCase):(t=pe.camelCase(t),t=t in i?[t]:t.match(Pe)||[]),n=t.length;for(;n--;)delete i[t[n]]}(void 0===t||pe.isEmptyObject(i))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!pe.isEmptyObject(t)}};var Me=new d,je=new d,Ne=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Ie=/[A-Z]/g;pe.extend({hasData:function(e){return je.hasData(e)||Me.hasData(e)},data:function(e,t,n){return je.access(e,t,n)},removeData:function(e,t){je.remove(e,t)},_data:function(e,t,n){return Me.access(e,t,n)},_removeData:function(e,t){Me.remove(e,t)}}),pe.fn.extend({data:function(e,t){var n,i,o,r=this[0],s=r&&r.attributes;if(void 0===e){if(this.length&&(o=je.get(r),1===r.nodeType&&!Me.get(r,"hasDataAttrs"))){for(n=s.length;n--;)s[n]&&(i=s[n].name,0===i.indexOf("data-")&&(i=pe.camelCase(i.slice(5)),p(r,i,o[i])));Me.set(r,"hasDataAttrs",!0)}return o}return"object"==typeof e?this.each(function(){je.set(this,e)}):Ee(this,function(t){var n;if(r&&void 0===t){if(n=je.get(r,e),void 0!==n)return n;if(n=p(r,e),void 0!==n)return n}else this.each(function(){je.set(this,e,t)})},null,t,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){je.remove(this,e)})}}),pe.extend({queue:function(e,t,n){var i;if(e)return t=(t||"fx")+"queue",i=Me.get(e,t),n&&(!i||pe.isArray(n)?i=Me.access(e,t,pe.makeArray(n)):i.push(n)),i||[]},dequeue:function(e,t){t=t||"fx";var n=pe.queue(e,t),i=n.length,o=n.shift(),r=pe._queueHooks(e,t),s=function(){pe.dequeue(e,t)};"inprogress"===o&&(o=n.shift(),i--),o&&("fx"===t&&n.unshift("inprogress"),delete r.stop,o.call(e,s,r)),!i&&r&&r.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return Me.get(e,n)||Me.access(e,n,{empty:pe.Callbacks("once memory").add(function(){Me.remove(e,[t+"queue",n])})})}}),pe.fn.extend({queue:function(e,t){var n=2;return"string"!=typeof e&&(t=e,e="fx",n--),arguments.length<n?pe.queue(this[0],e):void 0===t?this:this.each(function(){var n=pe.queue(this,e,t);pe._queueHooks(this,e),"fx"===e&&"inprogress"!==n[0]&&pe.dequeue(this,e)})},dequeue:function(e){return this.each(function(){pe.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,i=1,o=pe.Deferred(),r=this,s=this.length,a=function(){--i||o.resolveWith(r,[r])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";s--;)n=Me.get(r[s],e+"queueHooks"),n&&n.empty&&(i++,n.empty.add(a));return a(),o.promise(t)}});var Fe=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Le=new RegExp("^(?:([+-])=|)("+Fe+")([a-z%]*)$","i"),Re=["Top","Right","Bottom","Left"],He=function(e,t){return e=t||e,"none"===e.style.display||""===e.style.display&&pe.contains(e.ownerDocument,e)&&"none"===pe.css(e,"display")},qe=function(e,t,n,i){var o,r,s={};for(r in t)s[r]=e.style[r],e.style[r]=t[r];o=n.apply(e,i||[]);for(r in t)e.style[r]=s[r];return o},ze={};pe.fn.extend({show:function(){return g(this,!0)},hide:function(){return g(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){He(this)?pe(this).show():pe(this).hide()})}});var Be=/^(?:checkbox|radio)$/i,We=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,Ue=/^$|\/(?:java|ecma)script/i,Ve={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Ve.optgroup=Ve.option,Ve.tbody=Ve.tfoot=Ve.colgroup=Ve.caption=Ve.thead,Ve.th=Ve.td;var Ge=/<|&#?\w+;/;!function(){var e=J.createDocumentFragment(),t=e.appendChild(J.createElement("div")),n=J.createElement("input");n.setAttribute("type","radio"),n.setAttribute("checked","checked"),n.setAttribute("name","t"),t.appendChild(n),ce.checkClone=t.cloneNode(!0).cloneNode(!0).lastChild.checked,t.innerHTML="<textarea>x</textarea>",ce.noCloneChecked=!!t.cloneNode(!0).lastChild.defaultValue}();var Ke=J.documentElement,Xe=/^key/,Ye=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Qe=/^([^.]*)(?:\.(.+)|)/;pe.event={global:{},add:function(e,t,n,i,o){var r,s,a,l,u,c,d,p,f,h,g,m=Me.get(e);if(m)for(n.handler&&(r=n,n=r.handler,o=r.selector),o&&pe.find.matchesSelector(Ke,o),n.guid||(n.guid=pe.guid++),(l=m.events)||(l=m.events={}),(s=m.handle)||(s=m.handle=function(t){return"undefined"!=typeof pe&&pe.event.triggered!==t.type?pe.event.dispatch.apply(e,arguments):void 0}),t=(t||"").match(Pe)||[""],u=t.length;u--;)a=Qe.exec(t[u])||[],f=g=a[1],h=(a[2]||"").split(".").sort(),f&&(d=pe.event.special[f]||{},f=(o?d.delegateType:d.bindType)||f,d=pe.event.special[f]||{},c=pe.extend({type:f,origType:g,data:i,handler:n,guid:n.guid,selector:o,needsContext:o&&pe.expr.match.needsContext.test(o),namespace:h.join(".")},r),(p=l[f])||(p=l[f]=[],p.delegateCount=0,d.setup&&d.setup.call(e,i,h,s)!==!1||e.addEventListener&&e.addEventListener(f,s)),d.add&&(d.add.call(e,c),c.handler.guid||(c.handler.guid=n.guid)),o?p.splice(p.delegateCount++,0,c):p.push(c),pe.event.global[f]=!0)},remove:function(e,t,n,i,o){var r,s,a,l,u,c,d,p,f,h,g,m=Me.hasData(e)&&Me.get(e);if(m&&(l=m.events)){for(t=(t||"").match(Pe)||[""],u=t.length;u--;)if(a=Qe.exec(t[u])||[],f=g=a[1],h=(a[2]||"").split(".").sort(),f){for(d=pe.event.special[f]||{},f=(i?d.delegateType:d.bindType)||f,p=l[f]||[],a=a[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),s=r=p.length;r--;)c=p[r],!o&&g!==c.origType||n&&n.guid!==c.guid||a&&!a.test(c.namespace)||i&&i!==c.selector&&("**"!==i||!c.selector)||(p.splice(r,1),c.selector&&p.delegateCount--,d.remove&&d.remove.call(e,c));s&&!p.length&&(d.teardown&&d.teardown.call(e,h,m.handle)!==!1||pe.removeEvent(e,f,m.handle),delete l[f])}else for(f in l)pe.event.remove(e,f+t[u],n,i,!0);pe.isEmptyObject(l)&&Me.remove(e,"handle events")}},dispatch:function(e){var t,n,i,o,r,s,a=pe.event.fix(e),l=new Array(arguments.length),u=(Me.get(this,"events")||{})[a.type]||[],c=pe.event.special[a.type]||{};for(l[0]=a,t=1;t<arguments.length;t++)l[t]=arguments[t];if(a.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,a)!==!1){for(s=pe.event.handlers.call(this,a,u),t=0;(o=s[t++])&&!a.isPropagationStopped();)for(a.currentTarget=o.elem,n=0;(r=o.handlers[n++])&&!a.isImmediatePropagationStopped();)a.rnamespace&&!a.rnamespace.test(r.namespace)||(a.handleObj=r,a.data=r.data,i=((pe.event.special[r.origType]||{}).handle||r.handler).apply(o.elem,l),void 0!==i&&(a.result=i)===!1&&(a.preventDefault(),a.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,a),a.result}},handlers:function(e,t){var n,i,o,r,s=[],a=t.delegateCount,l=e.target;if(a&&l.nodeType&&("click"!==e.type||isNaN(e.button)||e.button<1))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&(l.disabled!==!0||"click"!==e.type)){for(i=[],n=0;n<a;n++)r=t[n],o=r.selector+" ",void 0===i[o]&&(i[o]=r.needsContext?pe(o,this).index(l)>-1:pe.find(o,this,null,[l]).length),i[o]&&i.push(r);i.length&&s.push({elem:l,handlers:i})}return a<t.length&&s.push({elem:this,handlers:t.slice(a)}),s},addProp:function(e,t){Object.defineProperty(pe.Event.prototype,e,{enumerable:!0,configurable:!0,get:pe.isFunction(t)?function(){if(this.originalEvent)return t(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[e]},set:function(t){Object.defineProperty(this,e,{enumerable:!0,configurable:!0,writable:!0,value:t})}})},fix:function(e){return e[pe.expando]?e:new pe.Event(e)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==w()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===w()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&pe.nodeName(this,"input"))return this.click(),!1},_default:function(e){return pe.nodeName(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},pe.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},pe.Event=function(e,t){return this instanceof pe.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&e.returnValue===!1?b:k,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&pe.extend(this,t),this.timeStamp=e&&e.timeStamp||pe.now(),void(this[pe.expando]=!0)):new pe.Event(e,t)},pe.Event.prototype={constructor:pe.Event,isDefaultPrevented:k,isPropagationStopped:k,isImmediatePropagationStopped:k,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=b,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=b,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=b,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},pe.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,"char":!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&Xe.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&Ye.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},pe.event.addProp),pe.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,t){pe.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,i=this,o=e.relatedTarget,r=e.handleObj;return o&&(o===i||pe.contains(i,o))||(e.type=r.origType,n=r.handler.apply(this,arguments),e.type=t),n}}}),pe.fn.extend({on:function(e,t,n,i){return x(this,e,t,n,i)},one:function(e,t,n,i){return x(this,e,t,n,i,1)},off:function(e,t,n){var i,o;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,pe(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"==typeof e){for(o in e)this.off(o,t,e[o]);return this}return t!==!1&&"function"!=typeof t||(n=t,t=void 0),n===!1&&(n=k),this.each(function(){pe.event.remove(this,e,n,t)})}});var Ze=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,Je=/<script|<style|<link/i,et=/checked\s*(?:[^=]|=\s*.checked.)/i,tt=/^true\/(.*)/,nt=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;pe.extend({htmlPrefilter:function(e){return e.replace(Ze,"<$1></$2>")},clone:function(e,t,n){var i,o,r,s,a=e.cloneNode(!0),l=pe.contains(e.ownerDocument,e);if(!(ce.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||pe.isXMLDoc(e)))for(s=m(a),r=m(e),i=0,o=r.length;i<o;i++)O(r[i],s[i]);if(t)if(n)for(r=r||m(e),s=s||m(a),i=0,o=r.length;i<o;i++)_(r[i],s[i]);else _(e,a);return s=m(a,"script"),s.length>0&&v(s,!l&&m(e,"script")),a},cleanData:function(e){for(var t,n,i,o=pe.event.special,r=0;void 0!==(n=e[r]);r++)if(De(n)){if(t=n[Me.expando]){if(t.events)for(i in t.events)o[i]?pe.event.remove(n,i):pe.removeEvent(n,i,t.handle);n[Me.expando]=void 0}n[je.expando]&&(n[je.expando]=void 0)}}}),pe.fn.extend({detach:function(e){return A(this,e,!0)},remove:function(e){return A(this,e)},text:function(e){return Ee(this,function(e){return void 0===e?pe.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return P(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=C(this,e);t.appendChild(e)}})},prepend:function(){return P(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=C(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return P(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return P(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(pe.cleanData(m(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return pe.clone(this,e,t)})},html:function(e){return Ee(this,function(e){var t=this[0]||{},n=0,i=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Je.test(e)&&!Ve[(We.exec(e)||["",""])[1].toLowerCase()]){e=pe.htmlPrefilter(e);try{for(;n<i;n++)t=this[n]||{},1===t.nodeType&&(pe.cleanData(m(t,!1)),t.innerHTML=e);t=0}catch(o){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=[];return P(this,arguments,function(t){var n=this.parentNode;pe.inArray(this,e)<0&&(pe.cleanData(m(this)),n&&n.replaceChild(t,this))},e)}}),pe.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){pe.fn[e]=function(e){for(var n,i=[],o=pe(e),r=o.length-1,s=0;s<=r;s++)n=s===r?this:this.clone(!0),pe(o[s])[t](n),ie.apply(i,n.get());return this.pushStack(i)}});var it=/^margin/,ot=new RegExp("^("+Fe+")(?!px)[a-z%]+$","i"),rt=function(t){var n=t.ownerDocument.defaultView;return n&&n.opener||(n=e),n.getComputedStyle(t)};!function(){function t(){if(a){a.style.cssText="box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",a.innerHTML="",Ke.appendChild(s);var t=e.getComputedStyle(a);n="1%"!==t.top,r="2px"===t.marginLeft,i="4px"===t.width,a.style.marginRight="50%",o="4px"===t.marginRight,Ke.removeChild(s),a=null}}var n,i,o,r,s=J.createElement("div"),a=J.createElement("div");a.style&&(a.style.backgroundClip="content-box",a.cloneNode(!0).style.backgroundClip="",ce.clearCloneStyle="content-box"===a.style.backgroundClip,s.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",s.appendChild(a),pe.extend(ce,{pixelPosition:function(){return t(),n},boxSizingReliable:function(){return t(),i},pixelMarginRight:function(){return t(),o},reliableMarginLeft:function(){return t(),r}}))}();var st=/^(none|table(?!-c[ea]).+)/,at={position:"absolute",visibility:"hidden",display:"block"},lt={letterSpacing:"0",fontWeight:"400"},ut=["Webkit","Moz","ms"],ct=J.createElement("div").style;pe.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=$(e,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(e,t,n,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var o,r,s,a=pe.camelCase(t),l=e.style;return t=pe.cssProps[a]||(pe.cssProps[a]=D(a)||a),s=pe.cssHooks[t]||pe.cssHooks[a],void 0===n?s&&"get"in s&&void 0!==(o=s.get(e,!1,i))?o:l[t]:(r=typeof n,"string"===r&&(o=Le.exec(n))&&o[1]&&(n=f(e,t,o),r="number"),void(null!=n&&n===n&&("number"===r&&(n+=o&&o[3]||(pe.cssNumber[a]?"":"px")),ce.clearCloneStyle||""!==n||0!==t.indexOf("background")||(l[t]="inherit"),s&&"set"in s&&void 0===(n=s.set(e,n,i))||(l[t]=n))))}},css:function(e,t,n,i){var o,r,s,a=pe.camelCase(t);return t=pe.cssProps[a]||(pe.cssProps[a]=D(a)||a),s=pe.cssHooks[t]||pe.cssHooks[a],s&&"get"in s&&(o=s.get(e,!0,n)),void 0===o&&(o=$(e,t,i)),"normal"===o&&t in lt&&(o=lt[t]),""===n||n?(r=parseFloat(o),n===!0||isFinite(r)?r||0:o):o}}),pe.each(["height","width"],function(e,t){pe.cssHooks[t]={get:function(e,n,i){if(n)return!st.test(pe.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?N(e,t,i):qe(e,at,function(){return N(e,t,i)})},set:function(e,n,i){var o,r=i&&rt(e),s=i&&j(e,t,i,"border-box"===pe.css(e,"boxSizing",!1,r),r);return s&&(o=Le.exec(n))&&"px"!==(o[3]||"px")&&(e.style[t]=n,n=pe.css(e,t)),M(e,n,s)}}}),pe.cssHooks.marginLeft=E(ce.reliableMarginLeft,function(e,t){if(t)return(parseFloat($(e,"marginLeft"))||e.getBoundingClientRect().left-qe(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),pe.each({margin:"",padding:"",border:"Width"},function(e,t){pe.cssHooks[e+t]={expand:function(n){for(var i=0,o={},r="string"==typeof n?n.split(" "):[n];i<4;i++)o[e+Re[i]+t]=r[i]||r[i-2]||r[0];return o}},it.test(e)||(pe.cssHooks[e+t].set=M)}),pe.fn.extend({css:function(e,t){return Ee(this,function(e,t,n){var i,o,r={},s=0;if(pe.isArray(t)){for(i=rt(e),o=t.length;s<o;s++)r[t[s]]=pe.css(e,t[s],!1,i);return r}return void 0!==n?pe.style(e,t,n):pe.css(e,t)},e,t,arguments.length>1)}}),pe.Tween=I,I.prototype={constructor:I,init:function(e,t,n,i,o,r){this.elem=e,this.prop=n,this.easing=o||pe.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=i,this.unit=r||(pe.cssNumber[n]?"":"px")},cur:function(){var e=I.propHooks[this.prop];return e&&e.get?e.get(this):I.propHooks._default.get(this)},run:function(e){var t,n=I.propHooks[this.prop];return this.options.duration?this.pos=t=pe.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):I.propHooks._default.set(this),this}},I.prototype.init.prototype=I.prototype,I.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=pe.css(e.elem,e.prop,""),t&&"auto"!==t?t:0)},set:function(e){pe.fx.step[e.prop]?pe.fx.step[e.prop](e):1!==e.elem.nodeType||null==e.elem.style[pe.cssProps[e.prop]]&&!pe.cssHooks[e.prop]?e.elem[e.prop]=e.now:pe.style(e.elem,e.prop,e.now+e.unit)}}},I.propHooks.scrollTop=I.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},pe.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},pe.fx=I.prototype.init,pe.fx.step={};var dt,pt,ft=/^(?:toggle|show|hide)$/,ht=/queueHooks$/;pe.Animation=pe.extend(B,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return f(n.elem,e,Le.exec(t),n),n}]},tweener:function(e,t){pe.isFunction(e)?(t=e,e=["*"]):e=e.match(Pe);for(var n,i=0,o=e.length;i<o;i++)n=e[i],B.tweeners[n]=B.tweeners[n]||[],B.tweeners[n].unshift(t)},prefilters:[q],prefilter:function(e,t){t?B.prefilters.unshift(e):B.prefilters.push(e)}}),pe.speed=function(e,t,n){var i=e&&"object"==typeof e?pe.extend({},e):{complete:n||!n&&t||pe.isFunction(e)&&e,duration:e,easing:n&&t||t&&!pe.isFunction(t)&&t};return pe.fx.off||J.hidden?i.duration=0:i.duration="number"==typeof i.duration?i.duration:i.duration in pe.fx.speeds?pe.fx.speeds[i.duration]:pe.fx.speeds._default,null!=i.queue&&i.queue!==!0||(i.queue="fx"),i.old=i.complete,i.complete=function(){pe.isFunction(i.old)&&i.old.call(this),i.queue&&pe.dequeue(this,i.queue)},i},pe.fn.extend({fadeTo:function(e,t,n,i){return this.filter(He).css("opacity",0).show().end().animate({opacity:t},e,n,i)},animate:function(e,t,n,i){var o=pe.isEmptyObject(e),r=pe.speed(t,n,i),s=function(){var t=B(this,pe.extend({},e),r);(o||Me.get(this,"finish"))&&t.stop(!0)};return s.finish=s,o||r.queue===!1?this.each(s):this.queue(r.queue,s)},stop:function(e,t,n){var i=function(e){var t=e.stop;delete e.stop,t(n)};return"string"!=typeof e&&(n=t,t=e,e=void 0),t&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,o=null!=e&&e+"queueHooks",r=pe.timers,s=Me.get(this);if(o)s[o]&&s[o].stop&&i(s[o]);else for(o in s)s[o]&&s[o].stop&&ht.test(o)&&i(s[o]);for(o=r.length;o--;)r[o].elem!==this||null!=e&&r[o].queue!==e||(r[o].anim.stop(n),t=!1,r.splice(o,1));!t&&n||pe.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||"fx"),this.each(function(){var t,n=Me.get(this),i=n[e+"queue"],o=n[e+"queueHooks"],r=pe.timers,s=i?i.length:0;for(n.finish=!0,pe.queue(this,e,[]),o&&o.stop&&o.stop.call(this,!0),t=r.length;t--;)r[t].elem===this&&r[t].queue===e&&(r[t].anim.stop(!0),r.splice(t,1));for(t=0;t<s;t++)i[t]&&i[t].finish&&i[t].finish.call(this);
delete n.finish})}}),pe.each(["toggle","show","hide"],function(e,t){var n=pe.fn[t];pe.fn[t]=function(e,i,o){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(R(t,!0),e,i,o)}}),pe.each({slideDown:R("show"),slideUp:R("hide"),slideToggle:R("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){pe.fn[e]=function(e,n,i){return this.animate(t,e,n,i)}}),pe.timers=[],pe.fx.tick=function(){var e,t=0,n=pe.timers;for(dt=pe.now();t<n.length;t++)e=n[t],e()||n[t]!==e||n.splice(t--,1);n.length||pe.fx.stop(),dt=void 0},pe.fx.timer=function(e){pe.timers.push(e),e()?pe.fx.start():pe.timers.pop()},pe.fx.interval=13,pe.fx.start=function(){pt||(pt=e.requestAnimationFrame?e.requestAnimationFrame(F):e.setInterval(pe.fx.tick,pe.fx.interval))},pe.fx.stop=function(){e.cancelAnimationFrame?e.cancelAnimationFrame(pt):e.clearInterval(pt),pt=null},pe.fx.speeds={slow:600,fast:200,_default:400},pe.fn.delay=function(t,n){return t=pe.fx?pe.fx.speeds[t]||t:t,n=n||"fx",this.queue(n,function(n,i){var o=e.setTimeout(n,t);i.stop=function(){e.clearTimeout(o)}})},function(){var e=J.createElement("input"),t=J.createElement("select"),n=t.appendChild(J.createElement("option"));e.type="checkbox",ce.checkOn=""!==e.value,ce.optSelected=n.selected,e=J.createElement("input"),e.value="t",e.type="radio",ce.radioValue="t"===e.value}();var gt,mt=pe.expr.attrHandle;pe.fn.extend({attr:function(e,t){return Ee(this,pe.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){pe.removeAttr(this,e)})}}),pe.extend({attr:function(e,t,n){var i,o,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return"undefined"==typeof e.getAttribute?pe.prop(e,t,n):(1===r&&pe.isXMLDoc(e)||(o=pe.attrHooks[t.toLowerCase()]||(pe.expr.match.bool.test(t)?gt:void 0)),void 0!==n?null===n?void pe.removeAttr(e,t):o&&"set"in o&&void 0!==(i=o.set(e,n,t))?i:(e.setAttribute(t,n+""),n):o&&"get"in o&&null!==(i=o.get(e,t))?i:(i=pe.find.attr(e,t),null==i?void 0:i))},attrHooks:{type:{set:function(e,t){if(!ce.radioValue&&"radio"===t&&pe.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,i=0,o=t&&t.match(Pe);if(o&&1===e.nodeType)for(;n=o[i++];)e.removeAttribute(n)}}),gt={set:function(e,t,n){return t===!1?pe.removeAttr(e,n):e.setAttribute(n,n),n}},pe.each(pe.expr.match.bool.source.match(/\w+/g),function(e,t){var n=mt[t]||pe.find.attr;mt[t]=function(e,t,i){var o,r,s=t.toLowerCase();return i||(r=mt[s],mt[s]=o,o=null!=n(e,t,i)?s:null,mt[s]=r),o}});var vt=/^(?:input|select|textarea|button)$/i,yt=/^(?:a|area)$/i;pe.fn.extend({prop:function(e,t){return Ee(this,pe.prop,e,t,arguments.length>1)},removeProp:function(e){return this.each(function(){delete this[pe.propFix[e]||e]})}}),pe.extend({prop:function(e,t,n){var i,o,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return 1===r&&pe.isXMLDoc(e)||(t=pe.propFix[t]||t,o=pe.propHooks[t]),void 0!==n?o&&"set"in o&&void 0!==(i=o.set(e,n,t))?i:e[t]=n:o&&"get"in o&&null!==(i=o.get(e,t))?i:e[t]},propHooks:{tabIndex:{get:function(e){var t=pe.find.attr(e,"tabindex");return t?parseInt(t,10):vt.test(e.nodeName)||yt.test(e.nodeName)&&e.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),ce.optSelected||(pe.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),pe.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){pe.propFix[this.toLowerCase()]=this});var bt=/[\t\r\n\f]/g;pe.fn.extend({addClass:function(e){var t,n,i,o,r,s,a,l=0;if(pe.isFunction(e))return this.each(function(t){pe(this).addClass(e.call(this,t,W(this)))});if("string"==typeof e&&e)for(t=e.match(Pe)||[];n=this[l++];)if(o=W(n),i=1===n.nodeType&&(" "+o+" ").replace(bt," ")){for(s=0;r=t[s++];)i.indexOf(" "+r+" ")<0&&(i+=r+" ");a=pe.trim(i),o!==a&&n.setAttribute("class",a)}return this},removeClass:function(e){var t,n,i,o,r,s,a,l=0;if(pe.isFunction(e))return this.each(function(t){pe(this).removeClass(e.call(this,t,W(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof e&&e)for(t=e.match(Pe)||[];n=this[l++];)if(o=W(n),i=1===n.nodeType&&(" "+o+" ").replace(bt," ")){for(s=0;r=t[s++];)for(;i.indexOf(" "+r+" ")>-1;)i=i.replace(" "+r+" "," ");a=pe.trim(i),o!==a&&n.setAttribute("class",a)}return this},toggleClass:function(e,t){var n=typeof e;return"boolean"==typeof t&&"string"===n?t?this.addClass(e):this.removeClass(e):pe.isFunction(e)?this.each(function(n){pe(this).toggleClass(e.call(this,n,W(this),t),t)}):this.each(function(){var t,i,o,r;if("string"===n)for(i=0,o=pe(this),r=e.match(Pe)||[];t=r[i++];)o.hasClass(t)?o.removeClass(t):o.addClass(t);else void 0!==e&&"boolean"!==n||(t=W(this),t&&Me.set(this,"__className__",t),this.setAttribute&&this.setAttribute("class",t||e===!1?"":Me.get(this,"__className__")||""))})},hasClass:function(e){var t,n,i=0;for(t=" "+e+" ";n=this[i++];)if(1===n.nodeType&&(" "+W(n)+" ").replace(bt," ").indexOf(t)>-1)return!0;return!1}});var kt=/\r/g,wt=/[\x20\t\r\n\f]+/g;pe.fn.extend({val:function(e){var t,n,i,o=this[0];return arguments.length?(i=pe.isFunction(e),this.each(function(n){var o;1===this.nodeType&&(o=i?e.call(this,n,pe(this).val()):e,null==o?o="":"number"==typeof o?o+="":pe.isArray(o)&&(o=pe.map(o,function(e){return null==e?"":e+""})),t=pe.valHooks[this.type]||pe.valHooks[this.nodeName.toLowerCase()],t&&"set"in t&&void 0!==t.set(this,o,"value")||(this.value=o))})):o?(t=pe.valHooks[o.type]||pe.valHooks[o.nodeName.toLowerCase()],t&&"get"in t&&void 0!==(n=t.get(o,"value"))?n:(n=o.value,"string"==typeof n?n.replace(kt,""):null==n?"":n)):void 0}}),pe.extend({valHooks:{option:{get:function(e){var t=pe.find.attr(e,"value");return null!=t?t:pe.trim(pe.text(e)).replace(wt," ")}},select:{get:function(e){for(var t,n,i=e.options,o=e.selectedIndex,r="select-one"===e.type,s=r?null:[],a=r?o+1:i.length,l=o<0?a:r?o:0;l<a;l++)if(n=i[l],(n.selected||l===o)&&!n.disabled&&(!n.parentNode.disabled||!pe.nodeName(n.parentNode,"optgroup"))){if(t=pe(n).val(),r)return t;s.push(t)}return s},set:function(e,t){for(var n,i,o=e.options,r=pe.makeArray(t),s=o.length;s--;)i=o[s],(i.selected=pe.inArray(pe.valHooks.option.get(i),r)>-1)&&(n=!0);return n||(e.selectedIndex=-1),r}}}}),pe.each(["radio","checkbox"],function(){pe.valHooks[this]={set:function(e,t){if(pe.isArray(t))return e.checked=pe.inArray(pe(e).val(),t)>-1}},ce.checkOn||(pe.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})});var xt=/^(?:focusinfocus|focusoutblur)$/;pe.extend(pe.event,{trigger:function(t,n,i,o){var r,s,a,l,u,c,d,p=[i||J],f=ae.call(t,"type")?t.type:t,h=ae.call(t,"namespace")?t.namespace.split("."):[];if(s=a=i=i||J,3!==i.nodeType&&8!==i.nodeType&&!xt.test(f+pe.event.triggered)&&(f.indexOf(".")>-1&&(h=f.split("."),f=h.shift(),h.sort()),u=f.indexOf(":")<0&&"on"+f,t=t[pe.expando]?t:new pe.Event(f,"object"==typeof t&&t),t.isTrigger=o?2:3,t.namespace=h.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=i),n=null==n?[t]:pe.makeArray(n,[t]),d=pe.event.special[f]||{},o||!d.trigger||d.trigger.apply(i,n)!==!1)){if(!o&&!d.noBubble&&!pe.isWindow(i)){for(l=d.delegateType||f,xt.test(l+f)||(s=s.parentNode);s;s=s.parentNode)p.push(s),a=s;a===(i.ownerDocument||J)&&p.push(a.defaultView||a.parentWindow||e)}for(r=0;(s=p[r++])&&!t.isPropagationStopped();)t.type=r>1?l:d.bindType||f,c=(Me.get(s,"events")||{})[t.type]&&Me.get(s,"handle"),c&&c.apply(s,n),c=u&&s[u],c&&c.apply&&De(s)&&(t.result=c.apply(s,n),t.result===!1&&t.preventDefault());return t.type=f,o||t.isDefaultPrevented()||d._default&&d._default.apply(p.pop(),n)!==!1||!De(i)||u&&pe.isFunction(i[f])&&!pe.isWindow(i)&&(a=i[u],a&&(i[u]=null),pe.event.triggered=f,i[f](),pe.event.triggered=void 0,a&&(i[u]=a)),t.result}},simulate:function(e,t,n){var i=pe.extend(new pe.Event,n,{type:e,isSimulated:!0});pe.event.trigger(i,null,t)}}),pe.fn.extend({trigger:function(e,t){return this.each(function(){pe.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return pe.event.trigger(e,t,n,!0)}}),pe.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,t){pe.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),pe.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),ce.focusin="onfocusin"in e,ce.focusin||pe.each({focus:"focusin",blur:"focusout"},function(e,t){var n=function(e){pe.event.simulate(t,e.target,pe.event.fix(e))};pe.event.special[t]={setup:function(){var i=this.ownerDocument||this,o=Me.access(i,t);o||i.addEventListener(e,n,!0),Me.access(i,t,(o||0)+1)},teardown:function(){var i=this.ownerDocument||this,o=Me.access(i,t)-1;o?Me.access(i,t,o):(i.removeEventListener(e,n,!0),Me.remove(i,t))}}});var Ct=e.location,St=pe.now(),Tt=/\?/;pe.parseXML=function(t){var n;if(!t||"string"!=typeof t)return null;try{n=(new e.DOMParser).parseFromString(t,"text/xml")}catch(i){n=void 0}return n&&!n.getElementsByTagName("parsererror").length||pe.error("Invalid XML: "+t),n};var _t=/\[\]$/,Ot=/\r?\n/g,Pt=/^(?:submit|button|image|reset|file)$/i,At=/^(?:input|select|textarea|keygen)/i;pe.param=function(e,t){var n,i=[],o=function(e,t){var n=pe.isFunction(t)?t():t;i[i.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==n?"":n)};if(pe.isArray(e)||e.jquery&&!pe.isPlainObject(e))pe.each(e,function(){o(this.name,this.value)});else for(n in e)U(n,e[n],t,o);return i.join("&")},pe.fn.extend({serialize:function(){return pe.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=pe.prop(this,"elements");return e?pe.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!pe(this).is(":disabled")&&At.test(this.nodeName)&&!Pt.test(e)&&(this.checked||!Be.test(e))}).map(function(e,t){var n=pe(this).val();return null==n?null:pe.isArray(n)?pe.map(n,function(e){return{name:t.name,value:e.replace(Ot,"\r\n")}}):{name:t.name,value:n.replace(Ot,"\r\n")}}).get()}});var $t=/%20/g,Et=/#.*$/,Dt=/([?&])_=[^&]*/,Mt=/^(.*?):[ \t]*([^\r\n]*)$/gm,jt=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Nt=/^(?:GET|HEAD)$/,It=/^\/\//,Ft={},Lt={},Rt="*/".concat("*"),Ht=J.createElement("a");Ht.href=Ct.href,pe.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Ct.href,type:"GET",isLocal:jt.test(Ct.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Rt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":pe.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?K(K(e,pe.ajaxSettings),t):K(pe.ajaxSettings,e)},ajaxPrefilter:V(Ft),ajaxTransport:V(Lt),ajax:function(t,n){function i(t,n,i,a){var u,p,f,k,w,x=n;c||(c=!0,l&&e.clearTimeout(l),o=void 0,s=a||"",C.readyState=t>0?4:0,u=t>=200&&t<300||304===t,i&&(k=X(h,C,i)),k=Y(h,k,C,u),u?(h.ifModified&&(w=C.getResponseHeader("Last-Modified"),w&&(pe.lastModified[r]=w),w=C.getResponseHeader("etag"),w&&(pe.etag[r]=w)),204===t||"HEAD"===h.type?x="nocontent":304===t?x="notmodified":(x=k.state,p=k.data,f=k.error,u=!f)):(f=x,!t&&x||(x="error",t<0&&(t=0))),C.status=t,C.statusText=(n||x)+"",u?v.resolveWith(g,[p,x,C]):v.rejectWith(g,[C,x,f]),C.statusCode(b),b=void 0,d&&m.trigger(u?"ajaxSuccess":"ajaxError",[C,h,u?p:f]),y.fireWith(g,[C,x]),d&&(m.trigger("ajaxComplete",[C,h]),--pe.active||pe.event.trigger("ajaxStop")))}"object"==typeof t&&(n=t,t=void 0),n=n||{};var o,r,s,a,l,u,c,d,p,f,h=pe.ajaxSetup({},n),g=h.context||h,m=h.context&&(g.nodeType||g.jquery)?pe(g):pe.event,v=pe.Deferred(),y=pe.Callbacks("once memory"),b=h.statusCode||{},k={},w={},x="canceled",C={readyState:0,getResponseHeader:function(e){var t;if(c){if(!a)for(a={};t=Mt.exec(s);)a[t[1].toLowerCase()]=t[2];t=a[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return c?s:null},setRequestHeader:function(e,t){return null==c&&(e=w[e.toLowerCase()]=w[e.toLowerCase()]||e,k[e]=t),this},overrideMimeType:function(e){return null==c&&(h.mimeType=e),this},statusCode:function(e){var t;if(e)if(c)C.always(e[C.status]);else for(t in e)b[t]=[b[t],e[t]];return this},abort:function(e){var t=e||x;return o&&o.abort(t),i(0,t),this}};if(v.promise(C),h.url=((t||h.url||Ct.href)+"").replace(It,Ct.protocol+"//"),h.type=n.method||n.type||h.method||h.type,h.dataTypes=(h.dataType||"*").toLowerCase().match(Pe)||[""],null==h.crossDomain){u=J.createElement("a");try{u.href=h.url,u.href=u.href,h.crossDomain=Ht.protocol+"//"+Ht.host!=u.protocol+"//"+u.host}catch(S){h.crossDomain=!0}}if(h.data&&h.processData&&"string"!=typeof h.data&&(h.data=pe.param(h.data,h.traditional)),G(Ft,h,n,C),c)return C;d=pe.event&&h.global,d&&0===pe.active++&&pe.event.trigger("ajaxStart"),h.type=h.type.toUpperCase(),h.hasContent=!Nt.test(h.type),r=h.url.replace(Et,""),h.hasContent?h.data&&h.processData&&0===(h.contentType||"").indexOf("application/x-www-form-urlencoded")&&(h.data=h.data.replace($t,"+")):(f=h.url.slice(r.length),h.data&&(r+=(Tt.test(r)?"&":"?")+h.data,delete h.data),h.cache===!1&&(r=r.replace(Dt,""),f=(Tt.test(r)?"&":"?")+"_="+St++ +f),h.url=r+f),h.ifModified&&(pe.lastModified[r]&&C.setRequestHeader("If-Modified-Since",pe.lastModified[r]),pe.etag[r]&&C.setRequestHeader("If-None-Match",pe.etag[r])),(h.data&&h.hasContent&&h.contentType!==!1||n.contentType)&&C.setRequestHeader("Content-Type",h.contentType),C.setRequestHeader("Accept",h.dataTypes[0]&&h.accepts[h.dataTypes[0]]?h.accepts[h.dataTypes[0]]+("*"!==h.dataTypes[0]?", "+Rt+"; q=0.01":""):h.accepts["*"]);for(p in h.headers)C.setRequestHeader(p,h.headers[p]);if(h.beforeSend&&(h.beforeSend.call(g,C,h)===!1||c))return C.abort();if(x="abort",y.add(h.complete),C.done(h.success),C.fail(h.error),o=G(Lt,h,n,C)){if(C.readyState=1,d&&m.trigger("ajaxSend",[C,h]),c)return C;h.async&&h.timeout>0&&(l=e.setTimeout(function(){C.abort("timeout")},h.timeout));try{c=!1,o.send(k,i)}catch(S){if(c)throw S;i(-1,S)}}else i(-1,"No Transport");return C},getJSON:function(e,t,n){return pe.get(e,t,n,"json")},getScript:function(e,t){return pe.get(e,void 0,t,"script")}}),pe.each(["get","post"],function(e,t){pe[t]=function(e,n,i,o){return pe.isFunction(n)&&(o=o||i,i=n,n=void 0),pe.ajax(pe.extend({url:e,type:t,dataType:o,data:n,success:i},pe.isPlainObject(e)&&e))}}),pe._evalUrl=function(e){return pe.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,"throws":!0})},pe.fn.extend({wrapAll:function(e){var t;return this[0]&&(pe.isFunction(e)&&(e=e.call(this[0])),t=pe(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(e){return pe.isFunction(e)?this.each(function(t){pe(this).wrapInner(e.call(this,t))}):this.each(function(){var t=pe(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=pe.isFunction(e);return this.each(function(n){pe(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(e){return this.parent(e).not("body").each(function(){pe(this).replaceWith(this.childNodes)}),this}}),pe.expr.pseudos.hidden=function(e){return!pe.expr.pseudos.visible(e)},pe.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},pe.ajaxSettings.xhr=function(){try{return new e.XMLHttpRequest}catch(t){}};var qt={0:200,1223:204},zt=pe.ajaxSettings.xhr();ce.cors=!!zt&&"withCredentials"in zt,ce.ajax=zt=!!zt,pe.ajaxTransport(function(t){var n,i;if(ce.cors||zt&&!t.crossDomain)return{send:function(o,r){var s,a=t.xhr();if(a.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(s in t.xhrFields)a[s]=t.xhrFields[s];t.mimeType&&a.overrideMimeType&&a.overrideMimeType(t.mimeType),t.crossDomain||o["X-Requested-With"]||(o["X-Requested-With"]="XMLHttpRequest");for(s in o)a.setRequestHeader(s,o[s]);n=function(e){return function(){n&&(n=i=a.onload=a.onerror=a.onabort=a.onreadystatechange=null,"abort"===e?a.abort():"error"===e?"number"!=typeof a.status?r(0,"error"):r(a.status,a.statusText):r(qt[a.status]||a.status,a.statusText,"text"!==(a.responseType||"text")||"string"!=typeof a.responseText?{binary:a.response}:{text:a.responseText},a.getAllResponseHeaders()))}},a.onload=n(),i=a.onerror=n("error"),void 0!==a.onabort?a.onabort=i:a.onreadystatechange=function(){4===a.readyState&&e.setTimeout(function(){n&&i()})},n=n("abort");try{a.send(t.hasContent&&t.data||null)}catch(l){if(n)throw l}},abort:function(){n&&n()}}}),pe.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),pe.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return pe.globalEval(e),e}}}),pe.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),pe.ajaxTransport("script",function(e){if(e.crossDomain){var t,n;return{send:function(i,o){t=pe("<script>").prop({charset:e.scriptCharset,src:e.url}).on("load error",n=function(e){t.remove(),n=null,e&&o("error"===e.type?404:200,e.type)}),J.head.appendChild(t[0])},abort:function(){n&&n()}}}});var Bt=[],Wt=/(=)\?(?=&|$)|\?\?/;pe.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Bt.pop()||pe.expando+"_"+St++;return this[e]=!0,e}}),pe.ajaxPrefilter("json jsonp",function(t,n,i){var o,r,s,a=t.jsonp!==!1&&(Wt.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&Wt.test(t.data)&&"data");if(a||"jsonp"===t.dataTypes[0])return o=t.jsonpCallback=pe.isFunction(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,a?t[a]=t[a].replace(Wt,"$1"+o):t.jsonp!==!1&&(t.url+=(Tt.test(t.url)?"&":"?")+t.jsonp+"="+o),t.converters["script json"]=function(){return s||pe.error(o+" was not called"),s[0]},t.dataTypes[0]="json",r=e[o],e[o]=function(){s=arguments},i.always(function(){void 0===r?pe(e).removeProp(o):e[o]=r,t[o]&&(t.jsonpCallback=n.jsonpCallback,Bt.push(o)),s&&pe.isFunction(r)&&r(s[0]),s=r=void 0}),"script"}),ce.createHTMLDocument=function(){var e=J.implementation.createHTMLDocument("").body;return e.innerHTML="<form></form><form></form>",2===e.childNodes.length}(),pe.parseHTML=function(e,t,n){if("string"!=typeof e)return[];"boolean"==typeof t&&(n=t,t=!1);var i,o,r;return t||(ce.createHTMLDocument?(t=J.implementation.createHTMLDocument(""),i=t.createElement("base"),i.href=J.location.href,t.head.appendChild(i)):t=J),o=we.exec(e),r=!n&&[],o?[t.createElement(o[1])]:(o=y([e],t,r),r&&r.length&&pe(r).remove(),pe.merge([],o.childNodes))},pe.fn.load=function(e,t,n){var i,o,r,s=this,a=e.indexOf(" ");return a>-1&&(i=pe.trim(e.slice(a)),e=e.slice(0,a)),pe.isFunction(t)?(n=t,t=void 0):t&&"object"==typeof t&&(o="POST"),s.length>0&&pe.ajax({url:e,type:o||"GET",dataType:"html",data:t}).done(function(e){r=arguments,s.html(i?pe("<div>").append(pe.parseHTML(e)).find(i):e)}).always(n&&function(e,t){s.each(function(){n.apply(this,r||[e.responseText,t,e])})}),this},pe.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){pe.fn[t]=function(e){return this.on(t,e)}}),pe.expr.pseudos.animated=function(e){return pe.grep(pe.timers,function(t){return e===t.elem}).length},pe.offset={setOffset:function(e,t,n){var i,o,r,s,a,l,u,c=pe.css(e,"position"),d=pe(e),p={};"static"===c&&(e.style.position="relative"),a=d.offset(),r=pe.css(e,"top"),l=pe.css(e,"left"),u=("absolute"===c||"fixed"===c)&&(r+l).indexOf("auto")>-1,u?(i=d.position(),s=i.top,o=i.left):(s=parseFloat(r)||0,o=parseFloat(l)||0),pe.isFunction(t)&&(t=t.call(e,n,pe.extend({},a))),null!=t.top&&(p.top=t.top-a.top+s),null!=t.left&&(p.left=t.left-a.left+o),"using"in t?t.using.call(e,p):d.css(p)}},pe.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(t){pe.offset.setOffset(this,e,t)});var t,n,i,o,r=this[0];return r?r.getClientRects().length?(i=r.getBoundingClientRect(),i.width||i.height?(o=r.ownerDocument,n=Q(o),t=o.documentElement,{top:i.top+n.pageYOffset-t.clientTop,left:i.left+n.pageXOffset-t.clientLeft}):i):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n=this[0],i={top:0,left:0};return"fixed"===pe.css(n,"position")?t=n.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),pe.nodeName(e[0],"html")||(i=e.offset()),i={top:i.top+pe.css(e[0],"borderTopWidth",!0),left:i.left+pe.css(e[0],"borderLeftWidth",!0)}),{top:t.top-i.top-pe.css(n,"marginTop",!0),left:t.left-i.left-pe.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===pe.css(e,"position");)e=e.offsetParent;return e||Ke})}}),pe.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,t){var n="pageYOffset"===t;pe.fn[e]=function(i){return Ee(this,function(e,i,o){var r=Q(e);return void 0===o?r?r[t]:e[i]:void(r?r.scrollTo(n?r.pageXOffset:o,n?o:r.pageYOffset):e[i]=o)},e,i,arguments.length)}}),pe.each(["top","left"],function(e,t){pe.cssHooks[t]=E(ce.pixelPosition,function(e,n){if(n)return n=$(e,t),ot.test(n)?pe(e).position()[t]+"px":n})}),pe.each({Height:"height",Width:"width"},function(e,t){pe.each({padding:"inner"+e,content:t,"":"outer"+e},function(n,i){pe.fn[i]=function(o,r){var s=arguments.length&&(n||"boolean"!=typeof o),a=n||(o===!0||r===!0?"margin":"border");return Ee(this,function(t,n,o){var r;return pe.isWindow(t)?0===i.indexOf("outer")?t["inner"+e]:t.document.documentElement["client"+e]:9===t.nodeType?(r=t.documentElement,Math.max(t.body["scroll"+e],r["scroll"+e],t.body["offset"+e],r["offset"+e],r["client"+e])):void 0===o?pe.css(t,n,a):pe.style(t,n,o,a)},t,s?o:void 0,s)}})}),pe.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,i){return this.on(t,e,n,i)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)}}),pe.parseJSON=JSON.parse,"function"==typeof define&&define.amd&&define("jquery",[],function(){return pe});var Ut=e.jQuery,Vt=e.$;return pe.noConflict=function(t){return e.$===pe&&(e.$=Vt),t&&e.jQuery===pe&&(e.jQuery=Ut),pe},t||(e.jQuery=e.$=pe),pe}),function(e){"function"==typeof define&&define.amd?define(["jquery"],e):e(jQuery)}(function(e){e.ui=e.ui||{};var t=(e.ui.version="1.12.1",0),n=Array.prototype.slice;e.cleanData=function(t){return function(n){var i,o,r;for(r=0;null!=(o=n[r]);r++)try{i=e._data(o,"events"),i&&i.remove&&e(o).triggerHandler("remove")}catch(s){}t(n)}}(e.cleanData),e.widget=function(t,n,i){var o,r,s,a={},l=t.split(".")[0];t=t.split(".")[1];var u=l+"-"+t;return i||(i=n,n=e.Widget),e.isArray(i)&&(i=e.extend.apply(null,[{}].concat(i))),e.expr[":"][u.toLowerCase()]=function(t){return!!e.data(t,u)},e[l]=e[l]||{},o=e[l][t],r=e[l][t]=function(e,t){return this._createWidget?void(arguments.length&&this._createWidget(e,t)):new r(e,t)},e.extend(r,o,{version:i.version,_proto:e.extend({},i),_childConstructors:[]}),s=new n,s.options=e.widget.extend({},s.options),e.each(i,function(t,i){return e.isFunction(i)?void(a[t]=function(){function e(){return n.prototype[t].apply(this,arguments)}function o(e){return n.prototype[t].apply(this,e)}return function(){var t,n=this._super,r=this._superApply;return this._super=e,this._superApply=o,t=i.apply(this,arguments),this._super=n,this._superApply=r,t}}()):void(a[t]=i)}),r.prototype=e.widget.extend(s,{widgetEventPrefix:o?s.widgetEventPrefix||t:t},a,{constructor:r,namespace:l,widgetName:t,widgetFullName:u}),o?(e.each(o._childConstructors,function(t,n){var i=n.prototype;e.widget(i.namespace+"."+i.widgetName,r,n._proto)}),delete o._childConstructors):n._childConstructors.push(r),e.widget.bridge(t,r),r},e.widget.extend=function(t){for(var i,o,r=n.call(arguments,1),s=0,a=r.length;s<a;s++)for(i in r[s])o=r[s][i],r[s].hasOwnProperty(i)&&void 0!==o&&(e.isPlainObject(o)?t[i]=e.isPlainObject(t[i])?e.widget.extend({},t[i],o):e.widget.extend({},o):t[i]=o);return t},e.widget.bridge=function(t,i){var o=i.prototype.widgetFullName||t;e.fn[t]=function(r){var s="string"==typeof r,a=n.call(arguments,1),l=this;return s?this.length||"instance"!==r?this.each(function(){var n,i=e.data(this,o);return"instance"===r?(l=i,!1):i?e.isFunction(i[r])&&"_"!==r.charAt(0)?(n=i[r].apply(i,a),n!==i&&void 0!==n?(l=n&&n.jquery?l.pushStack(n.get()):n,!1):void 0):e.error("no such method '"+r+"' for "+t+" widget instance"):e.error("cannot call methods on "+t+" prior to initialization; attempted to call method '"+r+"'")}):l=void 0:(a.length&&(r=e.widget.extend.apply(null,[r].concat(a))),this.each(function(){var t=e.data(this,o);t?(t.option(r||{}),t._init&&t._init()):e.data(this,o,new i(r,this))})),l}},e.Widget=function(){},e.Widget._childConstructors=[],e.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{classes:{},disabled:!1,create:null},_createWidget:function(n,i){i=e(i||this.defaultElement||this)[0],this.element=e(i),this.uuid=t++,this.eventNamespace="."+this.widgetName+this.uuid,this.bindings=e(),this.hoverable=e(),this.focusable=e(),this.classesElementLookup={},i!==this&&(e.data(i,this.widgetFullName,this),this._on(!0,this.element,{remove:function(e){e.target===i&&this.destroy()}}),this.document=e(i.style?i.ownerDocument:i.document||i),this.window=e(this.document[0].defaultView||this.document[0].parentWindow)),this.options=e.widget.extend({},this.options,this._getCreateOptions(),n),this._create(),this.options.disabled&&this._setOptionDisabled(this.options.disabled),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:function(){return{}},_getCreateEventData:e.noop,_create:e.noop,_init:e.noop,destroy:function(){var t=this;this._destroy(),e.each(this.classesElementLookup,function(e,n){t._removeClass(n,e)}),this.element.off(this.eventNamespace).removeData(this.widgetFullName),this.widget().off(this.eventNamespace).removeAttr("aria-disabled"),this.bindings.off(this.eventNamespace)},_destroy:e.noop,widget:function(){return this.element},option:function(t,n){var i,o,r,s=t;if(0===arguments.length)return e.widget.extend({},this.options);if("string"==typeof t)if(s={},i=t.split("."),t=i.shift(),i.length){for(o=s[t]=e.widget.extend({},this.options[t]),r=0;r<i.length-1;r++)o[i[r]]=o[i[r]]||{},o=o[i[r]];if(t=i.pop(),1===arguments.length)return void 0===o[t]?null:o[t];o[t]=n}else{if(1===arguments.length)return void 0===this.options[t]?null:this.options[t];s[t]=n}return this._setOptions(s),this},_setOptions:function(e){var t;for(t in e)this._setOption(t,e[t]);return this},_setOption:function(e,t){return"classes"===e&&this._setOptionClasses(t),this.options[e]=t,"disabled"===e&&this._setOptionDisabled(t),this},_setOptionClasses:function(t){var n,i,o;for(n in t)o=this.classesElementLookup[n],t[n]!==this.options.classes[n]&&o&&o.length&&(i=e(o.get()),this._removeClass(o,n),i.addClass(this._classes({element:i,keys:n,classes:t,add:!0})))},_setOptionDisabled:function(e){this._toggleClass(this.widget(),this.widgetFullName+"-disabled",null,!!e),e&&(this._removeClass(this.hoverable,null,"ui-state-hover"),this._removeClass(this.focusable,null,"ui-state-focus"))},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_classes:function(t){function n(n,r){var s,a;for(a=0;a<n.length;a++)s=o.classesElementLookup[n[a]]||e(),s=e(t.add?e.unique(s.get().concat(t.element.get())):s.not(t.element).get()),o.classesElementLookup[n[a]]=s,i.push(n[a]),r&&t.classes[n[a]]&&i.push(t.classes[n[a]])}var i=[],o=this;return t=e.extend({element:this.element,classes:this.options.classes||{}},t),this._on(t.element,{remove:"_untrackClassesElement"}),t.keys&&n(t.keys.match(/\S+/g)||[],!0),t.extra&&n(t.extra.match(/\S+/g)||[]),i.join(" ")},_untrackClassesElement:function(t){var n=this;e.each(n.classesElementLookup,function(i,o){e.inArray(t.target,o)!==-1&&(n.classesElementLookup[i]=e(o.not(t.target).get()))})},_removeClass:function(e,t,n){return this._toggleClass(e,t,n,!1)},_addClass:function(e,t,n){return this._toggleClass(e,t,n,!0)},_toggleClass:function(e,t,n,i){i="boolean"==typeof i?i:n;var o="string"==typeof e||null===e,r={extra:o?t:n,keys:o?e:t,element:o?this.element:e,add:i};return r.element.toggleClass(this._classes(r),i),this},_on:function(t,n,i){var o,r=this;"boolean"!=typeof t&&(i=n,n=t,t=!1),i?(n=o=e(n),this.bindings=this.bindings.add(n)):(i=n,n=this.element,o=this.widget()),e.each(i,function(i,s){function a(){if(t||r.options.disabled!==!0&&!e(this).hasClass("ui-state-disabled"))return("string"==typeof s?r[s]:s).apply(r,arguments)}"string"!=typeof s&&(a.guid=s.guid=s.guid||a.guid||e.guid++);var l=i.match(/^([\w:-]*)\s*(.*)$/),u=l[1]+r.eventNamespace,c=l[2];c?o.on(u,c,a):n.on(u,a)})},_off:function(t,n){n=(n||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,t.off(n).off(n),this.bindings=e(this.bindings.not(t).get()),this.focusable=e(this.focusable.not(t).get()),this.hoverable=e(this.hoverable.not(t).get())},_delay:function(e,t){function n(){return("string"==typeof e?i[e]:e).apply(i,arguments)}var i=this;return setTimeout(n,t||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){this._addClass(e(t.currentTarget),null,"ui-state-hover")},mouseleave:function(t){this._removeClass(e(t.currentTarget),null,"ui-state-hover")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){this._addClass(e(t.currentTarget),null,"ui-state-focus")},focusout:function(t){this._removeClass(e(t.currentTarget),null,"ui-state-focus")}})},_trigger:function(t,n,i){var o,r,s=this.options[t];if(i=i||{},n=e.Event(n),n.type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),n.target=this.element[0],r=n.originalEvent)for(o in r)o in n||(n[o]=r[o]);return this.element.trigger(n,i),!(e.isFunction(s)&&s.apply(this.element[0],[n].concat(i))===!1||n.isDefaultPrevented())}},e.each({show:"fadeIn",hide:"fadeOut"},function(t,n){e.Widget.prototype["_"+t]=function(i,o,r){"string"==typeof o&&(o={effect:o});var s,a=o?o===!0||"number"==typeof o?n:o.effect||n:t;o=o||{},"number"==typeof o&&(o={duration:o}),s=!e.isEmptyObject(o),o.complete=r,o.delay&&i.delay(o.delay),s&&e.effects&&e.effects.effect[a]?i[t](o):a!==t&&i[a]?i[a](o.duration,o.easing,r):i.queue(function(n){e(this)[t](),r&&r.call(i[0]),n()})}});var i=(e.widget,e.ui.keyCode={BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38},e.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()),!1);e(document).on("mouseup",function(){i=!1});e.widget("ui.mouse",{version:"1.12.1",options:{cancel:"input, textarea, button, select, option",distance:1,delay:0},_mouseInit:function(){var t=this;this.element.on("mousedown."+this.widgetName,function(e){return t._mouseDown(e)}).on("click."+this.widgetName,function(n){if(!0===e.data(n.target,t.widgetName+".preventClickEvent"))return e.removeData(n.target,t.widgetName+".preventClickEvent"),n.stopImmediatePropagation(),!1}),this.started=!1},_mouseDestroy:function(){this.element.off("."+this.widgetName),this._mouseMoveDelegate&&this.document.off("mousemove."+this.widgetName,this._mouseMoveDelegate).off("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(t){if(!i){this._mouseMoved=!1,this._mouseStarted&&this._mouseUp(t),this._mouseDownEvent=t;var n=this,o=1===t.which,r=!("string"!=typeof this.options.cancel||!t.target.nodeName)&&e(t.target).closest(this.options.cancel).length;
return!(o&&!r&&this._mouseCapture(t))||(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){n.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(t)!==!1,!this._mouseStarted)?(t.preventDefault(),!0):(!0===e.data(t.target,this.widgetName+".preventClickEvent")&&e.removeData(t.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(e){return n._mouseMove(e)},this._mouseUpDelegate=function(e){return n._mouseUp(e)},this.document.on("mousemove."+this.widgetName,this._mouseMoveDelegate).on("mouseup."+this.widgetName,this._mouseUpDelegate),t.preventDefault(),i=!0,!0))}},_mouseMove:function(t){if(this._mouseMoved){if(e.ui.ie&&(!document.documentMode||document.documentMode<9)&&!t.button)return this._mouseUp(t);if(!t.which)if(t.originalEvent.altKey||t.originalEvent.ctrlKey||t.originalEvent.metaKey||t.originalEvent.shiftKey)this.ignoreMissingWhich=!0;else if(!this.ignoreMissingWhich)return this._mouseUp(t)}return(t.which||t.button)&&(this._mouseMoved=!0),this._mouseStarted?(this._mouseDrag(t),t.preventDefault()):(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,t)!==!1,this._mouseStarted?this._mouseDrag(t):this._mouseUp(t)),!this._mouseStarted)},_mouseUp:function(t){this.document.off("mousemove."+this.widgetName,this._mouseMoveDelegate).off("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,t.target===this._mouseDownEvent.target&&e.data(t.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(t)),this._mouseDelayTimer&&(clearTimeout(this._mouseDelayTimer),delete this._mouseDelayTimer),this.ignoreMissingWhich=!1,i=!1,t.preventDefault()},_mouseDistanceMet:function(e){return Math.max(Math.abs(this._mouseDownEvent.pageX-e.pageX),Math.abs(this._mouseDownEvent.pageY-e.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}}),e.widget("ui.slider",e.ui.mouse,{version:"1.12.1",widgetEventPrefix:"slide",options:{animate:!1,classes:{"ui-slider":"ui-corner-all","ui-slider-handle":"ui-corner-all","ui-slider-range":"ui-corner-all ui-widget-header"},distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null,change:null,slide:null,start:null,stop:null},numPages:5,_create:function(){this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this._calculateNewMax(),this._addClass("ui-slider ui-slider-"+this.orientation,"ui-widget ui-widget-content"),this._refresh(),this._animateOff=!1},_refresh:function(){this._createRange(),this._createHandles(),this._setupEvents(),this._refreshValue()},_createHandles:function(){var t,n,i=this.options,o=this.element.find(".ui-slider-handle"),r="<span tabindex='0'></span>",s=[];for(n=i.values&&i.values.length||1,o.length>n&&(o.slice(n).remove(),o=o.slice(0,n)),t=o.length;t<n;t++)s.push(r);this.handles=o.add(e(s.join("")).appendTo(this.element)),this._addClass(this.handles,"ui-slider-handle","ui-state-default"),this.handle=this.handles.eq(0),this.handles.each(function(t){e(this).data("ui-slider-handle-index",t).attr("tabIndex",0)})},_createRange:function(){var t=this.options;t.range?(t.range===!0&&(t.values?t.values.length&&2!==t.values.length?t.values=[t.values[0],t.values[0]]:e.isArray(t.values)&&(t.values=t.values.slice(0)):t.values=[this._valueMin(),this._valueMin()]),this.range&&this.range.length?(this._removeClass(this.range,"ui-slider-range-min ui-slider-range-max"),this.range.css({left:"",bottom:""})):(this.range=e("<div>").appendTo(this.element),this._addClass(this.range,"ui-slider-range")),"min"!==t.range&&"max"!==t.range||this._addClass(this.range,"ui-slider-range-"+t.range)):(this.range&&this.range.remove(),this.range=null)},_setupEvents:function(){this._off(this.handles),this._on(this.handles,this._handleEvents),this._hoverable(this.handles),this._focusable(this.handles)},_destroy:function(){this.handles.remove(),this.range&&this.range.remove(),this._mouseDestroy()},_mouseCapture:function(t){var n,i,o,r,s,a,l,u,c=this,d=this.options;return!d.disabled&&(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),n={x:t.pageX,y:t.pageY},i=this._normValueFromMouse(n),o=this._valueMax()-this._valueMin()+1,this.handles.each(function(t){var n=Math.abs(i-c.values(t));(o>n||o===n&&(t===c._lastChangedValue||c.values(t)===d.min))&&(o=n,r=e(this),s=t)}),a=this._start(t,s),a!==!1&&(this._mouseSliding=!0,this._handleIndex=s,this._addClass(r,null,"ui-state-active"),r.trigger("focus"),l=r.offset(),u=!e(t.target).parents().addBack().is(".ui-slider-handle"),this._clickOffset=u?{left:0,top:0}:{left:t.pageX-l.left-r.width()/2,top:t.pageY-l.top-r.height()/2-(parseInt(r.css("borderTopWidth"),10)||0)-(parseInt(r.css("borderBottomWidth"),10)||0)+(parseInt(r.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(t,s,i),this._animateOff=!0,!0))},_mouseStart:function(){return!0},_mouseDrag:function(e){var t={x:e.pageX,y:e.pageY},n=this._normValueFromMouse(t);return this._slide(e,this._handleIndex,n),!1},_mouseStop:function(e){return this._removeClass(this.handles,null,"ui-state-active"),this._mouseSliding=!1,this._stop(e,this._handleIndex),this._change(e,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation="vertical"===this.options.orientation?"vertical":"horizontal"},_normValueFromMouse:function(e){var t,n,i,o,r;return"horizontal"===this.orientation?(t=this.elementSize.width,n=e.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(t=this.elementSize.height,n=e.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),i=n/t,i>1&&(i=1),i<0&&(i=0),"vertical"===this.orientation&&(i=1-i),o=this._valueMax()-this._valueMin(),r=this._valueMin()+i*o,this._trimAlignValue(r)},_uiHash:function(e,t,n){var i={handle:this.handles[e],handleIndex:e,value:void 0!==t?t:this.value()};return this._hasMultipleValues()&&(i.value=void 0!==t?t:this.values(e),i.values=n||this.values()),i},_hasMultipleValues:function(){return this.options.values&&this.options.values.length},_start:function(e,t){return this._trigger("start",e,this._uiHash(t))},_slide:function(e,t,n){var i,o,r=this.value(),s=this.values();this._hasMultipleValues()&&(o=this.values(t?0:1),r=this.values(t),2===this.options.values.length&&this.options.range===!0&&(n=0===t?Math.min(o,n):Math.max(o,n)),s[t]=n),n!==r&&(i=this._trigger("slide",e,this._uiHash(t,n,s)),i!==!1&&(this._hasMultipleValues()?this.values(t,n):this.value(n)))},_stop:function(e,t){this._trigger("stop",e,this._uiHash(t))},_change:function(e,t){this._keySliding||this._mouseSliding||(this._lastChangedValue=t,this._trigger("change",e,this._uiHash(t)))},value:function(e){return arguments.length?(this.options.value=this._trimAlignValue(e),this._refreshValue(),void this._change(null,0)):this._value()},values:function(t,n){var i,o,r;if(arguments.length>1)return this.options.values[t]=this._trimAlignValue(n),this._refreshValue(),void this._change(null,t);if(!arguments.length)return this._values();if(!e.isArray(arguments[0]))return this._hasMultipleValues()?this._values(t):this.value();for(i=this.options.values,o=arguments[0],r=0;r<i.length;r+=1)i[r]=this._trimAlignValue(o[r]),this._change(null,r);this._refreshValue()},_setOption:function(t,n){var i,o=0;switch("range"===t&&this.options.range===!0&&("min"===n?(this.options.value=this._values(0),this.options.values=null):"max"===n&&(this.options.value=this._values(this.options.values.length-1),this.options.values=null)),e.isArray(this.options.values)&&(o=this.options.values.length),this._super(t,n),t){case"orientation":this._detectOrientation(),this._removeClass("ui-slider-horizontal ui-slider-vertical")._addClass("ui-slider-"+this.orientation),this._refreshValue(),this.options.range&&this._refreshRange(n),this.handles.css("horizontal"===n?"bottom":"left","");break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":for(this._animateOff=!0,this._refreshValue(),i=o-1;i>=0;i--)this._change(null,i);this._animateOff=!1;break;case"step":case"min":case"max":this._animateOff=!0,this._calculateNewMax(),this._refreshValue(),this._animateOff=!1;break;case"range":this._animateOff=!0,this._refresh(),this._animateOff=!1}},_setOptionDisabled:function(e){this._super(e),this._toggleClass(null,"ui-state-disabled",!!e)},_value:function(){var e=this.options.value;return e=this._trimAlignValue(e)},_values:function(e){var t,n,i;if(arguments.length)return t=this.options.values[e],t=this._trimAlignValue(t);if(this._hasMultipleValues()){for(n=this.options.values.slice(),i=0;i<n.length;i+=1)n[i]=this._trimAlignValue(n[i]);return n}return[]},_trimAlignValue:function(e){if(e<=this._valueMin())return this._valueMin();if(e>=this._valueMax())return this._valueMax();var t=this.options.step>0?this.options.step:1,n=(e-this._valueMin())%t,i=e-n;return 2*Math.abs(n)>=t&&(i+=n>0?t:-t),parseFloat(i.toFixed(5))},_calculateNewMax:function(){var e=this.options.max,t=this._valueMin(),n=this.options.step,i=Math.round((e-t)/n)*n;e=i+t,e>this.options.max&&(e-=n),this.max=parseFloat(e.toFixed(this._precision()))},_precision:function(){var e=this._precisionOf(this.options.step);return null!==this.options.min&&(e=Math.max(e,this._precisionOf(this.options.min))),e},_precisionOf:function(e){var t=e.toString(),n=t.indexOf(".");return n===-1?0:t.length-n-1},_valueMin:function(){return this.options.min},_valueMax:function(){return this.max},_refreshRange:function(e){"vertical"===e&&this.range.css({width:"",left:""}),"horizontal"===e&&this.range.css({height:"",bottom:""})},_refreshValue:function(){var t,n,i,o,r,s=this.options.range,a=this.options,l=this,u=!this._animateOff&&a.animate,c={};this._hasMultipleValues()?this.handles.each(function(i){n=(l.values(i)-l._valueMin())/(l._valueMax()-l._valueMin())*100,c["horizontal"===l.orientation?"left":"bottom"]=n+"%",e(this).stop(1,1)[u?"animate":"css"](c,a.animate),l.options.range===!0&&("horizontal"===l.orientation?(0===i&&l.range.stop(1,1)[u?"animate":"css"]({left:n+"%"},a.animate),1===i&&l.range[u?"animate":"css"]({width:n-t+"%"},{queue:!1,duration:a.animate})):(0===i&&l.range.stop(1,1)[u?"animate":"css"]({bottom:n+"%"},a.animate),1===i&&l.range[u?"animate":"css"]({height:n-t+"%"},{queue:!1,duration:a.animate}))),t=n}):(i=this.value(),o=this._valueMin(),r=this._valueMax(),n=r!==o?(i-o)/(r-o)*100:0,c["horizontal"===this.orientation?"left":"bottom"]=n+"%",this.handle.stop(1,1)[u?"animate":"css"](c,a.animate),"min"===s&&"horizontal"===this.orientation&&this.range.stop(1,1)[u?"animate":"css"]({width:n+"%"},a.animate),"max"===s&&"horizontal"===this.orientation&&this.range.stop(1,1)[u?"animate":"css"]({width:100-n+"%"},a.animate),"min"===s&&"vertical"===this.orientation&&this.range.stop(1,1)[u?"animate":"css"]({height:n+"%"},a.animate),"max"===s&&"vertical"===this.orientation&&this.range.stop(1,1)[u?"animate":"css"]({height:100-n+"%"},a.animate))},_handleEvents:{keydown:function(t){var n,i,o,r,s=e(t.target).data("ui-slider-handle-index");switch(t.keyCode){case e.ui.keyCode.HOME:case e.ui.keyCode.END:case e.ui.keyCode.PAGE_UP:case e.ui.keyCode.PAGE_DOWN:case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:if(t.preventDefault(),!this._keySliding&&(this._keySliding=!0,this._addClass(e(t.target),null,"ui-state-active"),n=this._start(t,s),n===!1))return}switch(r=this.options.step,i=o=this._hasMultipleValues()?this.values(s):this.value(),t.keyCode){case e.ui.keyCode.HOME:o=this._valueMin();break;case e.ui.keyCode.END:o=this._valueMax();break;case e.ui.keyCode.PAGE_UP:o=this._trimAlignValue(i+(this._valueMax()-this._valueMin())/this.numPages);break;case e.ui.keyCode.PAGE_DOWN:o=this._trimAlignValue(i-(this._valueMax()-this._valueMin())/this.numPages);break;case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:if(i===this._valueMax())return;o=this._trimAlignValue(i+r);break;case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:if(i===this._valueMin())return;o=this._trimAlignValue(i-r)}this._slide(t,s,o)},keyup:function(t){var n=e(t.target).data("ui-slider-handle-index");this._keySliding&&(this._keySliding=!1,this._stop(t,n),this._change(t,n),this._removeClass(e(t.target),null,"ui-state-active"))}}})}),function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery"],e):"undefined"!=typeof exports?module.exports=e(require("jquery")):e(jQuery)}(function(e){"use strict";var t=window.Slick||{};t=function(){function t(t,i){var o,r=this;r.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:e(t),appendDots:e(t),arrows:!0,asNavFor:null,prevArrow:'<button type="button" data-role="none" class="slick-prev" aria-label="Previous" tabindex="0" role="button">Previous</button>',nextArrow:'<button type="button" data-role="none" class="slick-next" aria-label="Next" tabindex="0" role="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(e,t){return'<button type="button" data-role="none" role="button" aria-required="false" tabindex="0">'+(t+1)+"</button>"},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!1,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},r.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},e.extend(r,r.initials),r.activeBreakpoint=null,r.animType=null,r.animProp=null,r.breakpoints=[],r.breakpointSettings=[],r.cssTransitions=!1,r.hidden="hidden",r.paused=!1,r.positionProp=null,r.respondTo=null,r.rowCount=1,r.shouldClick=!0,r.$slider=e(t),r.$slidesCache=null,r.transformType=null,r.transitionType=null,r.visibilityChange="visibilitychange",r.windowWidth=0,r.windowTimer=null,o=e(t).data("slick")||{},r.options=e.extend({},r.defaults,o,i),r.currentSlide=r.options.initialSlide,r.originalSettings=r.options,"undefined"!=typeof document.mozHidden?(r.hidden="mozHidden",r.visibilityChange="mozvisibilitychange"):"undefined"!=typeof document.webkitHidden&&(r.hidden="webkitHidden",r.visibilityChange="webkitvisibilitychange"),r.autoPlay=e.proxy(r.autoPlay,r),r.autoPlayClear=e.proxy(r.autoPlayClear,r),r.changeSlide=e.proxy(r.changeSlide,r),r.clickHandler=e.proxy(r.clickHandler,r),r.selectHandler=e.proxy(r.selectHandler,r),r.setPosition=e.proxy(r.setPosition,r),r.swipeHandler=e.proxy(r.swipeHandler,r),r.dragHandler=e.proxy(r.dragHandler,r),r.keyHandler=e.proxy(r.keyHandler,r),r.autoPlayIterator=e.proxy(r.autoPlayIterator,r),r.instanceUid=n++,r.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,r.registerBreakpoints(),r.init(!0),r.checkResponsive(!0)}var n=0;return t}(),t.prototype.addSlide=t.prototype.slickAdd=function(t,n,i){var o=this;if("boolean"==typeof n)i=n,n=null;else if(n<0||n>=o.slideCount)return!1;o.unload(),"number"==typeof n?0===n&&0===o.$slides.length?e(t).appendTo(o.$slideTrack):i?e(t).insertBefore(o.$slides.eq(n)):e(t).insertAfter(o.$slides.eq(n)):i===!0?e(t).prependTo(o.$slideTrack):e(t).appendTo(o.$slideTrack),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slides.each(function(t,n){e(n).attr("data-slick-index",t)}),o.$slidesCache=o.$slides,o.reinit()},t.prototype.animateHeight=function(){var e=this;if(1===e.options.slidesToShow&&e.options.adaptiveHeight===!0&&e.options.vertical===!1){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.animate({height:t},e.options.speed)}},t.prototype.animateSlide=function(t,n){var i={},o=this;o.animateHeight(),o.options.rtl===!0&&o.options.vertical===!1&&(t=-t),o.transformsEnabled===!1?o.options.vertical===!1?o.$slideTrack.animate({left:t},o.options.speed,o.options.easing,n):o.$slideTrack.animate({top:t},o.options.speed,o.options.easing,n):o.cssTransitions===!1?(o.options.rtl===!0&&(o.currentLeft=-o.currentLeft),e({animStart:o.currentLeft}).animate({animStart:t},{duration:o.options.speed,easing:o.options.easing,step:function(e){e=Math.ceil(e),o.options.vertical===!1?(i[o.animType]="translate("+e+"px, 0px)",o.$slideTrack.css(i)):(i[o.animType]="translate(0px,"+e+"px)",o.$slideTrack.css(i))},complete:function(){n&&n.call()}})):(o.applyTransition(),t=Math.ceil(t),o.options.vertical===!1?i[o.animType]="translate3d("+t+"px, 0px, 0px)":i[o.animType]="translate3d(0px,"+t+"px, 0px)",o.$slideTrack.css(i),n&&setTimeout(function(){o.disableTransition(),n.call()},o.options.speed))},t.prototype.asNavFor=function(t){var n=this,i=n.options.asNavFor;i&&null!==i&&(i=e(i).not(n.$slider)),null!==i&&"object"==typeof i&&i.each(function(){var n=e(this).slick("getSlick");n.unslicked||n.slideHandler(t,!0)})},t.prototype.applyTransition=function(e){var t=this,n={};t.options.fade===!1?n[t.transitionType]=t.transformType+" "+t.options.speed+"ms "+t.options.cssEase:n[t.transitionType]="opacity "+t.options.speed+"ms "+t.options.cssEase,t.options.fade===!1?t.$slideTrack.css(n):t.$slides.eq(e).css(n)},t.prototype.autoPlay=function(){var e=this;e.autoPlayTimer&&clearInterval(e.autoPlayTimer),e.slideCount>e.options.slidesToShow&&e.paused!==!0&&(e.autoPlayTimer=setInterval(e.autoPlayIterator,e.options.autoplaySpeed))},t.prototype.autoPlayClear=function(){var e=this;e.autoPlayTimer&&clearInterval(e.autoPlayTimer)},t.prototype.autoPlayIterator=function(){var e=this;e.options.infinite===!1?1===e.direction?(e.currentSlide+1===e.slideCount-1&&(e.direction=0),e.slideHandler(e.currentSlide+e.options.slidesToScroll)):(e.currentSlide-1===0&&(e.direction=1),e.slideHandler(e.currentSlide-e.options.slidesToScroll)):e.slideHandler(e.currentSlide+e.options.slidesToScroll)},t.prototype.buildArrows=function(){var t=this;t.options.arrows===!0&&(t.$prevArrow=e(t.options.prevArrow).addClass("slick-arrow"),t.$nextArrow=e(t.options.nextArrow).addClass("slick-arrow"),t.slideCount>t.options.slidesToShow?(t.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),t.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.prependTo(t.options.appendArrows),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.appendTo(t.options.appendArrows),t.options.infinite!==!0&&t.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):t.$prevArrow.add(t.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},t.prototype.buildDots=function(){var t,n,i=this;if(i.options.dots===!0&&i.slideCount>i.options.slidesToShow){for(n='<ul class="'+i.options.dotsClass+'">',t=0;t<=i.getDotCount();t+=1)n+="<li>"+i.options.customPaging.call(this,i,t)+"</li>";n+="</ul>",i.$dots=e(n).appendTo(i.options.appendDots),i.$dots.find("li").first().addClass("slick-active").attr("aria-hidden","false")}},t.prototype.buildOut=function(){var t=this;t.$slides=t.$slider.children(t.options.slide+":not(.slick-cloned)").addClass("slick-slide"),t.slideCount=t.$slides.length,t.$slides.each(function(t,n){e(n).attr("data-slick-index",t).data("originalStyling",e(n).attr("style")||"")}),t.$slider.addClass("slick-slider"),t.$slideTrack=0===t.slideCount?e('<div class="slick-track"/>').appendTo(t.$slider):t.$slides.wrapAll('<div class="slick-track"/>').parent(),t.$list=t.$slideTrack.wrap('<div aria-live="polite" class="slick-list"/>').parent(),t.$slideTrack.css("opacity",0),t.options.centerMode!==!0&&t.options.swipeToSlide!==!0||(t.options.slidesToScroll=1),e("img[data-lazy]",t.$slider).not("[src]").addClass("slick-loading"),t.setupInfinite(),t.buildArrows(),t.buildDots(),t.updateDots(),t.setSlideClasses("number"==typeof t.currentSlide?t.currentSlide:0),t.options.draggable===!0&&t.$list.addClass("draggable")},t.prototype.buildRows=function(){var e,t,n,i,o,r,s,a=this;if(i=document.createDocumentFragment(),r=a.$slider.children(),a.options.rows>1){for(s=a.options.slidesPerRow*a.options.rows,o=Math.ceil(r.length/s),e=0;e<o;e++){var l=document.createElement("div");for(t=0;t<a.options.rows;t++){var u=document.createElement("div");for(n=0;n<a.options.slidesPerRow;n++){var c=e*s+(t*a.options.slidesPerRow+n);r.get(c)&&u.appendChild(r.get(c))}l.appendChild(u)}i.appendChild(l)}a.$slider.html(i),a.$slider.children().children().children().css({width:100/a.options.slidesPerRow+"%",display:"inline-block"})}},t.prototype.checkResponsive=function(t,n){var i,o,r,s=this,a=!1,l=s.$slider.width(),u=window.innerWidth||e(window).width();if("window"===s.respondTo?r=u:"slider"===s.respondTo?r=l:"min"===s.respondTo&&(r=Math.min(u,l)),s.options.responsive&&s.options.responsive.length&&null!==s.options.responsive){o=null;for(i in s.breakpoints)s.breakpoints.hasOwnProperty(i)&&(s.originalSettings.mobileFirst===!1?r<s.breakpoints[i]&&(o=s.breakpoints[i]):r>s.breakpoints[i]&&(o=s.breakpoints[i]));null!==o?null!==s.activeBreakpoint?(o!==s.activeBreakpoint||n)&&(s.activeBreakpoint=o,"unslick"===s.breakpointSettings[o]?s.unslick(o):(s.options=e.extend({},s.originalSettings,s.breakpointSettings[o]),t===!0&&(s.currentSlide=s.options.initialSlide),s.refresh(t)),a=o):(s.activeBreakpoint=o,"unslick"===s.breakpointSettings[o]?s.unslick(o):(s.options=e.extend({},s.originalSettings,s.breakpointSettings[o]),t===!0&&(s.currentSlide=s.options.initialSlide),s.refresh(t)),a=o):null!==s.activeBreakpoint&&(s.activeBreakpoint=null,s.options=s.originalSettings,t===!0&&(s.currentSlide=s.options.initialSlide),s.refresh(t),a=o),t||a===!1||s.$slider.trigger("breakpoint",[s,a])}},t.prototype.changeSlide=function(t,n){var i,o,r,s=this,a=e(t.target);switch(a.is("a")&&t.preventDefault(),a.is("li")||(a=a.closest("li")),r=s.slideCount%s.options.slidesToScroll!==0,i=r?0:(s.slideCount-s.currentSlide)%s.options.slidesToScroll,t.data.message){case"previous":o=0===i?s.options.slidesToScroll:s.options.slidesToShow-i,s.slideCount>s.options.slidesToShow&&s.slideHandler(s.currentSlide-o,!1,n);break;case"next":o=0===i?s.options.slidesToScroll:i,s.slideCount>s.options.slidesToShow&&s.slideHandler(s.currentSlide+o,!1,n);break;case"index":var l=0===t.data.index?0:t.data.index||a.index()*s.options.slidesToScroll;s.slideHandler(s.checkNavigable(l),!1,n),a.children().trigger("focus");break;default:return}},t.prototype.checkNavigable=function(e){var t,n,i=this;if(t=i.getNavigableIndexes(),n=0,e>t[t.length-1])e=t[t.length-1];else for(var o in t){if(e<t[o]){e=n;break}n=t[o]}return e},t.prototype.cleanUpEvents=function(){var t=this;t.options.dots&&null!==t.$dots&&(e("li",t.$dots).off("click.slick",t.changeSlide),t.options.pauseOnDotsHover===!0&&t.options.autoplay===!0&&e("li",t.$dots).off("mouseenter.slick",e.proxy(t.setPaused,t,!0)).off("mouseleave.slick",e.proxy(t.setPaused,t,!1))),t.options.arrows===!0&&t.slideCount>t.options.slidesToShow&&(t.$prevArrow&&t.$prevArrow.off("click.slick",t.changeSlide),t.$nextArrow&&t.$nextArrow.off("click.slick",t.changeSlide)),t.$list.off("touchstart.slick mousedown.slick",t.swipeHandler),t.$list.off("touchmove.slick mousemove.slick",t.swipeHandler),t.$list.off("touchend.slick mouseup.slick",t.swipeHandler),t.$list.off("touchcancel.slick mouseleave.slick",t.swipeHandler),t.$list.off("click.slick",t.clickHandler),e(document).off(t.visibilityChange,t.visibility),t.$list.off("mouseenter.slick",e.proxy(t.setPaused,t,!0)),t.$list.off("mouseleave.slick",e.proxy(t.setPaused,t,!1)),t.options.accessibility===!0&&t.$list.off("keydown.slick",t.keyHandler),t.options.focusOnSelect===!0&&e(t.$slideTrack).children().off("click.slick",t.selectHandler),e(window).off("orientationchange.slick.slick-"+t.instanceUid,t.orientationChange),e(window).off("resize.slick.slick-"+t.instanceUid,t.resize),e("[draggable!=true]",t.$slideTrack).off("dragstart",t.preventDefault),e(window).off("load.slick.slick-"+t.instanceUid,t.setPosition),e(document).off("ready.slick.slick-"+t.instanceUid,t.setPosition)},t.prototype.cleanUpRows=function(){var e,t=this;t.options.rows>1&&(e=t.$slides.children().children(),e.removeAttr("style"),t.$slider.html(e))},t.prototype.clickHandler=function(e){var t=this;t.shouldClick===!1&&(e.stopImmediatePropagation(),e.stopPropagation(),e.preventDefault())},t.prototype.destroy=function(t){var n=this;n.autoPlayClear(),n.touchObject={},n.cleanUpEvents(),e(".slick-cloned",n.$slider).detach(),n.$dots&&n.$dots.remove(),n.$prevArrow&&n.$prevArrow.length&&(n.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),n.htmlExpr.test(n.options.prevArrow)&&n.$prevArrow.remove()),n.$nextArrow&&n.$nextArrow.length&&(n.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),n.htmlExpr.test(n.options.nextArrow)&&n.$nextArrow.remove()),n.$slides&&(n.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){e(this).attr("style",e(this).data("originalStyling"))}),n.$slideTrack.children(this.options.slide).detach(),n.$slideTrack.detach(),n.$list.detach(),n.$slider.append(n.$slides)),n.cleanUpRows(),n.$slider.removeClass("slick-slider"),n.$slider.removeClass("slick-initialized"),n.unslicked=!0,t||n.$slider.trigger("destroy",[n])},t.prototype.disableTransition=function(e){var t=this,n={};n[t.transitionType]="",t.options.fade===!1?t.$slideTrack.css(n):t.$slides.eq(e).css(n)},t.prototype.fadeSlide=function(e,t){var n=this;n.cssTransitions===!1?(n.$slides.eq(e).css({zIndex:n.options.zIndex}),n.$slides.eq(e).animate({opacity:1},n.options.speed,n.options.easing,t)):(n.applyTransition(e),n.$slides.eq(e).css({opacity:1,zIndex:n.options.zIndex}),t&&setTimeout(function(){n.disableTransition(e),t.call()},n.options.speed))},t.prototype.fadeSlideOut=function(e){var t=this;t.cssTransitions===!1?t.$slides.eq(e).animate({opacity:0,zIndex:t.options.zIndex-2},t.options.speed,t.options.easing):(t.applyTransition(e),t.$slides.eq(e).css({opacity:0,zIndex:t.options.zIndex-2}))},t.prototype.filterSlides=t.prototype.slickFilter=function(e){var t=this;null!==e&&(t.$slidesCache=t.$slides,t.unload(),t.$slideTrack.children(this.options.slide).detach(),t.$slidesCache.filter(e).appendTo(t.$slideTrack),t.reinit())},t.prototype.getCurrent=t.prototype.slickCurrentSlide=function(){var e=this;return e.currentSlide},t.prototype.getDotCount=function(){var e=this,t=0,n=0,i=0;if(e.options.infinite===!0)for(;t<e.slideCount;)++i,t=n+e.options.slidesToScroll,n+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else if(e.options.centerMode===!0)i=e.slideCount;else for(;t<e.slideCount;)++i,t=n+e.options.slidesToScroll,n+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;return i-1},t.prototype.getLeft=function(e){var t,n,i,o=this,r=0;return o.slideOffset=0,n=o.$slides.first().outerHeight(!0),o.options.infinite===!0?(o.slideCount>o.options.slidesToShow&&(o.slideOffset=o.slideWidth*o.options.slidesToShow*-1,r=n*o.options.slidesToShow*-1),o.slideCount%o.options.slidesToScroll!==0&&e+o.options.slidesToScroll>o.slideCount&&o.slideCount>o.options.slidesToShow&&(e>o.slideCount?(o.slideOffset=(o.options.slidesToShow-(e-o.slideCount))*o.slideWidth*-1,r=(o.options.slidesToShow-(e-o.slideCount))*n*-1):(o.slideOffset=o.slideCount%o.options.slidesToScroll*o.slideWidth*-1,r=o.slideCount%o.options.slidesToScroll*n*-1))):e+o.options.slidesToShow>o.slideCount&&(o.slideOffset=(e+o.options.slidesToShow-o.slideCount)*o.slideWidth,r=(e+o.options.slidesToShow-o.slideCount)*n),o.slideCount<=o.options.slidesToShow&&(o.slideOffset=0,r=0),o.options.centerMode===!0&&o.options.infinite===!0?o.slideOffset+=o.slideWidth*Math.floor(o.options.slidesToShow/2)-o.slideWidth:o.options.centerMode===!0&&(o.slideOffset=0,o.slideOffset+=o.slideWidth*Math.floor(o.options.slidesToShow/2)),t=o.options.vertical===!1?e*o.slideWidth*-1+o.slideOffset:e*n*-1+r,o.options.variableWidth===!0&&(i=o.slideCount<=o.options.slidesToShow||o.options.infinite===!1?o.$slideTrack.children(".slick-slide").eq(e):o.$slideTrack.children(".slick-slide").eq(e+o.options.slidesToShow),t=o.options.rtl===!0?i[0]?(o.$slideTrack.width()-i[0].offsetLeft-i.width())*-1:0:i[0]?i[0].offsetLeft*-1:0,o.options.centerMode===!0&&(i=o.slideCount<=o.options.slidesToShow||o.options.infinite===!1?o.$slideTrack.children(".slick-slide").eq(e):o.$slideTrack.children(".slick-slide").eq(e+o.options.slidesToShow+1),t=o.options.rtl===!0?i[0]?(o.$slideTrack.width()-i[0].offsetLeft-i.width())*-1:0:i[0]?i[0].offsetLeft*-1:0,t+=(o.$list.width()-i.outerWidth())/2)),t},t.prototype.getOption=t.prototype.slickGetOption=function(e){var t=this;return t.options[e]},t.prototype.getNavigableIndexes=function(){var e,t=this,n=0,i=0,o=[];for(t.options.infinite===!1?e=t.slideCount:(n=t.options.slidesToScroll*-1,i=t.options.slidesToScroll*-1,e=2*t.slideCount);n<e;)o.push(n),n=i+t.options.slidesToScroll,i+=t.options.slidesToScroll<=t.options.slidesToShow?t.options.slidesToScroll:t.options.slidesToShow;return o},t.prototype.getSlick=function(){return this},t.prototype.getSlideCount=function(){var t,n,i,o=this;return i=o.options.centerMode===!0?o.slideWidth*Math.floor(o.options.slidesToShow/2):0,o.options.swipeToSlide===!0?(o.$slideTrack.find(".slick-slide").each(function(t,r){if(r.offsetLeft-i+e(r).outerWidth()/2>o.swipeLeft*-1)return n=r,!1}),t=Math.abs(e(n).attr("data-slick-index")-o.currentSlide)||1):o.options.slidesToScroll},t.prototype.goTo=t.prototype.slickGoTo=function(e,t){var n=this;n.changeSlide({data:{message:"index",index:parseInt(e)}},t)},t.prototype.init=function(t){var n=this;e(n.$slider).hasClass("slick-initialized")||(e(n.$slider).addClass("slick-initialized"),n.buildRows(),n.buildOut(),n.setProps(),n.startLoad(),n.loadSlider(),n.initializeEvents(),n.updateArrows(),n.updateDots()),t&&n.$slider.trigger("init",[n]),n.options.accessibility===!0&&n.initADA()},t.prototype.initArrowEvents=function(){var e=this;e.options.arrows===!0&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.on("click.slick",{message:"previous"},e.changeSlide),e.$nextArrow.on("click.slick",{message:"next"},e.changeSlide))},t.prototype.initDotEvents=function(){var t=this;t.options.dots===!0&&t.slideCount>t.options.slidesToShow&&e("li",t.$dots).on("click.slick",{message:"index"},t.changeSlide),t.options.dots===!0&&t.options.pauseOnDotsHover===!0&&t.options.autoplay===!0&&e("li",t.$dots).on("mouseenter.slick",e.proxy(t.setPaused,t,!0)).on("mouseleave.slick",e.proxy(t.setPaused,t,!1))},t.prototype.initializeEvents=function(){var t=this;t.initArrowEvents(),t.initDotEvents(),t.$list.on("touchstart.slick mousedown.slick",{action:"start"},t.swipeHandler),t.$list.on("touchmove.slick mousemove.slick",{action:"move"},t.swipeHandler),t.$list.on("touchend.slick mouseup.slick",{action:"end"},t.swipeHandler),t.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},t.swipeHandler),t.$list.on("click.slick",t.clickHandler),e(document).on(t.visibilityChange,e.proxy(t.visibility,t)),t.$list.on("mouseenter.slick",e.proxy(t.setPaused,t,!0)),t.$list.on("mouseleave.slick",e.proxy(t.setPaused,t,!1)),t.options.accessibility===!0&&t.$list.on("keydown.slick",t.keyHandler),
t.options.focusOnSelect===!0&&e(t.$slideTrack).children().on("click.slick",t.selectHandler),e(window).on("orientationchange.slick.slick-"+t.instanceUid,e.proxy(t.orientationChange,t)),e(window).on("resize.slick.slick-"+t.instanceUid,e.proxy(t.resize,t)),e("[draggable!=true]",t.$slideTrack).on("dragstart",t.preventDefault),e(window).on("load.slick.slick-"+t.instanceUid,t.setPosition),e(document).on("ready.slick.slick-"+t.instanceUid,t.setPosition)},t.prototype.initUI=function(){var e=this;e.options.arrows===!0&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.show(),e.$nextArrow.show()),e.options.dots===!0&&e.slideCount>e.options.slidesToShow&&e.$dots.show(),e.options.autoplay===!0&&e.autoPlay()},t.prototype.keyHandler=function(e){var t=this;e.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===e.keyCode&&t.options.accessibility===!0?t.changeSlide({data:{message:"previous"}}):39===e.keyCode&&t.options.accessibility===!0&&t.changeSlide({data:{message:"next"}}))},t.prototype.lazyLoad=function(){function t(t){e("img[data-lazy]",t).each(function(){var t=e(this),n=e(this).attr("data-lazy"),i=document.createElement("img");i.onload=function(){t.animate({opacity:0},100,function(){t.attr("src",n).animate({opacity:1},200,function(){t.removeAttr("data-lazy").removeClass("slick-loading")})})},i.src=n}),e("[data-lazy-background]",t).each(function(){var t=e(this),n=e(this).attr("data-lazy-background"),i=document.createElement("img");i.onload=function(){t.animate({opacity:0},100,function(){t.css("background-image","url("+n+")").animate({opacity:1},200,function(){t.removeAttr("data-lazy-background").removeClass("slick-loading-background")})})},i.src=n})}var n,i,o,r,s=this;s.options.centerMode===!0?s.options.infinite===!0?(o=s.currentSlide+(s.options.slidesToShow/2+1),r=o+s.options.slidesToShow+2):(o=Math.max(0,s.currentSlide-(s.options.slidesToShow/2+1)),r=2+(s.options.slidesToShow/2+1)+s.currentSlide):(o=s.options.infinite?s.options.slidesToShow+s.currentSlide:s.currentSlide,r=o+s.options.slidesToShow,s.options.fade===!0&&(o>0&&o--,r<=s.slideCount&&r++)),n=s.$slider.find(".slick-slide").slice(o,r),t(n),s.slideCount<=s.options.slidesToShow?(i=s.$slider.find(".slick-slide"),t(i)):s.currentSlide>=s.slideCount-s.options.slidesToShow?(i=s.$slider.find(".slick-cloned").slice(0,s.options.slidesToShow),t(i)):0===s.currentSlide&&(i=s.$slider.find(".slick-cloned").slice(s.options.slidesToShow*-1),t(i))},t.prototype.loadSlider=function(){var e=this;e.setPosition(),e.$slideTrack.css({opacity:1}),e.$slider.removeClass("slick-loading"),e.initUI(),"progressive"===e.options.lazyLoad&&e.progressiveLazyLoad()},t.prototype.next=t.prototype.slickNext=function(){var e=this;e.changeSlide({data:{message:"next"}})},t.prototype.orientationChange=function(){var e=this;e.checkResponsive(),e.setPosition()},t.prototype.pause=t.prototype.slickPause=function(){var e=this;e.autoPlayClear(),e.paused=!0},t.prototype.play=t.prototype.slickPlay=function(){var e=this;e.paused=!1,e.autoPlay()},t.prototype.postSlide=function(e){var t=this;t.$slider.trigger("afterChange",[t,e]),t.animating=!1,t.setPosition(),t.swipeLeft=null,t.options.autoplay===!0&&t.paused===!1&&t.autoPlay(),t.options.accessibility===!0&&t.initADA()},t.prototype.prev=t.prototype.slickPrev=function(){var e=this;e.changeSlide({data:{message:"previous"}})},t.prototype.preventDefault=function(e){e.preventDefault()},t.prototype.progressiveLazyLoad=function(){var t,n,i=this;t=e("img[data-lazy]",i.$slider).length,t>0&&(n=e("img[data-lazy]",i.$slider).first(),n.attr("src",null),n.attr("src",n.attr("data-lazy")).removeClass("slick-loading").load(function(){n.removeAttr("data-lazy"),i.progressiveLazyLoad(),i.options.adaptiveHeight===!0&&i.setPosition()}).error(function(){n.removeAttr("data-lazy"),i.progressiveLazyLoad()}))},t.prototype.refresh=function(t){var n,i,o=this;i=o.slideCount-o.options.slidesToShow,o.options.infinite||(o.slideCount<=o.options.slidesToShow?o.currentSlide=0:o.currentSlide>i&&(o.currentSlide=i)),n=o.currentSlide,o.destroy(!0),e.extend(o,o.initials,{currentSlide:n}),o.init(),t||o.changeSlide({data:{message:"index",index:n}},!1)},t.prototype.registerBreakpoints=function(){var t,n,i,o=this,r=o.options.responsive||null;if("array"===e.type(r)&&r.length){o.respondTo=o.options.respondTo||"window";for(t in r)if(i=o.breakpoints.length-1,n=r[t].breakpoint,r.hasOwnProperty(t)){for(;i>=0;)o.breakpoints[i]&&o.breakpoints[i]===n&&o.breakpoints.splice(i,1),i--;o.breakpoints.push(n),o.breakpointSettings[n]=r[t].settings}o.breakpoints.sort(function(e,t){return o.options.mobileFirst?e-t:t-e})}},t.prototype.reinit=function(){var t=this;t.$slides=t.$slideTrack.children(t.options.slide).addClass("slick-slide"),t.slideCount=t.$slides.length,t.currentSlide>=t.slideCount&&0!==t.currentSlide&&(t.currentSlide=t.currentSlide-t.options.slidesToScroll),t.slideCount<=t.options.slidesToShow&&(t.currentSlide=0),t.registerBreakpoints(),t.setProps(),t.setupInfinite(),t.buildArrows(),t.updateArrows(),t.initArrowEvents(),t.buildDots(),t.updateDots(),t.initDotEvents(),t.checkResponsive(!1,!0),t.options.focusOnSelect===!0&&e(t.$slideTrack).children().on("click.slick",t.selectHandler),t.setSlideClasses(0),t.setPosition(),t.$slider.trigger("reInit",[t]),t.options.autoplay===!0&&t.focusHandler()},t.prototype.resize=function(){var t=this;e(window).width()!==t.windowWidth&&(clearTimeout(t.windowDelay),t.windowDelay=window.setTimeout(function(){t.windowWidth=e(window).width(),t.checkResponsive(),t.unslicked||t.setPosition()},50))},t.prototype.removeSlide=t.prototype.slickRemove=function(e,t,n){var i=this;return"boolean"==typeof e?(t=e,e=t===!0?0:i.slideCount-1):e=t===!0?--e:e,!(i.slideCount<1||e<0||e>i.slideCount-1)&&(i.unload(),n===!0?i.$slideTrack.children().remove():i.$slideTrack.children(this.options.slide).eq(e).remove(),i.$slides=i.$slideTrack.children(this.options.slide),i.$slideTrack.children(this.options.slide).detach(),i.$slideTrack.append(i.$slides),i.$slidesCache=i.$slides,void i.reinit())},t.prototype.setCSS=function(e){var t,n,i=this,o={};i.options.rtl===!0&&(e=-e),t="left"==i.positionProp?Math.ceil(e)+"px":"0px",n="top"==i.positionProp?Math.ceil(e)+"px":"0px",o[i.positionProp]=e,i.transformsEnabled===!1?i.$slideTrack.css(o):(o={},i.cssTransitions===!1?(o[i.animType]="translate("+t+", "+n+")",i.$slideTrack.css(o)):(o[i.animType]="translate3d("+t+", "+n+", 0px)",i.$slideTrack.css(o)))},t.prototype.setDimensions=function(){var e=this;e.options.vertical===!1?e.options.centerMode===!0&&e.$list.css({padding:"0px "+e.options.centerPadding}):(e.$list.height(e.$slides.first().outerHeight(!0)*e.options.slidesToShow),e.options.centerMode===!0&&e.$list.css({padding:e.options.centerPadding+" 0px"})),e.listWidth=e.$list.width(),e.listHeight=e.$list.height(),e.options.vertical===!1&&e.options.variableWidth===!1?(e.slideWidth=Math.ceil(e.listWidth/e.options.slidesToShow),e.$slideTrack.width(Math.ceil(e.slideWidth*e.$slideTrack.children(".slick-slide").length))):e.options.variableWidth===!0?e.$slideTrack.width(5e3*e.slideCount):(e.slideWidth=Math.ceil(e.listWidth),e.$slideTrack.height(Math.ceil(e.$slides.first().outerHeight(!0)*e.$slideTrack.children(".slick-slide").length)));var t=e.$slides.first().outerWidth(!0)-e.$slides.first().width();e.options.variableWidth===!1&&e.$slideTrack.children(".slick-slide").width(e.slideWidth-t)},t.prototype.setFade=function(){var t,n=this;n.$slides.each(function(i,o){t=n.slideWidth*i*-1,n.options.rtl===!0?e(o).css({position:"relative",right:t,top:0,zIndex:n.options.zIndex-2,opacity:0}):e(o).css({position:"relative",left:t,top:0,zIndex:n.options.zIndex-2,opacity:0})}),n.$slides.eq(n.currentSlide).css({zIndex:n.options.zIndex-1,opacity:1})},t.prototype.setHeight=function(){var e=this;if(1===e.options.slidesToShow&&e.options.adaptiveHeight===!0&&e.options.vertical===!1){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.css("height",t)}},t.prototype.setOption=t.prototype.slickSetOption=function(t,n,i){var o,r,s=this;if("responsive"===t&&"array"===e.type(n))for(r in n)if("array"!==e.type(s.options.responsive))s.options.responsive=[n[r]];else{for(o=s.options.responsive.length-1;o>=0;)s.options.responsive[o].breakpoint===n[r].breakpoint&&s.options.responsive.splice(o,1),o--;s.options.responsive.push(n[r])}else s.options[t]=n;i===!0&&(s.unload(),s.reinit())},t.prototype.setPosition=function(){var e=this;e.setDimensions(),e.setHeight(),e.options.fade===!1?e.setCSS(e.getLeft(e.currentSlide)):e.setFade(),e.$slider.trigger("setPosition",[e])},t.prototype.setProps=function(){var e=this,t=document.body.style;e.positionProp=e.options.vertical===!0?"top":"left","top"===e.positionProp?e.$slider.addClass("slick-vertical"):e.$slider.removeClass("slick-vertical"),void 0===t.WebkitTransition&&void 0===t.MozTransition&&void 0===t.msTransition||e.options.useCSS===!0&&(e.cssTransitions=!0),e.options.fade&&("number"==typeof e.options.zIndex?e.options.zIndex<3&&(e.options.zIndex=3):e.options.zIndex=e.defaults.zIndex),void 0!==t.OTransform&&(e.animType="OTransform",e.transformType="-o-transform",e.transitionType="OTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.MozTransform&&(e.animType="MozTransform",e.transformType="-moz-transform",e.transitionType="MozTransition",void 0===t.perspectiveProperty&&void 0===t.MozPerspective&&(e.animType=!1)),void 0!==t.webkitTransform&&(e.animType="webkitTransform",e.transformType="-webkit-transform",e.transitionType="webkitTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.msTransform&&(e.animType="msTransform",e.transformType="-ms-transform",e.transitionType="msTransition",void 0===t.msTransform&&(e.animType=!1)),void 0!==t.transform&&e.animType!==!1&&(e.animType="transform",e.transformType="transform",e.transitionType="transition"),e.transformsEnabled=e.options.useTransform&&null!==e.animType&&e.animType!==!1},t.prototype.setSlideClasses=function(e){var t,n,i,o,r=this;n=r.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),r.$slides.eq(e).addClass("slick-current"),r.options.centerMode===!0?(t=Math.floor(r.options.slidesToShow/2),r.options.infinite===!0&&(e>=t&&e<=r.slideCount-1-t?r.$slides.slice(e-t,e+t+1).addClass("slick-active").attr("aria-hidden","false"):(i=r.options.slidesToShow+e,n.slice(i-t+1,i+t+2).addClass("slick-active").attr("aria-hidden","false")),0===e?n.eq(n.length-1-r.options.slidesToShow).addClass("slick-center"):e===r.slideCount-1&&n.eq(r.options.slidesToShow).addClass("slick-center")),r.$slides.eq(e).addClass("slick-center")):e>=0&&e<=r.slideCount-r.options.slidesToShow?r.$slides.slice(e,e+r.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):n.length<=r.options.slidesToShow?n.addClass("slick-active").attr("aria-hidden","false"):(o=r.slideCount%r.options.slidesToShow,i=r.options.infinite===!0?r.options.slidesToShow+e:e,r.options.slidesToShow==r.options.slidesToScroll&&r.slideCount-e<r.options.slidesToShow?n.slice(i-(r.options.slidesToShow-o),i+o).addClass("slick-active").attr("aria-hidden","false"):n.slice(i,i+r.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false")),"ondemand"===r.options.lazyLoad&&r.lazyLoad()},t.prototype.setupInfinite=function(){var t,n,i,o=this;if(o.options.fade===!0&&(o.options.centerMode=!1),o.options.infinite===!0&&o.options.fade===!1&&(n=null,o.slideCount>o.options.slidesToShow)){for(i=o.options.centerMode===!0?o.options.slidesToShow+1:o.options.slidesToShow,t=o.slideCount;t>o.slideCount-i;t-=1)n=t-1,e(o.$slides[n]).clone(!0).attr("id","").attr("data-slick-index",n-o.slideCount).prependTo(o.$slideTrack).addClass("slick-cloned");for(t=0;t<i;t+=1)n=t,e(o.$slides[n]).clone(!0).attr("id","").attr("data-slick-index",n+o.slideCount).appendTo(o.$slideTrack).addClass("slick-cloned");o.$slideTrack.find(".slick-cloned").find("[id]").each(function(){e(this).attr("id","")})}},t.prototype.setPaused=function(e){var t=this;t.options.autoplay===!0&&t.options.pauseOnHover===!0&&(t.paused=e,e?t.autoPlayClear():t.autoPlay())},t.prototype.selectHandler=function(t){var n=this,i=e(t.target).is(".slick-slide")?e(t.target):e(t.target).parents(".slick-slide"),o=parseInt(i.attr("data-slick-index"));return o||(o=0),n.slideCount<=n.options.slidesToShow?(n.setSlideClasses(o),void n.asNavFor(o)):void n.slideHandler(o)},t.prototype.slideHandler=function(e,t,n){var i,o,r,s,a=null,l=this;if(t=t||!1,(l.animating!==!0||l.options.waitForAnimate!==!0)&&!(l.options.fade===!0&&l.currentSlide===e||l.slideCount<=l.options.slidesToShow))return t===!1&&l.asNavFor(e),i=e,a=l.getLeft(i),s=l.getLeft(l.currentSlide),l.currentLeft=null===l.swipeLeft?s:l.swipeLeft,l.options.infinite===!1&&l.options.centerMode===!1&&(e<0||e>l.getDotCount()*l.options.slidesToScroll)?void(l.options.fade===!1&&(i=l.currentSlide,n!==!0?l.animateSlide(s,function(){l.postSlide(i)}):l.postSlide(i))):l.options.infinite===!1&&l.options.centerMode===!0&&(e<0||e>l.slideCount-l.options.slidesToScroll)?void(l.options.fade===!1&&(i=l.currentSlide,n!==!0?l.animateSlide(s,function(){l.postSlide(i)}):l.postSlide(i))):(l.options.autoplay===!0&&clearInterval(l.autoPlayTimer),o=i<0?l.slideCount%l.options.slidesToScroll!==0?l.slideCount-l.slideCount%l.options.slidesToScroll:l.slideCount+i:i>=l.slideCount?l.slideCount%l.options.slidesToScroll!==0?0:i-l.slideCount:i,l.animating=!0,l.$slider.trigger("beforeChange",[l,l.currentSlide,o]),r=l.currentSlide,l.currentSlide=o,l.setSlideClasses(l.currentSlide),l.updateDots(),l.updateArrows(),l.options.fade===!0?(n!==!0?(l.fadeSlideOut(r),l.fadeSlide(o,function(){l.postSlide(o)})):l.postSlide(o),void l.animateHeight()):void(n!==!0?l.animateSlide(a,function(){l.postSlide(o)}):l.postSlide(o)))},t.prototype.startLoad=function(){var e=this;e.options.arrows===!0&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.hide(),e.$nextArrow.hide()),e.options.dots===!0&&e.slideCount>e.options.slidesToShow&&e.$dots.hide(),e.$slider.addClass("slick-loading")},t.prototype.swipeDirection=function(){var e,t,n,i,o=this;return e=o.touchObject.startX-o.touchObject.curX,t=o.touchObject.startY-o.touchObject.curY,n=Math.atan2(t,e),i=Math.round(180*n/Math.PI),i<0&&(i=360-Math.abs(i)),i<=45&&i>=0?o.options.rtl===!1?"left":"right":i<=360&&i>=315?o.options.rtl===!1?"left":"right":i>=135&&i<=225?o.options.rtl===!1?"right":"left":o.options.verticalSwiping===!0?i>=35&&i<=135?"left":"right":"vertical"},t.prototype.swipeEnd=function(e){var t,n=this;if(n.dragging=!1,n.shouldClick=!(n.touchObject.swipeLength>10),void 0===n.touchObject.curX)return!1;if(n.touchObject.edgeHit===!0&&n.$slider.trigger("edge",[n,n.swipeDirection()]),n.touchObject.swipeLength>=n.touchObject.minSwipe)switch(n.swipeDirection()){case"left":t=n.options.swipeToSlide?n.checkNavigable(n.currentSlide+n.getSlideCount()):n.currentSlide+n.getSlideCount(),n.slideHandler(t),n.currentDirection=0,n.touchObject={},n.$slider.trigger("swipe",[n,"left"]);break;case"right":t=n.options.swipeToSlide?n.checkNavigable(n.currentSlide-n.getSlideCount()):n.currentSlide-n.getSlideCount(),n.slideHandler(t),n.currentDirection=1,n.touchObject={},n.$slider.trigger("swipe",[n,"right"])}else n.touchObject.startX!==n.touchObject.curX&&(n.slideHandler(n.currentSlide),n.touchObject={})},t.prototype.swipeHandler=function(e){var t=this;if(!(t.options.swipe===!1||"ontouchend"in document&&t.options.swipe===!1||t.options.draggable===!1&&e.type.indexOf("mouse")!==-1))switch(t.touchObject.fingerCount=e.originalEvent&&void 0!==e.originalEvent.touches?e.originalEvent.touches.length:1,t.touchObject.minSwipe=t.listWidth/t.options.touchThreshold,t.options.verticalSwiping===!0&&(t.touchObject.minSwipe=t.listHeight/t.options.touchThreshold),e.data.action){case"start":t.swipeStart(e);break;case"move":t.swipeMove(e);break;case"end":t.swipeEnd(e)}},t.prototype.swipeMove=function(e){var t,n,i,o,r,s=this;return r=void 0!==e.originalEvent?e.originalEvent.touches:null,!(!s.dragging||r&&1!==r.length)&&(t=s.getLeft(s.currentSlide),s.touchObject.curX=void 0!==r?r[0].pageX:e.clientX,s.touchObject.curY=void 0!==r?r[0].pageY:e.clientY,s.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(s.touchObject.curX-s.touchObject.startX,2))),s.options.verticalSwiping===!0&&(s.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(s.touchObject.curY-s.touchObject.startY,2)))),n=s.swipeDirection(),"vertical"!==n?(void 0!==e.originalEvent&&s.touchObject.swipeLength>4&&e.preventDefault(),o=(s.options.rtl===!1?1:-1)*(s.touchObject.curX>s.touchObject.startX?1:-1),s.options.verticalSwiping===!0&&(o=s.touchObject.curY>s.touchObject.startY?1:-1),i=s.touchObject.swipeLength,s.touchObject.edgeHit=!1,s.options.infinite===!1&&(0===s.currentSlide&&"right"===n||s.currentSlide>=s.getDotCount()&&"left"===n)&&(i=s.touchObject.swipeLength*s.options.edgeFriction,s.touchObject.edgeHit=!0),s.options.vertical===!1?s.swipeLeft=t+i*o:s.swipeLeft=t+i*(s.$list.height()/s.listWidth)*o,s.options.verticalSwiping===!0&&(s.swipeLeft=t+i*o),s.options.fade!==!0&&s.options.touchMove!==!1&&(s.animating===!0?(s.swipeLeft=null,!1):void s.setCSS(s.swipeLeft))):void 0)},t.prototype.swipeStart=function(e){var t,n=this;return 1!==n.touchObject.fingerCount||n.slideCount<=n.options.slidesToShow?(n.touchObject={},!1):(void 0!==e.originalEvent&&void 0!==e.originalEvent.touches&&(t=e.originalEvent.touches[0]),n.touchObject.startX=n.touchObject.curX=void 0!==t?t.pageX:e.clientX,n.touchObject.startY=n.touchObject.curY=void 0!==t?t.pageY:e.clientY,void(n.dragging=!0))},t.prototype.unfilterSlides=t.prototype.slickUnfilter=function(){var e=this;null!==e.$slidesCache&&(e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.appendTo(e.$slideTrack),e.reinit())},t.prototype.unload=function(){var t=this;e(".slick-cloned",t.$slider).remove(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove(),t.$nextArrow&&t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove(),t.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},t.prototype.unslick=function(e){var t=this;t.$slider.trigger("unslick",[t,e]),t.destroy()},t.prototype.updateArrows=function(){var e,t=this;e=Math.floor(t.options.slidesToShow/2),t.options.arrows===!0&&t.slideCount>t.options.slidesToShow&&!t.options.infinite&&(t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),t.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===t.currentSlide?(t.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),t.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):t.currentSlide>=t.slideCount-t.options.slidesToShow&&t.options.centerMode===!1?(t.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")):t.currentSlide>=t.slideCount-1&&t.options.centerMode===!0&&(t.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},t.prototype.updateDots=function(){var e=this;null!==e.$dots&&(e.$dots.find("li").removeClass("slick-active").attr("aria-hidden","true"),e.$dots.find("li").eq(Math.floor(e.currentSlide/e.options.slidesToScroll)).addClass("slick-active").attr("aria-hidden","false"))},t.prototype.visibility=function(){var e=this;document[e.hidden]?(e.paused=!0,e.autoPlayClear()):e.options.autoplay===!0&&(e.paused=!1,e.autoPlay())},t.prototype.initADA=function(){var t=this;t.$slides.add(t.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),t.$slideTrack.attr("role","listbox"),t.$slides.not(t.$slideTrack.find(".slick-cloned")).each(function(n){e(this).attr({role:"option","aria-describedby":"slick-slide"+t.instanceUid+n})}),null!==t.$dots&&t.$dots.attr("role","tablist").find("li").each(function(n){e(this).attr({role:"presentation","aria-selected":"false","aria-controls":"navigation"+t.instanceUid+n,id:"slick-slide"+t.instanceUid+n})}).first().attr("aria-selected","true").end().find("button").attr("role","button").end().closest("div").attr("role","toolbar"),t.activateADA()},t.prototype.activateADA=function(){var e=this;e.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},t.prototype.focusHandler=function(){var t=this;t.$slider.on("focus.slick blur.slick","*",function(n){n.stopImmediatePropagation();var i=e(this);setTimeout(function(){t.isPlay&&(i.is(":focus")?(t.autoPlayClear(),t.paused=!0):(t.paused=!1,t.autoPlay()))},0)})},e.fn.slick=function(){var e,n,i=this,o=arguments[0],r=Array.prototype.slice.call(arguments,1),s=i.length;for(e=0;e<s;e++)if("object"==typeof o||"undefined"==typeof o?i[e].slick=new t(i[e],o):n=i[e].slick[o].apply(i[e].slick,r),"undefined"!=typeof n)return n;return i}}),function(e){e.fn.bPopup=function(t,n){function i(){switch(m.contentContainer=e(m.contentContainer||P),m.content){case"iframe":var t=e('<iframe class="b-iframe" '+m.iframeAttr+"></iframe>");t.appendTo(m.contentContainer),S=P.outerHeight(!0),T=P.outerWidth(!0),o(),t.attr("src",m.loadUrl),f(m.loadCallback);break;case"image":o(),e("<img />").load(function(){f(m.loadCallback),a(e(this))}).attr("src",m.loadUrl).hide().appendTo(m.contentContainer);break;default:o(),e('<div class="b-ajax-wrapper"></div>').load(m.loadUrl,m.loadData,function(t,n,i){f(m.loadCallback,n),a(e(this))}).hide().appendTo(m.contentContainer)}}function o(){m.modal&&e('<div class="b-modal '+v+'"></div>').css({backgroundColor:m.modalColor,position:"fixed",top:0,right:0,bottom:0,left:0,opacity:0,zIndex:m.zIndex+j}).appendTo(m.appendTo).fadeTo(m.speed,m.opacity),h(),P.data("bPopup",m).data("id",v).css({left:"slideIn"==m.transition||"slideBack"==m.transition?"slideBack"==m.transition?A.scrollLeft()+D:-1*(C+T):d(!(!m.follow[0]&&k||w)),position:m.positionStyle||"absolute",top:"slideDown"==m.transition||"slideUp"==m.transition?"slideUp"==m.transition?A.scrollTop()+E:x+-1*S:p(!(!m.follow[1]&&b||w)),"z-index":m.zIndex+j+1}).each(function(){m.appending&&e(this).appendTo(m.appendTo)}),u(!0)}function r(){return m.modal&&e(".b-modal."+P.data("id")).fadeTo(m.speed,0,function(){e(this).remove()}),m.scrollBar||e("html").css("overflow","auto"),e(".b-modal."+v).unbind("click"),A.unbind("keydown."+v),$.unbind("."+v).data("bPopup",0<$.data("bPopup")-1?$.data("bPopup")-1:null),P.undelegate(".bClose, ."+m.closeClass,"click."+v,r).data("bPopup",null),clearTimeout(O),u(),!1}function s(t){E=$.height(),D=$.width(),y=g(),(y.x||y.y)&&(clearTimeout(_),_=setTimeout(function(){h(),t=t||m.followSpeed;var n={};y.x&&(n.left=m.follow[0]?d(!0):"auto"),y.y&&(n.top=m.follow[1]?p(!0):"auto"),P.dequeue().each(function(){w?e(this).css({left:C,top:x}):e(this).animate(n,t,m.followEasing)})},50))}function a(e){var t=e.width(),n=e.height(),i={};m.contentContainer.css({height:n,width:t}),n>=P.height()&&(i.height=P.height()),t>=P.width()&&(i.width=P.width()),S=P.outerHeight(!0),T=P.outerWidth(!0),h(),m.contentContainer.css({height:"auto",width:"auto"}),i.left=d(!(!m.follow[0]&&k||w)),i.top=p(!(!m.follow[1]&&b||w)),P.animate(i,250,function(){e.show(),y=g()})}function l(){$.data("bPopup",j),P.delegate(".bClose, ."+m.closeClass,"click."+v,r),m.modalClose&&e(".b-modal."+v).css("cursor","pointer").bind("click",r),M||!m.follow[0]&&!m.follow[1]||$.bind("scroll."+v,function(){if(y.x||y.y){var e={};y.x&&(e.left=m.follow[0]?d(!w):"auto"),y.y&&(e.top=m.follow[1]?p(!w):"auto"),P.dequeue().animate(e,m.followSpeed,m.followEasing)}}).bind("resize."+v,function(){s()}),m.escClose&&A.bind("keydown."+v,function(e){27==e.which&&r()})}function u(e){function t(t){P.css({display:"block",opacity:1}).animate(t,m.speed,m.easing,function(){c(e)})}switch(e?m.transition:m.transitionClose||m.transition){case"slideIn":t({left:e?d(!(!m.follow[0]&&k||w)):A.scrollLeft()-(T||P.outerWidth(!0))-200});break;case"slideBack":t({left:e?d(!(!m.follow[0]&&k||w)):A.scrollLeft()+D+200});break;case"slideDown":t({top:e?p(!(!m.follow[1]&&b||w)):A.scrollTop()-(S||P.outerHeight(!0))-200});break;case"slideUp":t({top:e?p(!(!m.follow[1]&&b||w)):A.scrollTop()+E+200});break;default:P.stop().fadeTo(m.speed,e?1:0,function(){c(e)})}}function c(e){e?(l(),f(n),m.autoClose&&(O=setTimeout(r,m.autoClose))):(P.hide(),f(m.onClose),m.loadUrl&&(m.contentContainer.empty(),P.css({height:"auto",width:"auto"})))}function d(e){return e?C+A.scrollLeft():C}function p(e){return e?x+A.scrollTop():x}function f(t,n){e.isFunction(t)&&t.call(P,n)}function h(){x=b?m.position[1]:Math.max(0,(E-P.outerHeight(!0))/2-m.amsl),C=k?m.position[0]:(D-P.outerWidth(!0))/2,y=g()}function g(){return{x:D>P.outerWidth(!0),y:E>P.outerHeight(!0)}}e.isFunction(t)&&(n=t,t=null);var m=e.extend({},e.fn.bPopup.defaults,t);m.scrollBar||e("html").css("overflow","hidden");var v,y,b,k,w,x,C,S,T,_,O,P=this,A=e(document),$=e(window),E=$.height(),D=$.width(),M=/OS 6(_\d)+/i.test(navigator.userAgent),j=0;return P.close=function(){r()},P.reposition=function(e){s(e)},P.each(function(){e(this).data("bPopup")||(f(m.onOpen),j=($.data("bPopup")||0)+1,v="__b-popup"+j+"__",b="auto"!==m.position[1],k="auto"!==m.position[0],w="fixed"===m.positionStyle,S=P.outerHeight(!0),T=P.outerWidth(!0),m.loadUrl?i():o())})},e.fn.bPopup.defaults={amsl:50,appending:!0,appendTo:"body",autoClose:!1,closeClass:"b-close",content:"ajax",contentContainer:!1,easing:"swing",escClose:!0,follow:[!0,!0],followEasing:"swing",followSpeed:500,iframeAttr:'scrolling="no" frameborder="0"',loadCallback:!1,loadData:!1,loadUrl:!1,modal:!0,modalClose:!0,modalColor:"#000",onClose:!1,onOpen:!1,opacity:.7,position:["auto","auto"],positionStyle:"absolute",scrollBar:!0,speed:250,transition:"fadeIn",transitionClose:!1,zIndex:9997}}(jQuery),!function(e,t){"function"==typeof define&&define.amd?define("sifter",t):"object"==typeof exports?module.exports=t():e.Sifter=t()}(this,function(){var e=function(e,t){this.items=e,this.settings=t||{diacritics:!0}};e.prototype.tokenize=function(e){if(e=o(String(e||"").toLowerCase()),!e||!e.length)return[];var t,n,i,s,l=[],u=e.split(/ +/);for(t=0,n=u.length;t<n;t++){if(i=r(u[t]),this.settings.diacritics)for(s in a)a.hasOwnProperty(s)&&(i=i.replace(new RegExp(s,"g"),a[s]));l.push({string:u[t],regex:new RegExp(i,"i")})}return l},e.prototype.iterator=function(e,t){var n;n=s(e)?Array.prototype.forEach||function(e){for(var t=0,n=this.length;t<n;t++)e(this[t],t,this)}:function(e){for(var t in this)this.hasOwnProperty(t)&&e(this[t],t,this)},n.apply(e,[t])},e.prototype.getScoreFunction=function(e,t){var n,o,r,s,a;n=this,e=n.prepareSearch(e,t),r=e.tokens,o=e.options.fields,s=r.length,a=e.options.nesting;var l=function(e,t){var n,i;return e?(e=String(e||""),i=e.search(t.regex),i===-1?0:(n=t.string.length/e.length,0===i&&(n+=.5),n)):0},u=function(){var e=o.length;return e?1===e?function(e,t){return l(i(t,o[0],a),e)}:function(t,n){for(var r=0,s=0;r<e;r++)s+=l(i(n,o[r],a),t);return s/e}:function(){return 0}}();return s?1===s?function(e){return u(r[0],e)}:"and"===e.options.conjunction?function(e){for(var t,n=0,i=0;n<s;n++){if(t=u(r[n],e),t<=0)return 0;i+=t}return i/s}:function(e){for(var t=0,n=0;t<s;t++)n+=u(r[t],e);return n/s}:function(){return 0}},e.prototype.getSortFunction=function(e,n){var o,r,s,a,l,u,c,d,p,f,h;if(s=this,e=s.prepareSearch(e,n),h=!e.query&&n.sort_empty||n.sort,p=function(e,t){return"$score"===e?t.score:i(s.items[t.id],e,n.nesting)},l=[],h)for(o=0,r=h.length;o<r;o++)(e.query||"$score"!==h[o].field)&&l.push(h[o]);if(e.query){for(f=!0,o=0,r=l.length;o<r;o++)if("$score"===l[o].field){f=!1;break}f&&l.unshift({field:"$score",direction:"desc"})}else for(o=0,r=l.length;o<r;o++)if("$score"===l[o].field){l.splice(o,1);break}for(d=[],o=0,r=l.length;o<r;o++)d.push("desc"===l[o].direction?-1:1);return u=l.length,u?1===u?(a=l[0].field,c=d[0],function(e,n){return c*t(p(a,e),p(a,n))}):function(e,n){var i,o,r;for(i=0;i<u;i++)if(r=l[i].field,o=d[i]*t(p(r,e),p(r,n)))return o;return 0}:null},e.prototype.prepareSearch=function(e,t){if("object"==typeof e)return e;t=n({},t);var i=t.fields,o=t.sort,r=t.sort_empty;return i&&!s(i)&&(t.fields=[i]),o&&!s(o)&&(t.sort=[o]),r&&!s(r)&&(t.sort_empty=[r]),{options:t,query:String(e||"").toLowerCase(),tokens:this.tokenize(e),total:0,items:[]}},e.prototype.search=function(e,t){var n,i,o,r,s=this;return i=this.prepareSearch(e,t),t=i.options,e=i.query,r=t.score||s.getScoreFunction(i),e.length?s.iterator(s.items,function(e,o){n=r(e),(t.filter===!1||n>0)&&i.items.push({score:n,id:o})}):s.iterator(s.items,function(e,t){i.items.push({score:1,id:t})}),o=s.getSortFunction(i,t),o&&i.items.sort(o),i.total=i.items.length,"number"==typeof t.limit&&(i.items=i.items.slice(0,t.limit)),i};var t=function(e,t){return"number"==typeof e&&"number"==typeof t?e>t?1:e<t?-1:0:(e=l(String(e||"")),t=l(String(t||"")),e>t?1:t>e?-1:0)},n=function(e,t){var n,i,o,r;for(n=1,i=arguments.length;n<i;n++)if(r=arguments[n])for(o in r)r.hasOwnProperty(o)&&(e[o]=r[o]);return e},i=function(e,t,n){if(e&&t){if(!n)return e[t];for(var i=t.split(".");i.length&&(e=e[i.shift()]););return e}},o=function(e){return(e+"").replace(/^\s+|\s+$|/g,"")},r=function(e){return(e+"").replace(/([.?*+^$[\]\\(){}|-])/g,"\\$1")},s=Array.isArray||"undefined"!=typeof $&&$.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)},a={a:"[aḀḁĂăÂâǍǎȺⱥȦȧẠạÄäÀàÁáĀāÃãÅåąĄÃąĄ]",b:"[b␢βΒB฿𐌁ᛒ]",c:"[cĆćĈĉČčĊċC̄c̄ÇçḈḉȻȼƇƈɕᴄＣｃ]",d:"[dĎďḊḋḐḑḌḍḒḓḎḏĐđD̦d̦ƉɖƊɗƋƌᵭᶁᶑȡᴅＤｄð]",e:"[eÉéÈèÊêḘḙĚěĔĕẼẽḚḛẺẻĖėËëĒēȨȩĘęᶒɆɇȄȅẾếỀềỄễỂểḜḝḖḗḔḕȆȇẸẹỆệⱸᴇＥｅɘǝƏƐε]",f:"[fƑƒḞḟ]",g:"[gɢ₲ǤǥĜĝĞğĢģƓɠĠġ]",h:"[hĤĥĦħḨḩẖẖḤḥḢḣɦʰǶƕ]",i:"[iÍíÌìĬĭÎîǏǐÏïḮḯĨĩĮįĪīỈỉȈȉȊȋỊịḬḭƗɨɨ̆ᵻᶖİiIıɪＩｉ]",j:"[jȷĴĵɈɉʝɟʲ]",k:"[kƘƙꝀꝁḰḱǨǩḲḳḴḵκϰ₭]",l:"[lŁłĽľĻļĹĺḶḷḸḹḼḽḺḻĿŀȽƚⱠⱡⱢɫɬᶅɭȴʟＬｌ]",n:"[nŃńǸǹŇňÑñṄṅŅņṆṇṊṋṈṉN̈n̈ƝɲȠƞᵰᶇɳȵɴＮｎŊŋ]",o:"[oØøÖöÓóÒòÔôǑǒŐőŎŏȮȯỌọƟɵƠơỎỏŌōÕõǪǫȌȍՕօ]",p:"[pṔṕṖṗⱣᵽƤƥᵱ]",q:"[qꝖꝗʠɊɋꝘꝙq̃]",r:"[rŔŕɌɍŘřŖŗṘṙȐȑȒȓṚṛⱤɽ]",s:"[sŚśṠṡṢṣꞨꞩŜŝŠšŞşȘșS̈s̈]",t:"[tŤťṪṫŢţṬṭƮʈȚțṰṱṮṯƬƭ]",u:"[uŬŭɄʉỤụÜüÚúÙùÛûǓǔŰűŬŭƯưỦủŪūŨũŲųȔȕ∪]",v:"[vṼṽṾṿƲʋꝞꝟⱱʋ]",w:"[wẂẃẀẁŴŵẄẅẆẇẈẉ]",x:"[xẌẍẊẋχ]",y:"[yÝýỲỳŶŷŸÿỸỹẎẏỴỵɎɏƳƴ]",z:"[zŹźẐẑŽžŻżẒẓẔẕƵƶ]"},l=function(){var e,t,n,i,o="",r={};for(n in a)if(a.hasOwnProperty(n))for(i=a[n].substring(2,a[n].length-1),o+=i,e=0,t=i.length;e<t;e++)r[i.charAt(e)]=n;var s=new RegExp("["+o+"]","g");return function(e){return e.replace(s,function(e){return r[e]}).toLowerCase()}}();return e}),function(e,t){"function"==typeof define&&define.amd?define("microplugin",t):"object"==typeof exports?module.exports=t():e.MicroPlugin=t()}(this,function(){var e={};e.mixin=function(e){e.plugins={},e.prototype.initializePlugins=function(e){var n,i,o,r=this,s=[];if(r.plugins={names:[],settings:{},requested:{},loaded:{}},t.isArray(e))for(n=0,i=e.length;n<i;n++)"string"==typeof e[n]?s.push(e[n]):(r.plugins.settings[e[n].name]=e[n].options,s.push(e[n].name));else if(e)for(o in e)e.hasOwnProperty(o)&&(r.plugins.settings[o]=e[o],s.push(o));for(;s.length;)r.require(s.shift())},e.prototype.loadPlugin=function(t){var n=this,i=n.plugins,o=e.plugins[t];if(!e.plugins.hasOwnProperty(t))throw new Error('Unable to find "'+t+'" plugin');i.requested[t]=!0,i.loaded[t]=o.fn.apply(n,[n.plugins.settings[t]||{}]),i.names.push(t)},e.prototype.require=function(e){var t=this,n=t.plugins;if(!t.plugins.loaded.hasOwnProperty(e)){if(n.requested[e])throw new Error('Plugin has circular dependency ("'+e+'")');t.loadPlugin(e)}return n.loaded[e]},e.define=function(t,n){e.plugins[t]={name:t,fn:n}}};var t={isArray:Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)}};return e}),function(e,t){"function"==typeof define&&define.amd?define("selectize",["jquery","sifter","microplugin"],t):"object"==typeof exports?module.exports=t(require("jquery"),require("sifter"),require("microplugin")):e.Selectize=t(e.jQuery,e.Sifter,e.MicroPlugin)}(this,function(e,t,n){"use strict";var i=function(e,t){if("string"!=typeof t||t.length){var n="string"==typeof t?new RegExp(t,"i"):t,i=function(e){
var t=0;if(3===e.nodeType){var o=e.data.search(n);if(o>=0&&e.data.length>0){var r=e.data.match(n),s=document.createElement("span");s.className="highlight";var a=e.splitText(o),l=(a.splitText(r[0].length),a.cloneNode(!0));s.appendChild(l),a.parentNode.replaceChild(s,a),t=1}}else if(1===e.nodeType&&e.childNodes&&!/(script|style)/i.test(e.tagName))for(var u=0;u<e.childNodes.length;++u)u+=i(e.childNodes[u]);return t};return e.each(function(){i(this)})}};e.fn.removeHighlight=function(){return this.find("span.highlight").each(function(){this.parentNode.firstChild.nodeName;var e=this.parentNode;e.replaceChild(this.firstChild,this),e.normalize()}).end()};var o=function(){};o.prototype={on:function(e,t){this._events=this._events||{},this._events[e]=this._events[e]||[],this._events[e].push(t)},off:function(e,t){var n=arguments.length;return 0===n?delete this._events:1===n?delete this._events[e]:(this._events=this._events||{},void(e in this._events!=0&&this._events[e].splice(this._events[e].indexOf(t),1)))},trigger:function(e){if(this._events=this._events||{},e in this._events!=0)for(var t=0;t<this._events[e].length;t++)this._events[e][t].apply(this,Array.prototype.slice.call(arguments,1))}},o.mixin=function(e){for(var t=["on","off","trigger"],n=0;n<t.length;n++)e.prototype[t[n]]=o.prototype[t[n]]};var r=/Mac/.test(navigator.userAgent),s=65,a=13,l=27,u=37,c=38,d=80,p=39,f=40,h=78,g=8,m=46,v=16,y=r?91:17,b=r?18:17,k=9,w=1,x=2,C=!/android/i.test(window.navigator.userAgent)&&!!document.createElement("input").validity,S=function(e){return"undefined"!=typeof e},T=function(e){return"undefined"==typeof e||null===e?null:"boolean"==typeof e?e?"1":"0":e+""},_=function(e){return(e+"").replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;")},O={};O.before=function(e,t,n){var i=e[t];e[t]=function(){return n.apply(e,arguments),i.apply(e,arguments)}},O.after=function(e,t,n){var i=e[t];e[t]=function(){var t=i.apply(e,arguments);return n.apply(e,arguments),t}};var P=function(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}},A=function(e,t){var n;return function(){var i=this,o=arguments;window.clearTimeout(n),n=window.setTimeout(function(){e.apply(i,o)},t)}},$=function(e,t,n){var i,o=e.trigger,r={};e.trigger=function(){var n=arguments[0];return t.indexOf(n)===-1?o.apply(e,arguments):void(r[n]=arguments)},n.apply(e,[]),e.trigger=o;for(i in r)r.hasOwnProperty(i)&&o.apply(e,r[i])},E=function(e,t,n,i){e.on(t,n,function(t){for(var n=t.target;n&&n.parentNode!==e[0];)n=n.parentNode;return t.currentTarget=n,i.apply(this,[t])})},D=function(e){var t={};if("selectionStart"in e)t.start=e.selectionStart,t.length=e.selectionEnd-t.start;else if(document.selection){e.focus();var n=document.selection.createRange(),i=document.selection.createRange().text.length;n.moveStart("character",-e.value.length),t.start=n.text.length-i,t.length=i}return t},M=function(e,t,n){var i,o,r={};if(n)for(i=0,o=n.length;i<o;i++)r[n[i]]=e.css(n[i]);else r=e.css();t.css(r)},j=function(t,n){if(!t)return 0;var i=e("<test>").css({position:"absolute",top:-99999,left:-99999,width:"auto",padding:0,whiteSpace:"pre"}).text(t).appendTo("body");M(n,i,["letterSpacing","fontSize","fontFamily","fontWeight","textTransform"]);var o=i.width();return i.remove(),o},N=function(e){var t=null,n=function(n,i){var o,r,s,a,l,u,c,d;n=n||window.event||{},i=i||{},n.metaKey||n.altKey||(i.force||e.data("grow")!==!1)&&(o=e.val(),n.type&&"keydown"===n.type.toLowerCase()&&(r=n.keyCode,s=r>=97&&r<=122||r>=65&&r<=90||r>=48&&r<=57||32===r,r===m||r===g?(d=D(e[0]),d.length?o=o.substring(0,d.start)+o.substring(d.start+d.length):r===g&&d.start?o=o.substring(0,d.start-1)+o.substring(d.start+1):r===m&&"undefined"!=typeof d.start&&(o=o.substring(0,d.start)+o.substring(d.start+1))):s&&(u=n.shiftKey,c=String.fromCharCode(n.keyCode),c=u?c.toUpperCase():c.toLowerCase(),o+=c)),a=e.attr("placeholder"),!o&&a&&(o=a),l=j(o,e)+4,l!==t&&(t=l,e.width(l),e.triggerHandler("resize")))};e.on("keydown keyup update blur",n),n()},I=function(e){var t=document.createElement("div");return t.appendChild(e.cloneNode(!0)),t.innerHTML},F=function(e,t){t||(t={});var n="Selectize";console.error(n+": "+e),t.explanation&&(console.group&&console.group(),console.error(t.explanation),console.group&&console.groupEnd())},L=function(n,i){var o,r,s,a,l=this;a=n[0],a.selectize=l;var u=window.getComputedStyle&&window.getComputedStyle(a,null);if(s=u?u.getPropertyValue("direction"):a.currentStyle&&a.currentStyle.direction,s=s||n.parents("[dir]:first").attr("dir")||"",e.extend(l,{order:0,settings:i,$input:n,tabIndex:n.attr("tabindex")||"",tagType:"select"===a.tagName.toLowerCase()?w:x,rtl:/rtl/i.test(s),eventNS:".selectize"+ ++L.count,highlightedValue:null,isOpen:!1,isDisabled:!1,isRequired:n.is("[required]"),isInvalid:!1,isLocked:!1,isFocused:!1,isInputHidden:!1,isSetup:!1,isShiftDown:!1,isCmdDown:!1,isCtrlDown:!1,ignoreFocus:!1,ignoreBlur:!1,ignoreHover:!1,hasOptions:!1,currentResults:null,lastValue:"",caretPos:0,loading:0,loadedSearches:{},$activeOption:null,$activeItems:[],optgroups:{},options:{},userOptions:{},items:[],renderCache:{},onSearchChange:null===i.loadThrottle?l.onSearchChange:A(l.onSearchChange,i.loadThrottle)}),l.sifter=new t(this.options,{diacritics:i.diacritics}),l.settings.options){for(o=0,r=l.settings.options.length;o<r;o++)l.registerOption(l.settings.options[o]);delete l.settings.options}if(l.settings.optgroups){for(o=0,r=l.settings.optgroups.length;o<r;o++)l.registerOptionGroup(l.settings.optgroups[o]);delete l.settings.optgroups}l.settings.mode=l.settings.mode||(1===l.settings.maxItems?"single":"multi"),"boolean"!=typeof l.settings.hideSelected&&(l.settings.hideSelected="multi"===l.settings.mode),l.initializePlugins(l.settings.plugins),l.setupCallbacks(),l.setupTemplates(),l.setup()};return o.mixin(L),"undefined"!=typeof n?n.mixin(L):F("Dependency MicroPlugin is missing",{explanation:'Make sure you either: (1) are using the "standalone" version of Selectize, or (2) require MicroPlugin before you load Selectize.'}),e.extend(L.prototype,{setup:function(){var t,n,i,o,s,a,l,u,c,d,p=this,f=p.settings,h=p.eventNS,g=e(window),m=e(document),k=p.$input;if(l=p.settings.mode,u=k.attr("class")||"",t=e("<div>").addClass(f.wrapperClass).addClass(u).addClass(l),n=e("<div>").addClass(f.inputClass).addClass("items").appendTo(t),i=e('<input type="text" autocomplete="off" />').appendTo(n).attr("tabindex",k.is(":disabled")?"-1":p.tabIndex),a=e(f.dropdownParent||t),o=e("<div>").addClass(f.dropdownClass).addClass(l).hide().appendTo(a),s=e("<div>").addClass(f.dropdownContentClass).appendTo(o),(d=k.attr("id"))&&(i.attr("id",d+"-selectized"),e("label[for='"+d+"']").attr("for",d+"-selectized")),p.settings.copyClassesToDropdown&&o.addClass(u),t.css({width:k[0].style.width}),p.plugins.names.length&&(c="plugin-"+p.plugins.names.join(" plugin-"),t.addClass(c),o.addClass(c)),(null===f.maxItems||f.maxItems>1)&&p.tagType===w&&k.attr("multiple","multiple"),p.settings.placeholder&&i.attr("placeholder",f.placeholder),!p.settings.splitOn&&p.settings.delimiter){var x=p.settings.delimiter.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&");p.settings.splitOn=new RegExp("\\s*"+x+"+\\s*")}k.attr("autocorrect")&&i.attr("autocorrect",k.attr("autocorrect")),k.attr("autocapitalize")&&i.attr("autocapitalize",k.attr("autocapitalize")),p.$wrapper=t,p.$control=n,p.$control_input=i,p.$dropdown=o,p.$dropdown_content=s,o.on("mouseenter","[data-selectable]",function(){return p.onOptionHover.apply(p,arguments)}),o.on("mousedown click","[data-selectable]",function(){return p.onOptionSelect.apply(p,arguments)}),E(n,"mousedown","*:not(input)",function(){return p.onItemSelect.apply(p,arguments)}),N(i),n.on({mousedown:function(){return p.onMouseDown.apply(p,arguments)},click:function(){return p.onClick.apply(p,arguments)}}),i.on({mousedown:function(e){e.stopPropagation()},keydown:function(){return p.onKeyDown.apply(p,arguments)},keyup:function(){return p.onKeyUp.apply(p,arguments)},keypress:function(){return p.onKeyPress.apply(p,arguments)},resize:function(){p.positionDropdown.apply(p,[])},blur:function(){return p.onBlur.apply(p,arguments)},focus:function(){return p.ignoreBlur=!1,p.onFocus.apply(p,arguments)},paste:function(){return p.onPaste.apply(p,arguments)}}),m.on("keydown"+h,function(e){p.isCmdDown=e[r?"metaKey":"ctrlKey"],p.isCtrlDown=e[r?"altKey":"ctrlKey"],p.isShiftDown=e.shiftKey}),m.on("keyup"+h,function(e){e.keyCode===b&&(p.isCtrlDown=!1),e.keyCode===v&&(p.isShiftDown=!1),e.keyCode===y&&(p.isCmdDown=!1)}),m.on("mousedown"+h,function(e){if(p.isFocused){if(e.target===p.$dropdown[0]||e.target.parentNode===p.$dropdown[0])return!1;p.$control.has(e.target).length||e.target===p.$control[0]||p.blur(e.target)}}),g.on(["scroll"+h,"resize"+h].join(" "),function(){p.isOpen&&p.positionDropdown.apply(p,arguments)}),g.on("mousemove"+h,function(){p.ignoreHover=!1}),this.revertSettings={$children:k.children().detach(),tabindex:k.attr("tabindex")},k.attr("tabindex",-1).hide().after(p.$wrapper),e.isArray(f.items)&&(p.setValue(f.items),delete f.items),C&&k.on("invalid"+h,function(e){e.preventDefault(),p.isInvalid=!0,p.refreshState()}),p.updateOriginalInput(),p.refreshItems(),p.refreshState(),p.updatePlaceholder(),p.isSetup=!0,k.is(":disabled")&&p.disable(),p.on("change",this.onChange),k.data("selectize",p),k.addClass("selectized"),p.trigger("initialize"),f.preload===!0&&p.onSearchChange("")},setupTemplates:function(){var t=this,n=t.settings.labelField,i=t.settings.optgroupLabelField,o={optgroup:function(e){return'<div class="optgroup">'+e.html+"</div>"},optgroup_header:function(e,t){return'<div class="optgroup-header">'+t(e[i])+"</div>"},option:function(e,t){return'<div class="option">'+t(e[n])+"</div>"},item:function(e,t){return'<div class="item">'+t(e[n])+"</div>"},option_create:function(e,t){return'<div class="create">Add <strong>'+t(e.input)+"</strong>&hellip;</div>"}};t.settings.render=e.extend({},o,t.settings.render)},setupCallbacks:function(){var e,t,n={initialize:"onInitialize",change:"onChange",item_add:"onItemAdd",item_remove:"onItemRemove",clear:"onClear",option_add:"onOptionAdd",option_remove:"onOptionRemove",option_clear:"onOptionClear",optgroup_add:"onOptionGroupAdd",optgroup_remove:"onOptionGroupRemove",optgroup_clear:"onOptionGroupClear",dropdown_open:"onDropdownOpen",dropdown_close:"onDropdownClose",type:"onType",load:"onLoad",focus:"onFocus",blur:"onBlur"};for(e in n)n.hasOwnProperty(e)&&(t=this.settings[n[e]],t&&this.on(e,t))},onClick:function(e){var t=this;t.isFocused||(t.focus(),e.preventDefault())},onMouseDown:function(t){var n=this,i=t.isDefaultPrevented();if(e(t.target),n.isFocused){if(t.target!==n.$control_input[0])return"single"===n.settings.mode?n.isOpen?n.close():n.open():i||n.setActiveItem(null),!1}else i||window.setTimeout(function(){n.focus()},0)},onChange:function(){this.$input.trigger("change")},onPaste:function(t){var n=this;return n.isFull()||n.isInputHidden||n.isLocked?void t.preventDefault():void(n.settings.splitOn&&setTimeout(function(){var t=n.$control_input.val();if(t.match(n.settings.splitOn))for(var i=e.trim(t).split(n.settings.splitOn),o=0,r=i.length;o<r;o++)n.createItem(i[o])},0))},onKeyPress:function(e){if(this.isLocked)return e&&e.preventDefault();var t=String.fromCharCode(e.keyCode||e.which);return this.settings.create&&"multi"===this.settings.mode&&t===this.settings.delimiter?(this.createItem(),e.preventDefault(),!1):void 0},onKeyDown:function(e){var t=(e.target===this.$control_input[0],this);if(t.isLocked)return void(e.keyCode!==k&&e.preventDefault());switch(e.keyCode){case s:if(t.isCmdDown)return void t.selectAll();break;case l:return void(t.isOpen&&(e.preventDefault(),e.stopPropagation(),t.close()));case h:if(!e.ctrlKey||e.altKey)break;case f:if(!t.isOpen&&t.hasOptions)t.open();else if(t.$activeOption){t.ignoreHover=!0;var n=t.getAdjacentOption(t.$activeOption,1);n.length&&t.setActiveOption(n,!0,!0)}return void e.preventDefault();case d:if(!e.ctrlKey||e.altKey)break;case c:if(t.$activeOption){t.ignoreHover=!0;var i=t.getAdjacentOption(t.$activeOption,-1);i.length&&t.setActiveOption(i,!0,!0)}return void e.preventDefault();case a:return void(t.isOpen&&t.$activeOption&&(t.onOptionSelect({currentTarget:t.$activeOption}),e.preventDefault()));case u:return void t.advanceSelection(-1,e);case p:return void t.advanceSelection(1,e);case k:return t.settings.selectOnTab&&t.isOpen&&t.$activeOption&&(t.onOptionSelect({currentTarget:t.$activeOption}),t.isFull()||e.preventDefault()),void(t.settings.create&&t.createItem()&&e.preventDefault());case g:case m:return void t.deleteSelection(e)}return!t.isFull()&&!t.isInputHidden||(r?e.metaKey:e.ctrlKey)?void 0:void e.preventDefault()},onKeyUp:function(e){var t=this;if(t.isLocked)return e&&e.preventDefault();var n=t.$control_input.val()||"";t.lastValue!==n&&(t.lastValue=n,t.onSearchChange(n),t.refreshOptions(),t.trigger("type",n))},onSearchChange:function(e){var t=this,n=t.settings.load;n&&(t.loadedSearches.hasOwnProperty(e)||(t.loadedSearches[e]=!0,t.load(function(i){n.apply(t,[e,i])})))},onFocus:function(e){var t=this,n=t.isFocused;return t.isDisabled?(t.blur(),e&&e.preventDefault(),!1):void(t.ignoreFocus||(t.isFocused=!0,"focus"===t.settings.preload&&t.onSearchChange(""),n||t.trigger("focus"),t.$activeItems.length||(t.showInput(),t.setActiveItem(null),t.refreshOptions(!!t.settings.openOnFocus)),t.refreshState()))},onBlur:function(e,t){var n=this;if(n.isFocused&&(n.isFocused=!1,!n.ignoreFocus)){if(!n.ignoreBlur&&document.activeElement===n.$dropdown_content[0])return n.ignoreBlur=!0,void n.onFocus(e);var i=function(){n.close(),n.setTextboxValue(""),n.setActiveItem(null),n.setActiveOption(null),n.setCaret(n.items.length),n.refreshState(),t&&t.focus&&t.focus(),n.ignoreFocus=!1,n.trigger("blur")};n.ignoreFocus=!0,n.settings.create&&n.settings.createOnBlur?n.createItem(null,!1,i):i()}},onOptionHover:function(e){this.ignoreHover||this.setActiveOption(e.currentTarget,!1)},onOptionSelect:function(t){var n,i,o=this;t.preventDefault&&(t.preventDefault(),t.stopPropagation()),i=e(t.currentTarget),i.hasClass("create")?o.createItem(null,function(){o.settings.closeAfterSelect&&o.close()}):(n=i.attr("data-value"),"undefined"!=typeof n&&(o.lastQuery=null,o.setTextboxValue(""),o.addItem(n),o.settings.closeAfterSelect?o.close():!o.settings.hideSelected&&t.type&&/mouse/.test(t.type)&&o.setActiveOption(o.getOption(n))))},onItemSelect:function(e){var t=this;t.isLocked||"multi"===t.settings.mode&&(e.preventDefault(),t.setActiveItem(e.currentTarget,e))},load:function(e){var t=this,n=t.$wrapper.addClass(t.settings.loadingClass);t.loading++,e.apply(t,[function(e){t.loading=Math.max(t.loading-1,0),e&&e.length&&(t.addOption(e),t.refreshOptions(t.isFocused&&!t.isInputHidden)),t.loading||n.removeClass(t.settings.loadingClass),t.trigger("load",e)}])},setTextboxValue:function(e){var t=this.$control_input,n=t.val()!==e;n&&(t.val(e).triggerHandler("update"),this.lastValue=e)},getValue:function(){return this.tagType===w&&this.$input.attr("multiple")?this.items:this.items.join(this.settings.delimiter)},setValue:function(e,t){var n=t?[]:["change"];$(this,n,function(){this.clear(t),this.addItems(e,t)})},setActiveItem:function(t,n){var i,o,r,s,a,l,u,c,d=this;if("single"!==d.settings.mode){if(t=e(t),!t.length)return e(d.$activeItems).removeClass("active"),d.$activeItems=[],void(d.isFocused&&d.showInput());if(i=n&&n.type.toLowerCase(),"mousedown"===i&&d.isShiftDown&&d.$activeItems.length){for(c=d.$control.children(".active:last"),s=Array.prototype.indexOf.apply(d.$control[0].childNodes,[c[0]]),a=Array.prototype.indexOf.apply(d.$control[0].childNodes,[t[0]]),s>a&&(u=s,s=a,a=u),o=s;o<=a;o++)l=d.$control[0].childNodes[o],d.$activeItems.indexOf(l)===-1&&(e(l).addClass("active"),d.$activeItems.push(l));n.preventDefault()}else"mousedown"===i&&d.isCtrlDown||"keydown"===i&&this.isShiftDown?t.hasClass("active")?(r=d.$activeItems.indexOf(t[0]),d.$activeItems.splice(r,1),t.removeClass("active")):d.$activeItems.push(t.addClass("active")[0]):(e(d.$activeItems).removeClass("active"),d.$activeItems=[t.addClass("active")[0]]);d.hideInput(),this.isFocused||d.focus()}},setActiveOption:function(t,n,i){var o,r,s,a,l,u=this;u.$activeOption&&u.$activeOption.removeClass("active"),u.$activeOption=null,t=e(t),t.length&&(u.$activeOption=t.addClass("active"),!n&&S(n)||(o=u.$dropdown_content.height(),r=u.$activeOption.outerHeight(!0),n=u.$dropdown_content.scrollTop()||0,s=u.$activeOption.offset().top-u.$dropdown_content.offset().top+n,a=s,l=s-o+r,s+r>o+n?u.$dropdown_content.stop().animate({scrollTop:l},i?u.settings.scrollDuration:0):s<n&&u.$dropdown_content.stop().animate({scrollTop:a},i?u.settings.scrollDuration:0)))},selectAll:function(){var e=this;"single"!==e.settings.mode&&(e.$activeItems=Array.prototype.slice.apply(e.$control.children(":not(input)").addClass("active")),e.$activeItems.length&&(e.hideInput(),e.close()),e.focus())},hideInput:function(){var e=this;e.setTextboxValue(""),e.$control_input.css({opacity:0,position:"absolute",left:e.rtl?1e4:-1e4}),e.isInputHidden=!0},showInput:function(){this.$control_input.css({opacity:1,position:"relative",left:0}),this.isInputHidden=!1},focus:function(){var e=this;e.isDisabled||(e.ignoreFocus=!0,e.$control_input[0].focus(),window.setTimeout(function(){e.ignoreFocus=!1,e.onFocus()},0))},blur:function(e){this.$control_input[0].blur(),this.onBlur(null,e)},getScoreFunction:function(e){return this.sifter.getScoreFunction(e,this.getSearchOptions())},getSearchOptions:function(){var e=this.settings,t=e.sortField;return"string"==typeof t&&(t=[{field:t}]),{fields:e.searchField,conjunction:e.searchConjunction,sort:t}},search:function(t){var n,i,o,r=this,s=r.settings,a=this.getSearchOptions();if(s.score&&(o=r.settings.score.apply(this,[t]),"function"!=typeof o))throw new Error('Selectize "score" setting must be a function that returns a function');if(t!==r.lastQuery?(r.lastQuery=t,i=r.sifter.search(t,e.extend(a,{score:o})),r.currentResults=i):i=e.extend(!0,{},r.currentResults),s.hideSelected)for(n=i.items.length-1;n>=0;n--)r.items.indexOf(T(i.items[n].id))!==-1&&i.items.splice(n,1);return i},refreshOptions:function(t){var n,o,r,s,a,l,u,c,d,p,f,h,g,m,v,y;"undefined"==typeof t&&(t=!0);var b=this,k=e.trim(b.$control_input.val()),w=b.search(k),x=b.$dropdown_content,C=b.$activeOption&&T(b.$activeOption.attr("data-value"));for(s=w.items.length,"number"==typeof b.settings.maxOptions&&(s=Math.min(s,b.settings.maxOptions)),a={},l=[],n=0;n<s;n++)for(u=b.options[w.items[n].id],c=b.render("option",u),d=u[b.settings.optgroupField]||"",p=e.isArray(d)?d:[d],o=0,r=p&&p.length;o<r;o++)d=p[o],b.optgroups.hasOwnProperty(d)||(d=""),a.hasOwnProperty(d)||(a[d]=document.createDocumentFragment(),l.push(d)),a[d].appendChild(c);for(this.settings.lockOptgroupOrder&&l.sort(function(e,t){var n=b.optgroups[e].$order||0,i=b.optgroups[t].$order||0;return n-i}),f=document.createDocumentFragment(),n=0,s=l.length;n<s;n++)d=l[n],b.optgroups.hasOwnProperty(d)&&a[d].childNodes.length?(h=document.createDocumentFragment(),h.appendChild(b.render("optgroup_header",b.optgroups[d])),h.appendChild(a[d]),f.appendChild(b.render("optgroup",e.extend({},b.optgroups[d],{html:I(h),dom:h})))):f.appendChild(a[d]);if(x.html(f),b.settings.highlight&&w.query.length&&w.tokens.length)for(x.removeHighlight(),n=0,s=w.tokens.length;n<s;n++)i(x,w.tokens[n].regex);if(!b.settings.hideSelected)for(n=0,s=b.items.length;n<s;n++)b.getOption(b.items[n]).addClass("selected");g=b.canCreate(k),g&&(x.prepend(b.render("option_create",{input:k})),y=e(x[0].childNodes[0])),b.hasOptions=w.items.length>0||g,b.hasOptions?(w.items.length>0?(v=C&&b.getOption(C),v&&v.length?m=v:"single"===b.settings.mode&&b.items.length&&(m=b.getOption(b.items[0])),m&&m.length||(m=y&&!b.settings.addPrecedence?b.getAdjacentOption(y,1):x.find("[data-selectable]:first"))):m=y,b.setActiveOption(m),t&&!b.isOpen&&b.open()):(b.setActiveOption(null),t&&b.isOpen&&b.close())},addOption:function(t){var n,i,o,r=this;if(e.isArray(t))for(n=0,i=t.length;n<i;n++)r.addOption(t[n]);else(o=r.registerOption(t))&&(r.userOptions[o]=!0,r.lastQuery=null,r.trigger("option_add",o,t))},registerOption:function(e){var t=T(e[this.settings.valueField]);return"undefined"!=typeof t&&null!==t&&!this.options.hasOwnProperty(t)&&(e.$order=e.$order||++this.order,this.options[t]=e,t)},registerOptionGroup:function(e){var t=T(e[this.settings.optgroupValueField]);return!!t&&(e.$order=e.$order||++this.order,this.optgroups[t]=e,t)},addOptionGroup:function(e,t){t[this.settings.optgroupValueField]=e,(e=this.registerOptionGroup(t))&&this.trigger("optgroup_add",e,t)},removeOptionGroup:function(e){this.optgroups.hasOwnProperty(e)&&(delete this.optgroups[e],this.renderCache={},this.trigger("optgroup_remove",e))},clearOptionGroups:function(){this.optgroups={},this.renderCache={},this.trigger("optgroup_clear")},updateOption:function(t,n){var i,o,r,s,a,l,u,c=this;if(t=T(t),r=T(n[c.settings.valueField]),null!==t&&c.options.hasOwnProperty(t)){if("string"!=typeof r)throw new Error("Value must be set in option data");u=c.options[t].$order,r!==t&&(delete c.options[t],s=c.items.indexOf(t),s!==-1&&c.items.splice(s,1,r)),n.$order=n.$order||u,c.options[r]=n,a=c.renderCache.item,l=c.renderCache.option,a&&(delete a[t],delete a[r]),l&&(delete l[t],delete l[r]),c.items.indexOf(r)!==-1&&(i=c.getItem(t),o=e(c.render("item",n)),i.hasClass("active")&&o.addClass("active"),i.replaceWith(o)),c.lastQuery=null,c.isOpen&&c.refreshOptions(!1)}},removeOption:function(e,t){var n=this;e=T(e);var i=n.renderCache.item,o=n.renderCache.option;i&&delete i[e],o&&delete o[e],delete n.userOptions[e],delete n.options[e],n.lastQuery=null,n.trigger("option_remove",e),n.removeItem(e,t)},clearOptions:function(){var e=this;e.loadedSearches={},e.userOptions={},e.renderCache={},e.options=e.sifter.items={},e.lastQuery=null,e.trigger("option_clear"),e.clear()},getOption:function(e){return this.getElementWithValue(e,this.$dropdown_content.find("[data-selectable]"))},getAdjacentOption:function(t,n){var i=this.$dropdown.find("[data-selectable]"),o=i.index(t)+n;return o>=0&&o<i.length?i.eq(o):e()},getElementWithValue:function(t,n){if(t=T(t),"undefined"!=typeof t&&null!==t)for(var i=0,o=n.length;i<o;i++)if(n[i].getAttribute("data-value")===t)return e(n[i]);return e()},getItem:function(e){return this.getElementWithValue(e,this.$control.children())},addItems:function(t,n){for(var i=e.isArray(t)?t:[t],o=0,r=i.length;o<r;o++)this.isPending=o<r-1,this.addItem(i[o],n)},addItem:function(t,n){var i=n?[]:["change"];$(this,i,function(){var i,o,r,s,a,l=this,u=l.settings.mode;return t=T(t),l.items.indexOf(t)!==-1?void("single"===u&&l.close()):void(l.options.hasOwnProperty(t)&&("single"===u&&l.clear(n),"multi"===u&&l.isFull()||(i=e(l.render("item",l.options[t])),a=l.isFull(),l.items.splice(l.caretPos,0,t),l.insertAtCaret(i),(!l.isPending||!a&&l.isFull())&&l.refreshState(),l.isSetup&&(r=l.$dropdown_content.find("[data-selectable]"),l.isPending||(o=l.getOption(t),s=l.getAdjacentOption(o,1).attr("data-value"),l.refreshOptions(l.isFocused&&"single"!==u),s&&l.setActiveOption(l.getOption(s))),!r.length||l.isFull()?l.close():l.positionDropdown(),l.updatePlaceholder(),l.trigger("item_add",t,i),l.updateOriginalInput({silent:n})))))})},removeItem:function(t,n){var i,o,r,s=this;i=t instanceof e?t:s.getItem(t),t=T(i.attr("data-value")),o=s.items.indexOf(t),o!==-1&&(i.remove(),i.hasClass("active")&&(r=s.$activeItems.indexOf(i[0]),s.$activeItems.splice(r,1)),s.items.splice(o,1),s.lastQuery=null,!s.settings.persist&&s.userOptions.hasOwnProperty(t)&&s.removeOption(t,n),o<s.caretPos&&s.setCaret(s.caretPos-1),s.refreshState(),s.updatePlaceholder(),s.updateOriginalInput({silent:n}),s.positionDropdown(),s.trigger("item_remove",t,i))},createItem:function(t,n){var i=this,o=i.caretPos;t=t||e.trim(i.$control_input.val()||"");var r=arguments[arguments.length-1];if("function"!=typeof r&&(r=function(){}),"boolean"!=typeof n&&(n=!0),!i.canCreate(t))return r(),!1;i.lock();var s="function"==typeof i.settings.create?this.settings.create:function(e){var t={};return t[i.settings.labelField]=e,t[i.settings.valueField]=e,t},a=P(function(e){if(i.unlock(),!e||"object"!=typeof e)return r();var t=T(e[i.settings.valueField]);return"string"!=typeof t?r():(i.setTextboxValue(""),i.addOption(e),i.setCaret(o),i.addItem(t),i.refreshOptions(n&&"single"!==i.settings.mode),void r(e))}),l=s.apply(this,[t,a]);return"undefined"!=typeof l&&a(l),!0},refreshItems:function(){this.lastQuery=null,this.isSetup&&this.addItem(this.items),this.refreshState(),this.updateOriginalInput()},refreshState:function(){this.refreshValidityState(),this.refreshClasses()},refreshValidityState:function(){if(!this.isRequired)return!1;var e=!this.items.length;this.isInvalid=e,this.$control_input.prop("required",e),this.$input.prop("required",!e)},refreshClasses:function(){var t=this,n=t.isFull(),i=t.isLocked;t.$wrapper.toggleClass("rtl",t.rtl),t.$control.toggleClass("focus",t.isFocused).toggleClass("disabled",t.isDisabled).toggleClass("required",t.isRequired).toggleClass("invalid",t.isInvalid).toggleClass("locked",i).toggleClass("full",n).toggleClass("not-full",!n).toggleClass("input-active",t.isFocused&&!t.isInputHidden).toggleClass("dropdown-active",t.isOpen).toggleClass("has-options",!e.isEmptyObject(t.options)).toggleClass("has-items",t.items.length>0),t.$control_input.data("grow",!n&&!i)},isFull:function(){return null!==this.settings.maxItems&&this.items.length>=this.settings.maxItems},updateOriginalInput:function(e){var t,n,i,o,r=this;if(e=e||{},r.tagType===w){for(i=[],t=0,n=r.items.length;t<n;t++)o=r.options[r.items[t]][r.settings.labelField]||"",i.push('<option value="'+_(r.items[t])+'" selected="selected">'+_(o)+"</option>");i.length||this.$input.attr("multiple")||i.push('<option value="" selected="selected"></option>'),r.$input.html(i.join(""))}else r.$input.val(r.getValue()),r.$input.attr("value",r.$input.val());r.isSetup&&(e.silent||r.trigger("change",r.$input.val()))},updatePlaceholder:function(){if(this.settings.placeholder){var e=this.$control_input;this.items.length?e.removeAttr("placeholder"):e.attr("placeholder",this.settings.placeholder),e.triggerHandler("update",{force:!0})}},open:function(){var e=this;e.isLocked||e.isOpen||"multi"===e.settings.mode&&e.isFull()||(e.focus(),e.isOpen=!0,e.refreshState(),e.$dropdown.css({visibility:"hidden",display:"block"}),e.positionDropdown(),e.$dropdown.css({visibility:"visible"}),e.trigger("dropdown_open",e.$dropdown))},close:function(){var e=this,t=e.isOpen;"single"===e.settings.mode&&e.items.length&&(e.hideInput(),e.$control_input.blur()),e.isOpen=!1,e.$dropdown.hide(),e.setActiveOption(null),e.refreshState(),t&&e.trigger("dropdown_close",e.$dropdown)},positionDropdown:function(){var e=this.$control,t="body"===this.settings.dropdownParent?e.offset():e.position();t.top+=e.outerHeight(!0),this.$dropdown.css({width:e.outerWidth(),top:t.top,left:t.left})},clear:function(e){var t=this;t.items.length&&(t.$control.children(":not(input)").remove(),t.items=[],t.lastQuery=null,t.setCaret(0),t.setActiveItem(null),t.updatePlaceholder(),t.updateOriginalInput({silent:e}),t.refreshState(),t.showInput(),t.trigger("clear"))},insertAtCaret:function(t){var n=Math.min(this.caretPos,this.items.length);0===n?this.$control.prepend(t):e(this.$control[0].childNodes[n]).before(t),this.setCaret(n+1)},deleteSelection:function(t){var n,i,o,r,s,a,l,u,c,d=this;if(o=t&&t.keyCode===g?-1:1,r=D(d.$control_input[0]),d.$activeOption&&!d.settings.hideSelected&&(l=d.getAdjacentOption(d.$activeOption,-1).attr("data-value")),s=[],d.$activeItems.length){for(c=d.$control.children(".active:"+(o>0?"last":"first")),a=d.$control.children(":not(input)").index(c),o>0&&a++,n=0,i=d.$activeItems.length;n<i;n++)s.push(e(d.$activeItems[n]).attr("data-value"));t&&(t.preventDefault(),t.stopPropagation())}else(d.isFocused||"single"===d.settings.mode)&&d.items.length&&(o<0&&0===r.start&&0===r.length?s.push(d.items[d.caretPos-1]):o>0&&r.start===d.$control_input.val().length&&s.push(d.items[d.caretPos]));if(!s.length||"function"==typeof d.settings.onDelete&&d.settings.onDelete.apply(d,[s])===!1)return!1;for("undefined"!=typeof a&&d.setCaret(a);s.length;)d.removeItem(s.pop());return d.showInput(),d.positionDropdown(),d.refreshOptions(!0),l&&(u=d.getOption(l),u.length&&d.setActiveOption(u)),!0},advanceSelection:function(e,t){var n,i,o,r,s,a,l=this;0!==e&&(l.rtl&&(e*=-1),n=e>0?"last":"first",i=D(l.$control_input[0]),l.isFocused&&!l.isInputHidden?(r=l.$control_input.val().length,s=e<0?0===i.start&&0===i.length:i.start===r,s&&!r&&l.advanceCaret(e,t)):(a=l.$control.children(".active:"+n),a.length&&(o=l.$control.children(":not(input)").index(a),l.setActiveItem(null),l.setCaret(e>0?o+1:o))))},advanceCaret:function(e,t){var n,i,o=this;0!==e&&(n=e>0?"next":"prev",o.isShiftDown?(i=o.$control_input[n](),i.length&&(o.hideInput(),o.setActiveItem(i),t&&t.preventDefault())):o.setCaret(o.caretPos+e))},setCaret:function(t){var n=this;if(t="single"===n.settings.mode?n.items.length:Math.max(0,Math.min(n.items.length,t)),!n.isPending){var i,o,r,s;for(r=n.$control.children(":not(input)"),i=0,o=r.length;i<o;i++)s=e(r[i]).detach(),i<t?n.$control_input.before(s):n.$control.append(s)}n.caretPos=t},lock:function(){this.close(),this.isLocked=!0,this.refreshState()},unlock:function(){this.isLocked=!1,this.refreshState()},disable:function(){var e=this;e.$input.prop("disabled",!0),e.$control_input.prop("disabled",!0).prop("tabindex",-1),e.isDisabled=!0,e.lock()},enable:function(){var e=this;e.$input.prop("disabled",!1),e.$control_input.prop("disabled",!1).prop("tabindex",e.tabIndex),e.isDisabled=!1,e.unlock()},destroy:function(){var t=this,n=t.eventNS,i=t.revertSettings;t.trigger("destroy"),t.off(),t.$wrapper.remove(),t.$dropdown.remove(),t.$input.html("").append(i.$children).removeAttr("tabindex").removeClass("selectized").attr({tabindex:i.tabindex}).show(),t.$control_input.removeData("grow"),t.$input.removeData("selectize"),e(window).off(n),e(document).off(n),e(document.body).off(n),delete t.$input[0].selectize},render:function(t,n){var i,o,r="",s=!1,a=this;return"option"!==t&&"item"!==t||(i=T(n[a.settings.valueField]),s=!!i),s&&(S(a.renderCache[t])||(a.renderCache[t]={}),a.renderCache[t].hasOwnProperty(i))?a.renderCache[t][i]:(r=e(a.settings.render[t].apply(this,[n,_])),"option"===t||"option_create"===t?r.attr("data-selectable",""):"optgroup"===t&&(o=n[a.settings.optgroupValueField]||"",r.attr("data-group",o)),"option"!==t&&"item"!==t||r.attr("data-value",i||""),s&&(a.renderCache[t][i]=r[0]),r[0])},clearCache:function(e){var t=this;"undefined"==typeof e?t.renderCache={}:delete t.renderCache[e]},canCreate:function(e){var t=this;if(!t.settings.create)return!1;var n=t.settings.createFilter;return e.length&&("function"!=typeof n||n.apply(t,[e]))&&("string"!=typeof n||new RegExp(n).test(e))&&(!(n instanceof RegExp)||n.test(e))}}),L.count=0,L.defaults={options:[],optgroups:[],plugins:[],delimiter:",",splitOn:null,persist:!0,diacritics:!0,create:!1,createOnBlur:!1,createFilter:null,highlight:!0,openOnFocus:!0,maxOptions:1e3,maxItems:null,hideSelected:null,addPrecedence:!1,selectOnTab:!1,preload:!1,allowEmptyOption:!1,closeAfterSelect:!1,scrollDuration:60,loadThrottle:300,loadingClass:"loading",dataAttr:"data-data",optgroupField:"optgroup",valueField:"value",labelField:"text",optgroupLabelField:"label",optgroupValueField:"value",lockOptgroupOrder:!1,sortField:"$order",searchField:["text"],searchConjunction:"and",mode:null,wrapperClass:"selectize-control",inputClass:"selectize-input",dropdownClass:"selectize-dropdown",dropdownContentClass:"selectize-dropdown-content",dropdownParent:null,copyClassesToDropdown:!0,render:{}},e.fn.selectize=function(t){var n=e.fn.selectize.defaults,i=e.extend({},n,t),o=i.dataAttr,r=i.labelField,s=i.valueField,a=i.optgroupField,l=i.optgroupLabelField,u=i.optgroupValueField,c=function(t,n){var a,l,u,c,d=t.attr(o);if(d)for(n.options=JSON.parse(d),a=0,l=n.options.length;a<l;a++)n.items.push(n.options[a][s]);else{
var p=e.trim(t.val()||"");if(!i.allowEmptyOption&&!p.length)return;for(u=p.split(i.delimiter),a=0,l=u.length;a<l;a++)c={},c[r]=u[a],c[s]=u[a],n.options.push(c);n.items=u}},d=function(t,n){var c,d,p,f,h=n.options,g={},m=function(e){var t=o&&e.attr(o);return"string"==typeof t&&t.length?JSON.parse(t):null},v=function(t,o){t=e(t);var l=T(t.val());if(l||i.allowEmptyOption)if(g.hasOwnProperty(l)){if(o){var u=g[l][a];u?e.isArray(u)?u.push(o):g[l][a]=[u,o]:g[l][a]=o}}else{var c=m(t)||{};c[r]=c[r]||t.text(),c[s]=c[s]||l,c[a]=c[a]||o,g[l]=c,h.push(c),t.is(":selected")&&n.items.push(l)}},y=function(t){var i,o,r,s,a;for(t=e(t),r=t.attr("label"),r&&(s=m(t)||{},s[l]=r,s[u]=r,n.optgroups.push(s)),a=e("option",t),i=0,o=a.length;i<o;i++)v(a[i],r)};for(n.maxItems=t.attr("multiple")?null:1,f=t.children(),c=0,d=f.length;c<d;c++)p=f[c].tagName.toLowerCase(),"optgroup"===p?y(f[c]):"option"===p&&v(f[c])};return this.each(function(){if(!this.selectize){var o,r=e(this),s=this.tagName.toLowerCase(),a=r.attr("placeholder")||r.attr("data-placeholder");a||i.allowEmptyOption||(a=r.children('option[value=""]').text());var l={placeholder:a,options:[],optgroups:[],items:[]};"select"===s?d(r,l):c(r,l),o=new L(r,e.extend(!0,{},n,l,t))}})},e.fn.selectize.defaults=L.defaults,e.fn.selectize.support={validity:C},L.define("drag_drop",function(t){if(!e.fn.sortable)throw new Error('The "drag_drop" plugin requires jQuery UI "sortable".');if("multi"===this.settings.mode){var n=this;n.lock=function(){var e=n.lock;return function(){var t=n.$control.data("sortable");return t&&t.disable(),e.apply(n,arguments)}}(),n.unlock=function(){var e=n.unlock;return function(){var t=n.$control.data("sortable");return t&&t.enable(),e.apply(n,arguments)}}(),n.setup=function(){var t=n.setup;return function(){t.apply(this,arguments);var i=n.$control.sortable({items:"[data-value]",forcePlaceholderSize:!0,disabled:n.isLocked,start:function(e,t){t.placeholder.css("width",t.helper.css("width")),i.css({overflow:"visible"})},stop:function(){i.css({overflow:"hidden"});var t=n.$activeItems?n.$activeItems.slice():null,o=[];i.children("[data-value]").each(function(){o.push(e(this).attr("data-value"))}),n.setValue(o),n.setActiveItem(t)}})}}()}}),L.define("dropdown_header",function(t){var n=this;t=e.extend({title:"Untitled",headerClass:"selectize-dropdown-header",titleRowClass:"selectize-dropdown-header-title",labelClass:"selectize-dropdown-header-label",closeClass:"selectize-dropdown-header-close",html:function(e){return'<div class="'+e.headerClass+'"><div class="'+e.titleRowClass+'"><span class="'+e.labelClass+'">'+e.title+'</span><a href="javascript:void(0)" class="'+e.closeClass+'">&times;</a></div></div>'}},t),n.setup=function(){var i=n.setup;return function(){i.apply(n,arguments),n.$dropdown_header=e(t.html(t)),n.$dropdown.prepend(n.$dropdown_header)}}()}),L.define("optgroup_columns",function(t){var n=this;t=e.extend({equalizeWidth:!0,equalizeHeight:!0},t),this.getAdjacentOption=function(t,n){var i=t.closest("[data-group]").find("[data-selectable]"),o=i.index(t)+n;return o>=0&&o<i.length?i.eq(o):e()},this.onKeyDown=function(){var e=n.onKeyDown;return function(t){var i,o,r,s;return!this.isOpen||t.keyCode!==u&&t.keyCode!==p?e.apply(this,arguments):(n.ignoreHover=!0,s=this.$activeOption.closest("[data-group]"),i=s.find("[data-selectable]").index(this.$activeOption),s=t.keyCode===u?s.prev("[data-group]"):s.next("[data-group]"),r=s.find("[data-selectable]"),o=r.eq(Math.min(r.length-1,i)),void(o.length&&this.setActiveOption(o)))}}();var i=function(){var e,t=i.width,n=document;return"undefined"==typeof t&&(e=n.createElement("div"),e.innerHTML='<div style="width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;"><div style="width:1px;height:100px;"></div></div>',e=e.firstChild,n.body.appendChild(e),t=i.width=e.offsetWidth-e.clientWidth,n.body.removeChild(e)),t},o=function(){var o,r,s,a,l,u,c;if(c=e("[data-group]",n.$dropdown_content),r=c.length,r&&n.$dropdown_content.width()){if(t.equalizeHeight){for(s=0,o=0;o<r;o++)s=Math.max(s,c.eq(o).height());c.css({height:s})}t.equalizeWidth&&(u=n.$dropdown_content.innerWidth()-i(),a=Math.round(u/r),c.css({width:a}),r>1&&(l=u-a*(r-1),c.eq(r-1).css({width:l})))}};(t.equalizeHeight||t.equalizeWidth)&&(O.after(this,"positionDropdown",o),O.after(this,"refreshOptions",o))}),L.define("remove_button",function(t){t=e.extend({label:"&times;",title:"Remove",className:"remove",append:!0},t);var n=function(t,n){n.className="remove-single";var i=t,o='<a href="javascript:void(0)" class="'+n.className+'" tabindex="-1" title="'+_(n.title)+'">'+n.label+"</a>",r=function(e,t){return e+t};t.setup=function(){var s=i.setup;return function(){if(n.append){var a=e(i.$input.context).attr("id"),l=(e("#"+a),i.settings.render.item);i.settings.render.item=function(e){return r(l.apply(t,arguments),o)}}s.apply(t,arguments),t.$control.on("click","."+n.className,function(e){e.preventDefault(),i.isLocked||i.clear()})}}()},i=function(t,n){var i=t,o='<a href="javascript:void(0)" class="'+n.className+'" tabindex="-1" title="'+_(n.title)+'">'+n.label+"</a>",r=function(e,t){var n=e.search(/(<\/[^>]+>\s*)$/);return e.substring(0,n)+t+e.substring(n)};t.setup=function(){var s=i.setup;return function(){if(n.append){var a=i.settings.render.item;i.settings.render.item=function(e){return r(a.apply(t,arguments),o)}}s.apply(t,arguments),t.$control.on("click","."+n.className,function(t){if(t.preventDefault(),!i.isLocked){var n=e(t.currentTarget).parent();i.setActiveItem(n),i.deleteSelection()&&i.setCaret(i.items.length)}})}}()};return"single"===this.settings.mode?void n(this,t):void i(this,t)}),L.define("restore_on_backspace",function(e){var t=this;e.text=e.text||function(e){return e[this.settings.labelField]},this.onKeyDown=function(){var n=t.onKeyDown;return function(t){var i,o;return t.keyCode===g&&""===this.$control_input.val()&&!this.$activeItems.length&&(i=this.caretPos-1,i>=0&&i<this.items.length)?(o=this.options[this.items[i]],this.deleteSelection(t)&&(this.setTextboxValue(e.text.apply(this,[o])),this.refreshOptions(!0)),void t.preventDefault()):n.apply(this,arguments)}}()}),L}),function(e){e.viewportSize={},e.viewportSize.getHeight=function(){return t("Height")},e.viewportSize.getWidth=function(){return t("Width")};var t=function(t){var n,i=t.toLowerCase(),o=e.document,r=o.documentElement;if(void 0===e["inner"+t])n=r["client"+t];else if(e["inner"+t]!=r["client"+t]){var s=o.createElement("body");s.id="vpw-test-b",s.style.cssText="overflow:scroll";var a=o.createElement("div");a.id="vpw-test-d",a.style.cssText="position:absolute;top:-1000px",a.innerHTML="<style>@media("+i+":"+r["client"+t]+"px){body#vpw-test-b div#vpw-test-d{"+i+":7px!important}}</style>",s.appendChild(a),r.insertBefore(s,o.head),n=7==a["offset"+t]?r["client"+t]:e["inner"+t],r.removeChild(s)}else n=e["inner"+t];return n}}(this),!function(e){function t(i){if(n[i])return n[i].exports;var o=n[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var n={};t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var n=e&&e.__esModule?function(){return e["default"]}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=9)}([function(e,t,n){"use strict";var i,o,r;"function"==typeof Symbol&&Symbol.iterator,!function(s){o=[n(2)],i=s,void 0!==(r="function"==typeof i?i.apply(t,o):i)&&(e.exports=r)}(function(e){return e})},function(e,t,n){"use strict";var i,o,r,s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};!function(s){o=[n(0),n(11),n(10)],i=s,void 0!==(r="function"==typeof i?i.apply(t,o):i)&&(e.exports=r)}(function(e,t,n,i){function o(t,n,s){return this instanceof o?(this.el=i,this.events={},this.maskset=i,this.refreshValue=!1,!0!==s&&(e.isPlainObject(t)?n=t:(n=n||{},n.alias=t),this.opts=e.extend(!0,{},this.defaults,n),this.noMasksCache=n&&n.definitions!==i,this.userOptions=n||{},this.isRTL=this.opts.numericInput,r(this.opts.alias,n,this.opts)),void 0):new o(t,n,s)}function r(t,n,s){var a=o.prototype.aliases[t];return a?(a.alias&&r(a.alias,i,s),e.extend(!0,s,a),e.extend(!0,s,n),!0):(null===s.mask&&(s.mask=t),!1)}function a(t,n){function r(t,r,s){var a=!1;if(null!==t&&""!==t||(a=null!==s.regex,a?(t=s.regex,t=t.replace(/^(\^)(.*)(\$)$/,"$2")):(a=!0,t=".*")),1===t.length&&!1===s.greedy&&0!==s.repeat&&(s.placeholder=""),s.repeat>0||"*"===s.repeat||"+"===s.repeat){var l="*"===s.repeat?0:"+"===s.repeat?1:s.repeat;t=s.groupmarker.start+t+s.groupmarker.end+s.quantifiermarker.start+l+","+s.repeat+s.quantifiermarker.end}var u,c=a?"regex_"+s.regex:s.numericInput?t.split("").reverse().join(""):t;return o.prototype.masksCache[c]===i||!0===n?(u={mask:t,maskToken:o.prototype.analyseMask(t,a,s),validPositions:{},_buffer:i,buffer:i,tests:{},metadata:r,maskLength:i},!0!==n&&(o.prototype.masksCache[c]=u,u=e.extend(!0,{},o.prototype.masksCache[c]))):u=e.extend(!0,{},o.prototype.masksCache[c]),u}if(e.isFunction(t.mask)&&(t.mask=t.mask(t)),e.isArray(t.mask)){if(t.mask.length>1){t.keepStatic=null===t.keepStatic||t.keepStatic;var s=t.groupmarker.start;return e.each(t.numericInput?t.mask.reverse():t.mask,function(n,o){s.length>1&&(s+=t.groupmarker.end+t.alternatormarker+t.groupmarker.start),s+=o.mask===i||e.isFunction(o.mask)?o:o.mask}),s+=t.groupmarker.end,r(s,t.mask,t)}t.mask=t.mask.pop()}return t.mask&&t.mask.mask!==i&&!e.isFunction(t.mask.mask)?r(t.mask.mask,t.mask,t):r(t.mask,t.mask,t)}function l(r,a,u){function h(e,t,n){t=t||0;var o,r,s,a=[],l=0,c=v();do!0===e&&g().validPositions[l]?(s=g().validPositions[l],r=s.match,o=s.locator.slice(),a.push(!0===n?s.input:!1===n?r.nativeDef:N(l,r))):(s=k(l,o,l-1),r=s.match,o=s.locator.slice(),(!1===u.jitMasking||l<c||"number"==typeof u.jitMasking&&isFinite(u.jitMasking)&&u.jitMasking>l)&&a.push(!1===n?r.nativeDef:N(l,r))),l++;while((G===i||l<G)&&(null!==r.fn||""!==r.def)||t>l);return""===a[a.length-1]&&a.pop(),g().maskLength=l+1,a}function g(){return a}function m(e){var t=g();t.buffer=i,!0!==e&&(t.validPositions={},t.p=0)}function v(e,t,n){var o=-1,r=-1,s=n||g().validPositions;e===i&&(e=-1);for(var a in s){var l=parseInt(a);s[l]&&(t||!0!==s[l].generatedInput)&&(l<=e&&(o=l),l>=e&&(r=l))}return-1!==o&&e-o>1||r<e?o:r}function y(t,n,o,r){var s,a=t,l=e.extend(!0,{},g().validPositions),c=!1;for(g().p=t,s=n-1;s>=a;s--)g().validPositions[s]!==i&&(!0!==o&&(!g().validPositions[s].match.optionality&&function(e){var t=g().validPositions[e];if(t!==i&&null===t.match.fn){var n=g().validPositions[e-1],o=g().validPositions[e+1];return n!==i&&o!==i}return!1}(s)||!1===u.canClearPosition(g(),s,v(i,!0),r,u))||delete g().validPositions[s]);for(m(!0),s=a+1;s<=v();){for(;g().validPositions[a]!==i;)a++;if(s<a&&(s=a+1),g().validPositions[s]===i&&$(s))s++;else{var d=k(s);!1===c&&l[a]&&l[a].match.def===d.match.def?(g().validPositions[a]=e.extend(!0,{},l[a]),g().validPositions[a].input=d.input,delete g().validPositions[s],s++):x(a,d.match.def)?!1!==A(a,d.input||N(s),!0)&&(delete g().validPositions[s],s++,c=!0):$(s)||(s++,a--),a++}}m(!0)}function b(e,t){for(var n,o=e,r=v(),s=g().validPositions[r]||C(0)[0],a=s.alternation!==i?s.locator[s.alternation].toString().split(","):[],l=0;l<o.length&&(n=o[l],!(n.match&&(u.greedy&&!0!==n.match.optionalQuantifier||(!1===n.match.optionality||!1===n.match.newBlockMarker)&&!0!==n.match.optionalQuantifier)&&(s.alternation===i||s.alternation!==n.alternation||n.locator[s.alternation]!==i&&P(n.locator[s.alternation].toString().split(","),a)))||!0===t&&(null!==n.match.fn||/[0-9a-bA-Z]/.test(n.match.def)));l++);return n}function k(e,t,n){return g().validPositions[e]||b(C(e,t?t.slice():t,n))}function w(e){return g().validPositions[e]?g().validPositions[e]:C(e)[0]}function x(e,t){for(var n=!1,i=C(e),o=0;o<i.length;o++)if(i[o].match&&i[o].match.def===t){n=!0;break}return n}function C(t,n,o){function r(n,o,s,l){function d(s,l,m){function v(t,n){var i=0===e.inArray(t,n.matches);return i||e.each(n.matches,function(e,o){if(!0===o.isQuantifier&&(i=v(t,n.matches[e-1])))return!1}),i}function y(t,n,o){var r,s;if(g().validPositions[t-1]&&o&&g().tests[t])for(var a=g().validPositions[t-1].locator,l=g().tests[t][0].locator,u=0;u<o;u++)if(a[u]!==l[u])return a.slice(o+1);return(g().tests[t]||g().validPositions[t])&&e.each(g().tests[t]||[g().validPositions[t]],function(e,t){var a=o!==i?o:t.alternation,l=t.locator[a]!==i?t.locator[a].toString().indexOf(n):-1;(s===i||l<s)&&-1!==l&&(r=t,s=l)}),r?r.locator.slice((o!==i?o:r.alternation)+1):o!==i?y(t,n):i}if(c>1e4)throw"Inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. "+g().mask;if(c===t&&s.matches===i)return p.push({match:s,locator:l.reverse(),cd:h}),!0;if(s.matches!==i){if(s.isGroup&&m!==s){if(s=d(n.matches[e.inArray(s,n.matches)+1],l))return!0}else if(s.isOptional){var b=s;if(s=r(s,o,l,m)){if(a=p[p.length-1].match,!v(a,b))return!0;f=!0,c=t}}else if(s.isAlternator){var k,w=s,x=[],C=p.slice(),S=l.length,T=o.length>0?o.shift():-1;if(-1===T||"string"==typeof T){var _,O=c,P=o.slice(),A=[];if("string"==typeof T)A=T.split(",");else for(_=0;_<w.matches.length;_++)A.push(_);for(var $=0;$<A.length;$++){if(_=parseInt(A[$]),p=[],o=y(c,_,S)||P.slice(),!0!==(s=d(w.matches[_]||n.matches[_],[_].concat(l),m)||s)&&s!==i&&A[A.length-1]<w.matches.length){var E=e.inArray(s,n.matches)+1;n.matches.length>E&&(s=d(n.matches[E],[E].concat(l.slice(1,l.length)),m))&&(A.push(E.toString()),e.each(p,function(e,t){t.alternation=l.length-1}))}k=p.slice(),c=O,p=[];for(var D=0;D<k.length;D++){var M=k[D],j=!1;M.alternation=M.alternation||S;for(var N=0;N<x.length;N++){var I=x[N];if("string"!=typeof T||-1!==e.inArray(M.locator[M.alternation].toString(),A)){if(function(e,t){return e.match.nativeDef===t.match.nativeDef||e.match.def===t.match.nativeDef||e.match.nativeDef===t.match.def}(M,I)){j=!0,M.alternation===I.alternation&&-1===I.locator[I.alternation].toString().indexOf(M.locator[M.alternation])&&(I.locator[I.alternation]=I.locator[I.alternation]+","+M.locator[M.alternation],I.alternation=M.alternation),M.match.nativeDef===I.match.def&&(M.locator[M.alternation]=I.locator[I.alternation],x.splice(x.indexOf(I),1,M));break}if(M.match.def===I.match.def){j=!1;break}if(function(e,n){return null===e.match.fn&&null!==n.match.fn&&n.match.fn.test(e.match.def,g(),t,!1,u,!1)}(M,I)||function(e,n){return null!==e.match.fn&&null!==n.match.fn&&n.match.fn.test(e.match.def.replace(/[\[\]]/g,""),g(),t,!1,u,!1)}(M,I)){M.alternation===I.alternation&&-1===M.locator[M.alternation].toString().indexOf(I.locator[I.alternation].toString().split("")[0])&&(M.na=M.na||M.locator[M.alternation].toString(),-1===M.na.indexOf(M.locator[M.alternation].toString().split("")[0])&&(M.na=M.na+","+M.locator[I.alternation].toString().split("")[0]),j=!0,M.locator[M.alternation]=I.locator[I.alternation].toString().split("")[0]+","+M.locator[M.alternation],x.splice(x.indexOf(I),0,M));break}}}j||x.push(M)}}"string"==typeof T&&(x=e.map(x,function(t,n){if(isFinite(n)){var o=t.alternation,r=t.locator[o].toString().split(",");t.locator[o]=i,t.alternation=i;for(var s=0;s<r.length;s++)-1!==e.inArray(r[s],A)&&(t.locator[o]!==i?(t.locator[o]+=",",t.locator[o]+=r[s]):t.locator[o]=parseInt(r[s]),t.alternation=o);if(t.locator[o]!==i)return t}})),p=C.concat(x),c=t,f=p.length>0,s=x.length>0,o=P.slice()}else s=d(w.matches[T]||n.matches[T],[T].concat(l),m);if(s)return!0}else if(s.isQuantifier&&m!==n.matches[e.inArray(s,n.matches)-1])for(var F=s,L=o.length>0?o.shift():0;L<(isNaN(F.quantifier.max)?L+1:F.quantifier.max)&&c<=t;L++){var R=n.matches[e.inArray(F,n.matches)-1];if(s=d(R,[L].concat(l),R)){if(a=p[p.length-1].match,a.optionalQuantifier=L>F.quantifier.min-1,v(a,R)){if(L>F.quantifier.min-1){f=!0,c=t;break}return!0}return!0}}else if(s=r(s,o,l,m))return!0}else c++}for(var m=o.length>0?o.shift():0;m<n.matches.length;m++)if(!0!==n.matches[m].isQuantifier){var v=d(n.matches[m],[m].concat(s),l);if(v&&c===t)return v;if(c>t)break}}function s(e){if(u.keepStatic&&t>0&&e.length>1+(""===e[e.length-1].match.def?1:0)&&!0!==e[0].match.optionality&&!0!==e[0].match.optionalQuantifier&&null===e[0].match.fn&&!/[0-9a-bA-Z]/.test(e[0].match.def)){if(g().validPositions[t-1]===i)return[b(e)];if(g().validPositions[t-1].alternation===e[0].alternation)return[b(e)];if(g().validPositions[t-1])return[b(e)]}return e}var a,l=g().maskToken,c=n?o:0,d=n?n.slice():[0],p=[],f=!1,h=n?n.join(""):"";if(t>-1){if(n===i){for(var m,v=t-1;(m=g().validPositions[v]||g().tests[v])===i&&v>-1;)v--;m!==i&&v>-1&&(d=function(t){var n=[];return e.isArray(t)||(t=[t]),t.length>0&&(t[0].alternation===i?(n=b(t.slice()).locator.slice(),0===n.length&&(n=t[0].locator.slice())):e.each(t,function(e,t){if(""!==t.def)if(0===n.length)n=t.locator.slice();else for(var i=0;i<n.length;i++)t.locator[i]&&-1===n[i].toString().indexOf(t.locator[i])&&(n[i]+=","+t.locator[i])})),n}(m),h=d.join(""),c=v)}if(g().tests[t]&&g().tests[t][0].cd===h)return s(g().tests[t]);for(var y=d.shift();y<l.length&&!(r(l[y],d,[y])&&c===t||c>t);y++);}return(0===p.length||f)&&p.push({match:{fn:null,cardinality:0,optionality:!0,casing:null,def:"",placeholder:""},locator:[],cd:h}),n!==i&&g().tests[t]?s(e.extend(!0,[],p)):(g().tests[t]=e.extend(!0,[],p),s(g().tests[t]))}function S(){return g()._buffer===i&&(g()._buffer=h(!1,1),g().buffer===i&&(g().buffer=g()._buffer.slice())),g()._buffer}function T(e){return g().buffer!==i&&!0!==e||(g().buffer=h(!0,v(),!0)),g().buffer}function _(e,t,n){var o,r;if(!0===e)m(),e=0,t=n.length;else for(o=e;o<t;o++)delete g().validPositions[o];for(r=e,o=e;o<t;o++)if(m(!0),n[o]!==u.skipOptionalPartCharacter){var s=A(r,n[o],!0,!0);!1!==s&&(m(!0),r=s.caret!==i?s.caret:s.pos+1)}}function O(t,n,i){switch(u.casing||n.casing){case"upper":t=t.toUpperCase();break;case"lower":t=t.toLowerCase();break;case"title":var r=g().validPositions[i-1];t=0===i||r&&r.input===String.fromCharCode(o.keyCode.SPACE)?t.toUpperCase():t.toLowerCase();break;default:if(e.isFunction(u.casing)){var s=Array.prototype.slice.call(arguments);s.push(g().validPositions),t=u.casing.apply(this,s)}}return t}function P(t,n,o){for(var r,s=u.greedy?n:n.slice(0,1),a=!1,l=o!==i?o.split(","):[],c=0;c<l.length;c++)-1!==(r=t.indexOf(l[c]))&&t.splice(r,1);for(var d=0;d<t.length;d++)if(-1!==e.inArray(t[d],s)){a=!0;break}return a}function A(t,n,r,s,a,l){function c(e){var t=Q?e.begin-e.end>1||e.begin-e.end==1:e.end-e.begin>1||e.end-e.begin==1;return t&&0===e.begin&&e.end===g().maskLength?"full":t}function d(n,o,r){var a=!1;return e.each(C(n),function(l,d){for(var f=d.match,h=o?1:0,b="",k=f.cardinality;k>h;k--)b+=M(n-(k-1));if(o&&(b+=o),T(!0),!1!==(a=null!=f.fn?f.fn.test(b,g(),n,r,u,c(t)):(o===f.def||o===u.skipOptionalPartCharacter)&&""!==f.def&&{c:N(n,f,!0)||f.def,pos:n})){var w=a.c!==i?a.c:o;w=w===u.skipOptionalPartCharacter&&null===f.fn?N(n,f,!0)||f.def:w;var x=n,C=T();if(a.remove!==i&&(e.isArray(a.remove)||(a.remove=[a.remove]),e.each(a.remove.sort(function(e,t){return t-e}),function(e,t){y(t,t+1,!0)})),a.insert!==i&&(e.isArray(a.insert)||(a.insert=[a.insert]),e.each(a.insert.sort(function(e,t){return e-t}),function(e,t){A(t.pos,t.c,!0,s)})),a.refreshFromBuffer){var S=a.refreshFromBuffer;if(_(!0===S?S:S.start,S.end,C),a.pos===i&&a.c===i)return a.pos=v(),!1;if((x=a.pos!==i?a.pos:n)!==n)return a=e.extend(a,A(x,w,!0,s)),!1}else if(!0!==a&&a.pos!==i&&a.pos!==n&&(x=a.pos,_(n,x,T().slice()),x!==n))return a=e.extend(a,A(x,w,!0)),!1;return(!0===a||a.pos!==i||a.c!==i)&&(l>0&&m(!0),p(x,e.extend({},d,{input:O(w,f,x)}),s,c(t))||(a=!1),!1)}}),a}function p(t,n,o,r){if(r||u.insertMode&&g().validPositions[t]!==i&&o===i){var s,a=e.extend(!0,{},g().validPositions),l=v(i,!0);for(s=t;s<=l;s++)delete g().validPositions[s];g().validPositions[t]=e.extend(!0,{},n);var c,d=!0,p=g().validPositions,h=!1,y=g().maskLength;for(s=c=t;s<=l;s++){var b=a[s];if(b!==i)for(var k=c;k<g().maskLength&&(null===b.match.fn&&p[s]&&(!0===p[s].match.optionalQuantifier||!0===p[s].match.optionality)||null!=b.match.fn);){if(k++,!1===h&&a[k]&&a[k].match.def===b.match.def)g().validPositions[k]=e.extend(!0,{},a[k]),g().validPositions[k].input=b.input,f(k),c=k,d=!0;else if(x(k,b.match.def)){var w=A(k,b.input,!0,!0);d=!1!==w,c=w.caret||w.insert?v():k,h=!0}else if(!(d=!0===b.generatedInput)&&k>=g().maskLength-1)break;if(g().maskLength<y&&(g().maskLength=y),d)break}if(!d)break}if(!d)return g().validPositions=e.extend(!0,{},a),m(!0),!1}else g().validPositions[t]=e.extend(!0,{},n);return m(!0),!0}function f(t){for(var n=t-1;n>-1&&!g().validPositions[n];n--);var o,r;for(n++;n<t;n++)g().validPositions[n]===i&&(!1===u.jitMasking||u.jitMasking>n)&&(r=C(n,k(n-1).locator,n-1).slice(),""===r[r.length-1].match.def&&r.pop(),(o=b(r))&&(o.match.def===u.radixPointDefinitionSymbol||!$(n,!0)||e.inArray(u.radixPoint,T())<n&&o.match.fn&&o.match.fn.test(N(n),g(),n,!1,u))&&!1!==(w=d(n,N(n,o.match,!0)||(null==o.match.fn?o.match.def:""!==N(n)?N(n):T()[n]),!0))&&(g().validPositions[w.pos||n].generatedInput=!0))}r=!0===r;var h=t;t.begin!==i&&(h=Q&&!c(t)?t.end:t.begin);var w=!0,S=e.extend(!0,{},g().validPositions);if(e.isFunction(u.preValidation)&&!r&&!0!==s&&!0!==l&&(w=u.preValidation(T(),h,n,c(t),u)),!0===w){if(f(h),c(t)&&(z(i,o.keyCode.DELETE,t,!0,!0),h=g().p),h<g().maskLength&&(G===i||h<G)&&(w=d(h,n,r),(!r||!0===s)&&!1===w&&!0!==l)){var D=g().validPositions[h];if(!D||null!==D.match.fn||D.match.def!==n&&n!==u.skipOptionalPartCharacter){if((u.insertMode||g().validPositions[E(h)]===i)&&!$(h,!0))for(var j=h+1,I=E(h);j<=I;j++)if(!1!==(w=d(j,n,r))){!function(t,n){var o=g().validPositions[n];if(o)for(var r=o.locator,s=r.length,a=t;a<n;a++)if(g().validPositions[a]===i&&!$(a,!0)){var l=C(a).slice(),u=b(l,!0),c=-1;""===l[l.length-1].match.def&&l.pop(),e.each(l,function(e,t){for(var n=0;n<s;n++){if(t.locator[n]===i||!P(t.locator[n].toString().split(","),r[n].toString().split(","),t.na)){var o=r[n],a=u.locator[n],l=t.locator[n];o-a>Math.abs(o-l)&&(u=t);break}c<n&&(c=n,u=t)}}),u=e.extend({},u,{input:N(a,u.match,!0)||u.match.def}),u.generatedInput=!0,p(a,u,!0),g().validPositions[n]=i,d(n,o.input,!0)}}(h,w.pos!==i?w.pos:j),h=j;break}}else w={caret:E(h)}}!1===w&&u.keepStatic&&!r&&!0!==a&&(w=function(t,n,o){var r,a,l,c,d,p,f,h,y=e.extend(!0,{},g().validPositions),b=!1,k=v();for(c=g().validPositions[k];k>=0;k--)if((l=g().validPositions[k])&&l.alternation!==i){if(r=k,a=g().validPositions[r].alternation,c.locator[l.alternation]!==l.locator[l.alternation])break;c=l}if(a!==i){h=parseInt(r);var w=c.locator[c.alternation||a]!==i?c.locator[c.alternation||a]:f[0];w.length>0&&(w=w.split(",")[0]);var x=g().validPositions[h],S=g().validPositions[h-1];e.each(C(h,S?S.locator:i,h-1),function(r,l){f=l.locator[a]?l.locator[a].toString().split(","):[];for(var c=0;c<f.length;c++){var k=[],C=0,S=0,T=!1;if(w<f[c]&&(l.na===i||-1===e.inArray(f[c],l.na.split(","))||-1===e.inArray(w.toString(),f))){g().validPositions[h]=e.extend(!0,{},l);var _=g().validPositions[h].locator;for(g().validPositions[h].locator[a]=parseInt(f[c]),null==l.match.fn?(x.input!==l.match.def&&(T=!0,!0!==x.generatedInput&&k.push(x.input)),S++,g().validPositions[h].generatedInput=!/[0-9a-bA-Z]/.test(l.match.def),g().validPositions[h].input=l.match.def):g().validPositions[h].input=x.input,d=h+1;d<v(i,!0)+1;d++)p=g().validPositions[d],p&&!0!==p.generatedInput&&/[0-9a-bA-Z]/.test(p.input)?k.push(p.input):d<t&&C++,delete g().validPositions[d];for(T&&k[0]===l.match.def&&k.shift(),m(!0),b=!0;k.length>0;){var O=k.shift();if(O!==u.skipOptionalPartCharacter&&!(b=A(v(i,!0)+1,O,!1,s,!0)))break}if(b){g().validPositions[h].locator=_;var P=v(t)+1;for(d=h+1;d<v()+1;d++)((p=g().validPositions[d])===i||null==p.match.fn)&&d<t+(S-C)&&S++;t+=S-C,b=A(t>P?P:t,n,o,s,!0)}if(b)return!1;m(),g().validPositions=e.extend(!0,{},y)}}})}return b}(h,n,r)),!0===w&&(w={pos:h})}if(e.isFunction(u.postValidation)&&!1!==w&&!r&&!0!==s&&!0!==l){var F=u.postValidation(T(!0),w,u);if(F.refreshFromBuffer&&F.buffer){var L=F.refreshFromBuffer;_(!0===L?L:L.start,L.end,F.buffer)}w=!0===F?w:F}return w&&w.pos===i&&(w.pos=h),!1!==w&&!0!==l||(m(!0),g().validPositions=e.extend(!0,{},S)),w}function $(e,t){var n=k(e).match;if(""===n.def&&(n=w(e).match),null!=n.fn)return n.fn;if(!0!==t&&e>-1){var i=C(e);return i.length>1+(""===i[i.length-1].match.def?1:0)}return!1}function E(e,t){var n=g().maskLength;if(e>=n)return n;var i=e;for(C(n+1).length>1&&(h(!0,n+1,!0),n=g().maskLength);++i<n&&(!0===t&&(!0!==w(i).match.newBlockMarker||!$(i))||!0!==t&&!$(i)););return i}function D(e,t){var n,i=e;if(i<=0)return 0;for(;--i>0&&(!0===t&&!0!==w(i).match.newBlockMarker||!0!==t&&!$(i)&&(n=C(i),n.length<2||2===n.length&&""===n[1].match.def)););return i}function M(e){return g().validPositions[e]===i?N(e):g().validPositions[e].input}function j(t,n,o,r,s){if(r&&e.isFunction(u.onBeforeWrite)){var a=u.onBeforeWrite.call(X,r,n,o,u);if(a){if(a.refreshFromBuffer){var l=a.refreshFromBuffer;_(!0===l?l:l.start,l.end,a.buffer||n),n=T(!0)}o!==i&&(o=a.caret!==i?a.caret:o)}}t!==i&&(t.inputmask._valueSet(n.join("")),o===i||r!==i&&"blur"===r.type?W(t,o,0===n.length):f&&r&&"input"===r.type?setTimeout(function(){L(t,o)},0):L(t,o),!0===s&&(J=!0,e(t).trigger("input")))}function N(t,n,o){if(n=n||w(t).match,n.placeholder!==i||!0===o)return e.isFunction(n.placeholder)?n.placeholder(u):n.placeholder;if(null===n.fn){if(t>-1&&g().validPositions[t]===i){var r,s=C(t),a=[];if(s.length>1+(""===s[s.length-1].match.def?1:0))for(var l=0;l<s.length;l++)if(!0!==s[l].match.optionality&&!0!==s[l].match.optionalQuantifier&&(null===s[l].match.fn||r===i||!1!==s[l].match.fn.test(r.match.def,g(),t,!0,u))&&(a.push(s[l]),null===s[l].match.fn&&(r=s[l]),a.length>1&&/[0-9a-bA-Z]/.test(a[0].match.def)))return u.placeholder.charAt(t%u.placeholder.length)}return n.def}return u.placeholder.charAt(t%u.placeholder.length)}function I(t,r,s,a,l){function c(e,t){return-1!==S().slice(e,E(e)).join("").indexOf(t)&&!$(e)&&w(e).match.nativeDef===t.charAt(t.length-1)}var d=a.slice(),p="",f=-1,h=i;if(m(),s||!0===u.autoUnmask)f=E(f);else{var y=S().slice(0,E(-1)).join(""),b=d.join("").match(new RegExp("^"+o.escapeRegex(y),"g"));b&&b.length>0&&(d.splice(0,b.length*y.length),f=E(f))}if(-1===f?(g().p=E(f),f=0):g().p=f,e.each(d,function(n,o){if(o!==i)if(g().validPositions[n]===i&&d[n]===N(n)&&$(n,!0)&&!1===A(n,d[n],!0,i,i,!0))g().p++;else{var r=new e.Event("_checkval");r.which=o.charCodeAt(0),p+=o;var a=v(i,!0),l=g().validPositions[a],y=k(a+1,l?l.locator.slice():i,a);if(!c(f,p)||s||u.autoUnmask){var b=s?n:null==y.match.fn&&y.match.optionality&&a+1<g().p?a+1:g().p;h=ie.keypressEvent.call(t,r,!0,!1,s,b),f=b+1,p=""}else h=ie.keypressEvent.call(t,r,!0,!1,!0,a+1);if(!1!==h&&!s&&e.isFunction(u.onBeforeWrite)){var w=h;if(h=u.onBeforeWrite.call(X,r,T(),h.forwardPosition,u),(h=e.extend(w,h))&&h.refreshFromBuffer){var x=h.refreshFromBuffer;_(!0===x?x:x.start,x.end,h.buffer),m(!0),h.caret&&(g().p=h.caret,h.forwardPosition=h.caret)}}}}),r){var x=i;n.activeElement===t&&h&&(x=u.numericInput?D(h.forwardPosition):h.forwardPosition),j(t,T(),x,l||new e.Event("checkval"),l&&"input"===l.type)}}function F(t){if(t){if(t.inputmask===i)return t.value;t.inputmask&&t.inputmask.refreshValue&&ie.setValueEvent.call(t)}var n=[],o=g().validPositions;for(var r in o)o[r].match&&null!=o[r].match.fn&&n.push(o[r].input);var s=0===n.length?"":(Q?n.reverse():n).join("");if(e.isFunction(u.onUnMask)){var a=(Q?T().slice().reverse():T()).join("");s=u.onUnMask.call(X,a,s,u)}return s}function L(e,o,r,s){function a(e){return!0===s||!Q||"number"!=typeof e||u.greedy&&""===u.placeholder||(e=T().join("").length-e),e}var l;if(o===i)return e.setSelectionRange?(o=e.selectionStart,r=e.selectionEnd):t.getSelection?(l=t.getSelection().getRangeAt(0),l.commonAncestorContainer.parentNode!==e&&l.commonAncestorContainer!==e||(o=l.startOffset,r=l.endOffset)):n.selection&&n.selection.createRange&&(l=n.selection.createRange(),o=0-l.duplicate().moveStart("character",-e.inputmask._valueGet().length),r=o+l.text.length),{begin:a(o),end:a(r)};if(o.begin!==i&&(r=o.end,o=o.begin),"number"==typeof o){o=a(o),r=a(r),r="number"==typeof r?r:o;var d=parseInt(((e.ownerDocument.defaultView||t).getComputedStyle?(e.ownerDocument.defaultView||t).getComputedStyle(e,null):e.currentStyle).fontSize)*r;if(e.scrollLeft=d>e.scrollWidth?d:0,c||!1!==u.insertMode||o!==r||r++,e.setSelectionRange)e.selectionStart=o,e.selectionEnd=r;else if(t.getSelection){if(l=n.createRange(),e.firstChild===i||null===e.firstChild){var p=n.createTextNode("");e.appendChild(p)}l.setStart(e.firstChild,o<e.inputmask._valueGet().length?o:e.inputmask._valueGet().length),l.setEnd(e.firstChild,r<e.inputmask._valueGet().length?r:e.inputmask._valueGet().length),l.collapse(!0);var f=t.getSelection();f.removeAllRanges(),f.addRange(l)}else e.createTextRange&&(l=e.createTextRange(),l.collapse(!0),l.moveEnd("character",r),l.moveStart("character",o),l.select());W(e,{begin:o,end:r})}}function R(t){var n,o,r=T(),s=r.length,a=v(),l={},u=g().validPositions[a],c=u!==i?u.locator.slice():i;for(n=a+1;n<r.length;n++)o=k(n,c,n-1),c=o.locator.slice(),l[n]=e.extend(!0,{},o);var d=u&&u.alternation!==i?u.locator[u.alternation]:i;for(n=s-1;n>a&&(o=l[n],(o.match.optionality||o.match.optionalQuantifier&&o.match.newBlockMarker||d&&(d!==l[n].locator[u.alternation]&&null!=o.match.fn||null===o.match.fn&&o.locator[u.alternation]&&P(o.locator[u.alternation].toString().split(","),d.toString().split(","))&&""!==C(n)[0].def))&&r[n]===N(n,o.match));n--)s--;return t?{l:s,def:l[s]?l[s].match:i}:s}function H(e){for(var t,n=R(),o=e.length,r=g().validPositions[v()];n<o&&!$(n,!0)&&(t=r!==i?k(n,r.locator.slice(""),r):w(n))&&!0!==t.match.optionality&&(!0!==t.match.optionalQuantifier&&!0!==t.match.newBlockMarker||n+1===o&&""===(r!==i?k(n+1,r.locator.slice(""),r):w(n+1)).match.def);)n++;for(;(t=g().validPositions[n-1])&&t&&t.match.optionality&&t.input===u.skipOptionalPartCharacter;)n--;return e.splice(n),e}function q(t){if(e.isFunction(u.isComplete))return u.isComplete(t,u);if("*"===u.repeat)return i;var n=!1,o=R(!0),r=D(o.l);if(o.def===i||o.def.newBlockMarker||o.def.optionality||o.def.optionalQuantifier){n=!0;for(var s=0;s<=r;s++){var a=k(s).match;if(null!==a.fn&&g().validPositions[s]===i&&!0!==a.optionality&&!0!==a.optionalQuantifier||null===a.fn&&t[s]!==N(s,a)){n=!1;break}}}return n}function z(t,n,r,s,a){if((u.numericInput||Q)&&(n===o.keyCode.BACKSPACE?n=o.keyCode.DELETE:n===o.keyCode.DELETE&&(n=o.keyCode.BACKSPACE),Q)){var l=r.end;r.end=r.begin,r.begin=l}n===o.keyCode.BACKSPACE&&(r.end-r.begin<1||!1===u.insertMode)?(r.begin=D(r.begin),g().validPositions[r.begin]!==i&&g().validPositions[r.begin].input===u.groupSeparator&&r.begin--):n===o.keyCode.DELETE&&r.begin===r.end&&(r.end=$(r.end,!0)&&g().validPositions[r.end]&&g().validPositions[r.end].input!==u.radixPoint?r.end+1:E(r.end)+1,g().validPositions[r.begin]!==i&&g().validPositions[r.begin].input===u.groupSeparator&&r.end++),y(r.begin,r.end,!1,s),!0!==s&&function(){if(u.keepStatic){for(var n=[],o=v(-1,!0),r=e.extend(!0,{},g().validPositions),s=g().validPositions[o];o>=0;o--){var a=g().validPositions[o];if(a){if(!0!==a.generatedInput&&/[0-9a-bA-Z]/.test(a.input)&&n.push(a.input),delete g().validPositions[o],a.alternation!==i&&a.locator[a.alternation]!==s.locator[a.alternation])break;s=a}}if(o>-1)for(g().p=E(v(-1,!0));n.length>0;){var l=new e.Event("keypress");l.which=n.pop().charCodeAt(0),ie.keypressEvent.call(t,l,!0,!1,!1,g().p)}else g().validPositions=e.extend(!0,{},r)}}();var c=v(r.begin,!0);if(c<r.begin)g().p=E(c);else if(!0!==s&&(g().p=r.begin,!0!==a))for(;g().p<c&&g().validPositions[g().p]===i;)g().p++}function B(i){function o(e){var t,o=n.createElement("span");for(var s in r)isNaN(s)&&-1!==s.indexOf("font")&&(o.style[s]=r[s]);o.style.textTransform=r.textTransform,o.style.letterSpacing=r.letterSpacing,o.style.position="absolute",
o.style.height="auto",o.style.width="auto",o.style.visibility="hidden",o.style.whiteSpace="nowrap",n.body.appendChild(o);var a,l=i.inputmask._valueGet(),u=0;for(t=0,a=l.length;t<=a;t++){if(o.innerHTML+=l.charAt(t)||"_",o.offsetWidth>=e){var c=e-u,d=o.offsetWidth-e;o.innerHTML=l.charAt(t),c-=o.offsetWidth/3,t=c<d?t-1:t;break}u=o.offsetWidth}return n.body.removeChild(o),t}var r=(i.ownerDocument.defaultView||t).getComputedStyle(i,null),s=n.createElement("div");s.style.width=r.width,s.style.textAlign=r.textAlign,K=n.createElement("div"),K.className="im-colormask",i.parentNode.insertBefore(K,i),i.parentNode.removeChild(i),K.appendChild(s),K.appendChild(i),i.style.left=s.offsetLeft+"px",e(i).on("click",function(e){return L(i,o(e.clientX)),ie.clickEvent.call(i,[e])}),e(i).on("keydown",function(e){e.shiftKey||!1===u.insertMode||setTimeout(function(){W(i)},0)})}function W(e,t,o){function r(){p||null!==a.fn&&l.input!==i?p&&(null!==a.fn&&l.input!==i||""===a.def)&&(p=!1,d+="</span>"):(p=!0,d+="<span class='im-static'>")}function s(i){!0!==i&&f!==t.begin||n.activeElement!==e||(d+="<span class='im-caret' style='border-right-width: 1px;border-right-style: solid;'></span>")}var a,l,c,d="",p=!1,f=0;if(K!==i){var h=T();if(t===i?t=L(e):t.begin===i&&(t={begin:t,end:t}),!0!==o){var m=v();do s(),g().validPositions[f]?(l=g().validPositions[f],a=l.match,c=l.locator.slice(),r(),d+=h[f]):(l=k(f,c,f-1),a=l.match,c=l.locator.slice(),(!1===u.jitMasking||f<m||"number"==typeof u.jitMasking&&isFinite(u.jitMasking)&&u.jitMasking>f)&&(r(),d+=N(f,a))),f++;while((G===i||f<G)&&(null!==a.fn||""!==a.def)||m>f||p);-1===d.indexOf("im-caret")&&s(!0),p&&r()}var y=K.getElementsByTagName("div")[0];y.innerHTML=d,e.inputmask.positionColorMask(e,y)}}a=a||this.maskset,u=u||this.opts;var U,V,G,K,X=this,Y=this.el,Q=this.isRTL,Z=!1,J=!1,ee=!1,te=!1,ne={on:function(t,n,r){var s=function(t){if(this.inputmask===i&&"FORM"!==this.nodeName){var n=e.data(this,"_inputmask_opts");n?new o(n).mask(this):ne.off(this)}else{if("setvalue"===t.type||"FORM"===this.nodeName||!(this.disabled||this.readOnly&&!("keydown"===t.type&&t.ctrlKey&&67===t.keyCode||!1===u.tabThrough&&t.keyCode===o.keyCode.TAB))){switch(t.type){case"input":if(!0===J)return J=!1,t.preventDefault();break;case"keydown":Z=!1,J=!1;break;case"keypress":if(!0===Z)return t.preventDefault();Z=!0;break;case"click":if(d||p){var s=this,a=arguments;return setTimeout(function(){r.apply(s,a)},0),!1}}var l=r.apply(this,arguments);return!1===l&&(t.preventDefault(),t.stopPropagation()),l}t.preventDefault()}};t.inputmask.events[n]=t.inputmask.events[n]||[],t.inputmask.events[n].push(s),-1!==e.inArray(n,["submit","reset"])?null!==t.form&&e(t.form).on(n,s):e(t).on(n,s)},off:function(t,n){if(t.inputmask&&t.inputmask.events){var i;n?(i=[],i[n]=t.inputmask.events[n]):i=t.inputmask.events,e.each(i,function(n,i){for(;i.length>0;){var o=i.pop();-1!==e.inArray(n,["submit","reset"])?null!==t.form&&e(t.form).off(n,o):e(t).off(n,o)}delete t.inputmask.events[n]})}}},ie={keydownEvent:function(t){var i=this,r=e(i),s=t.keyCode,a=L(i);if(s===o.keyCode.BACKSPACE||s===o.keyCode.DELETE||p&&s===o.keyCode.BACKSPACE_SAFARI||t.ctrlKey&&s===o.keyCode.X&&!function(e){var t=n.createElement("input"),i="on"+e,o=i in t;return o||(t.setAttribute(i,"return;"),o="function"==typeof t[i]),t=null,o}("cut"))t.preventDefault(),z(i,s,a),j(i,T(!0),g().p,t,i.inputmask._valueGet()!==T().join("")),i.inputmask._valueGet()===S().join("")?r.trigger("cleared"):!0===q(T())&&r.trigger("complete");else if(s===o.keyCode.END||s===o.keyCode.PAGE_DOWN){t.preventDefault();var l=E(v());u.insertMode||l!==g().maskLength||t.shiftKey||l--,L(i,t.shiftKey?a.begin:l,l,!0)}else s===o.keyCode.HOME&&!t.shiftKey||s===o.keyCode.PAGE_UP?(t.preventDefault(),L(i,0,t.shiftKey?a.begin:0,!0)):(u.undoOnEscape&&s===o.keyCode.ESCAPE||90===s&&t.ctrlKey)&&!0!==t.altKey?(I(i,!0,!1,U.split("")),r.trigger("click")):s!==o.keyCode.INSERT||t.shiftKey||t.ctrlKey?!0===u.tabThrough&&s===o.keyCode.TAB?(!0===t.shiftKey?(null===w(a.begin).match.fn&&(a.begin=E(a.begin)),a.end=D(a.begin,!0),a.begin=D(a.end,!0)):(a.begin=E(a.begin,!0),a.end=E(a.begin,!0),a.end<g().maskLength&&a.end--),a.begin<g().maskLength&&(t.preventDefault(),L(i,a.begin,a.end))):t.shiftKey||!1===u.insertMode&&(s===o.keyCode.RIGHT?setTimeout(function(){var e=L(i);L(i,e.begin)},0):s===o.keyCode.LEFT&&setTimeout(function(){var e=L(i);L(i,Q?e.begin+1:e.begin-1)},0)):(u.insertMode=!u.insertMode,L(i,u.insertMode||a.begin!==g().maskLength?a.begin:a.begin-1));u.onKeyDown.call(this,t,T(),L(i).begin,u),ee=-1!==e.inArray(s,u.ignorables)},keypressEvent:function(t,n,r,s,a){var l=this,c=e(l),d=t.which||t.charCode||t.keyCode;if(!(!0===n||t.ctrlKey&&t.altKey)&&(t.ctrlKey||t.metaKey||ee))return d===o.keyCode.ENTER&&U!==T().join("")&&(U=T().join(""),setTimeout(function(){c.trigger("change")},0)),!0;if(d){46===d&&!1===t.shiftKey&&""!==u.radixPoint&&(d=u.radixPoint.charCodeAt(0));var p,f=n?{begin:a,end:a}:L(l),h=String.fromCharCode(d);g().writeOutBuffer=!0;var v=A(f,h,s);if(!1!==v&&(m(!0),p=v.caret!==i?v.caret:n?v.pos+1:E(v.pos),g().p=p),!1!==r&&(setTimeout(function(){u.onKeyValidation.call(l,d,v,u)},0),g().writeOutBuffer&&!1!==v)){var y=T();j(l,y,u.numericInput&&v.caret===i?D(p):p,t,!0!==n),!0!==n&&setTimeout(function(){!0===q(y)&&c.trigger("complete")},0)}if(t.preventDefault(),n)return!1!==v&&(v.forwardPosition=p),v}},pasteEvent:function(n){var i,o=this,r=n.originalEvent||n,s=e(o),a=o.inputmask._valueGet(!0),l=L(o);Q&&(i=l.end,l.end=l.begin,l.begin=i);var c=a.substr(0,l.begin),d=a.substr(l.end,a.length);if(c===(Q?S().reverse():S()).slice(0,l.begin).join("")&&(c=""),d===(Q?S().reverse():S()).slice(l.end).join("")&&(d=""),Q&&(i=c,c=d,d=i),t.clipboardData&&t.clipboardData.getData)a=c+t.clipboardData.getData("Text")+d;else{if(!r.clipboardData||!r.clipboardData.getData)return!0;a=c+r.clipboardData.getData("text/plain")+d}var p=a;if(e.isFunction(u.onBeforePaste)){if(!1===(p=u.onBeforePaste.call(X,a,u)))return n.preventDefault();p||(p=a)}return I(o,!1,!1,Q?p.split("").reverse():p.toString().split("")),j(o,T(),E(v()),n,U!==T().join("")),!0===q(T())&&s.trigger("complete"),n.preventDefault()},inputFallBackEvent:function(t){var n=this,i=n.inputmask._valueGet();if(T().join("")!==i){var r=L(n);if(i=function(e,t,n){return"."===t.charAt(n.begin-1)&&""!==u.radixPoint&&(t=t.split(""),t[n.begin-1]=u.radixPoint.charAt(0),t=t.join("")),t}(n,i,r),i=function(e,t,n){if(d){var i=t.replace(T().join(""),"");if(1===i.length){var o=t.split("");o.splice(n.begin,0,i),t=o.join("")}}return t}(n,i,r),r.begin>i.length&&(L(n,i.length),r=L(n)),T().join("")!==i){var s=T().join(""),a=i.length>s.length?-1:0,l=i.substr(0,r.begin),c=i.substr(r.begin),p=s.substr(0,r.begin+a),f=s.substr(r.begin+a),h=r,g="",m=!1;if(l!==p){for(var v=(m=l.length>=p.length)?l.length:p.length,y=0;l.charAt(y)===p.charAt(y)&&y<v;y++);m&&(0===a&&(h.begin=y),g+=l.slice(y,h.end))}if(c!==f&&(c.length>f.length?g+=c.slice(0,1):c.length<f.length&&(h.end+=f.length-c.length,m||""===u.radixPoint||""!==c||l.charAt(h.begin+a-1)!==u.radixPoint||(h.begin--,g=u.radixPoint))),j(n,T(),{begin:h.begin+a,end:h.end+a}),g.length>0)e.each(g.split(""),function(t,i){var o=new e.Event("keypress");o.which=i.charCodeAt(0),ee=!1,ie.keypressEvent.call(n,o)});else{h.begin===h.end-1&&(h.begin=D(h.begin+1),h.begin===h.end-1?L(n,h.begin):L(n,h.begin,h.end));var b=new e.Event("keydown");b.keyCode=o.keyCode.DELETE,ie.keydownEvent.call(n,b)}t.preventDefault()}}},setValueEvent:function(t){this.inputmask.refreshValue=!1;var n=this,i=n.inputmask._valueGet(!0);e.isFunction(u.onBeforeMask)&&(i=u.onBeforeMask.call(X,i,u)||i),i=i.split(""),I(n,!0,!1,Q?i.reverse():i),U=T().join(""),(u.clearMaskOnLostFocus||u.clearIncomplete)&&n.inputmask._valueGet()===S().join("")&&n.inputmask._valueSet("")},focusEvent:function(e){var t=this,n=t.inputmask._valueGet();u.showMaskOnFocus&&(!u.showMaskOnHover||u.showMaskOnHover&&""===n)&&(t.inputmask._valueGet()!==T().join("")?j(t,T(),E(v())):!1===te&&L(t,E(v()))),!0===u.positionCaretOnTab&&!1===te&&""!==n&&(j(t,T(),L(t)),ie.clickEvent.apply(t,[e,!0])),U=T().join("")},mouseleaveEvent:function(e){var t=this;if(te=!1,u.clearMaskOnLostFocus&&n.activeElement!==t){var i=T().slice(),o=t.inputmask._valueGet();o!==t.getAttribute("placeholder")&&""!==o&&(-1===v()&&o===S().join("")?i=[]:H(i),j(t,i))}},clickEvent:function(t,o){function r(t){if(""!==u.radixPoint){var n=g().validPositions;if(n[t]===i||n[t].input===N(t)){if(t<E(-1))return!0;var o=e.inArray(u.radixPoint,T());if(-1!==o){for(var r in n)if(o<r&&n[r].input!==N(r))return!1;return!0}}}return!1}var s=this;setTimeout(function(){if(n.activeElement===s){var e=L(s);if(o&&(Q?e.end=e.begin:e.begin=e.end),e.begin===e.end)switch(u.positionCaretOnClick){case"none":break;case"radixFocus":if(r(e.begin)){var t=T().join("").indexOf(u.radixPoint);L(s,u.numericInput?E(t):t);break}default:var a=e.begin,l=v(a,!0),c=E(l);if(a<c)L(s,$(a,!0)||$(a-1,!0)?a:E(a));else{var d=g().validPositions[l],p=k(c,d?d.match.locator:i,d),f=N(c,p.match);if(""!==f&&T()[c]!==f&&!0!==p.match.optionalQuantifier&&!0!==p.match.newBlockMarker||!$(c,!0)&&p.match.def===f){var h=E(c);(a>=h||a===c)&&(c=h)}L(s,c)}}}},0)},dblclickEvent:function(e){var t=this;setTimeout(function(){L(t,0,E(v()))},0)},cutEvent:function(i){var r=this,s=e(r),a=L(r),l=i.originalEvent||i,u=t.clipboardData||l.clipboardData,c=Q?T().slice(a.end,a.begin):T().slice(a.begin,a.end);u.setData("text",Q?c.reverse().join(""):c.join("")),n.execCommand&&n.execCommand("copy"),z(r,o.keyCode.DELETE,a),j(r,T(),g().p,i,U!==T().join("")),r.inputmask._valueGet()===S().join("")&&s.trigger("cleared")},blurEvent:function(t){var n=e(this),o=this;if(o.inputmask){var r=o.inputmask._valueGet(),s=T().slice();""!==r&&(u.clearMaskOnLostFocus&&(-1===v()&&r===S().join("")?s=[]:H(s)),!1===q(s)&&(setTimeout(function(){n.trigger("incomplete")},0),u.clearIncomplete&&(m(),s=u.clearMaskOnLostFocus?[]:S().slice())),j(o,s,i,t)),U!==T().join("")&&(U=s.join(""),n.trigger("change"))}},mouseenterEvent:function(e){var t=this;te=!0,n.activeElement!==t&&u.showMaskOnHover&&t.inputmask._valueGet()!==T().join("")&&j(t,T())},submitEvent:function(e){U!==T().join("")&&V.trigger("change"),u.clearMaskOnLostFocus&&-1===v()&&Y.inputmask._valueGet&&Y.inputmask._valueGet()===S().join("")&&Y.inputmask._valueSet(""),u.removeMaskOnSubmit&&(Y.inputmask._valueSet(Y.inputmask.unmaskedvalue(),!0),setTimeout(function(){j(Y,T())},0))},resetEvent:function(e){Y.inputmask.refreshValue=!0,setTimeout(function(){V.trigger("setvalue")},0)}};o.prototype.positionColorMask=function(e,t){e.style.left=t.offsetLeft+"px"};var oe;if(r!==i)switch(r.action){case"isComplete":return Y=r.el,q(T());case"unmaskedvalue":return Y!==i&&r.value===i||(oe=r.value,oe=(e.isFunction(u.onBeforeMask)?u.onBeforeMask.call(X,oe,u)||oe:oe).split(""),I(i,!1,!1,Q?oe.reverse():oe),e.isFunction(u.onBeforeWrite)&&u.onBeforeWrite.call(X,i,T(),0,u)),F(Y);case"mask":!function(t){ne.off(t);var o=function(t,o){var r=t.getAttribute("type"),a="INPUT"===t.tagName&&-1!==e.inArray(r,o.supportsInputType)||t.isContentEditable||"TEXTAREA"===t.tagName;if(!a)if("INPUT"===t.tagName){var l=n.createElement("input");l.setAttribute("type",r),a="text"===l.type,l=null}else a="partial";return!1!==a?function(t){function r(){return this.inputmask?this.inputmask.opts.autoUnmask?this.inputmask.unmaskedvalue():-1!==v()||!0!==o.nullable?n.activeElement===this&&o.clearMaskOnLostFocus?(Q?H(T().slice()).reverse():H(T().slice())).join(""):l.call(this):"":l.call(this)}function a(t){u.call(this,t),this.inputmask&&e(this).trigger("setvalue")}var l,u;if(!t.inputmask.__valueGet){if(!0!==o.noValuePatching){if(Object.getOwnPropertyDescriptor){"function"!=typeof Object.getPrototypeOf&&(Object.getPrototypeOf="object"===s("test".__proto__)?function(e){return e.__proto__}:function(e){return e.constructor.prototype});var c=Object.getPrototypeOf?Object.getOwnPropertyDescriptor(Object.getPrototypeOf(t),"value"):i;c&&c.get&&c.set?(l=c.get,u=c.set,Object.defineProperty(t,"value",{get:r,set:a,configurable:!0})):"INPUT"!==t.tagName&&(l=function(){return this.textContent},u=function(e){this.textContent=e},Object.defineProperty(t,"value",{get:r,set:a,configurable:!0}))}else n.__lookupGetter__&&t.__lookupGetter__("value")&&(l=t.__lookupGetter__("value"),u=t.__lookupSetter__("value"),t.__defineGetter__("value",r),t.__defineSetter__("value",a));t.inputmask.__valueGet=l,t.inputmask.__valueSet=u}t.inputmask._valueGet=function(e){return Q&&!0!==e?l.call(this.el).split("").reverse().join(""):l.call(this.el)},t.inputmask._valueSet=function(e,t){u.call(this.el,null===e||e===i?"":!0!==t&&Q?e.split("").reverse().join(""):e)},l===i&&(l=function(){return this.value},u=function(e){this.value=e},function(t){if(e.valHooks&&(e.valHooks[t]===i||!0!==e.valHooks[t].inputmaskpatch)){var n=e.valHooks[t]&&e.valHooks[t].get?e.valHooks[t].get:function(e){return e.value},r=e.valHooks[t]&&e.valHooks[t].set?e.valHooks[t].set:function(e,t){return e.value=t,e};e.valHooks[t]={get:function(e){if(e.inputmask){if(e.inputmask.opts.autoUnmask)return e.inputmask.unmaskedvalue();var t=n(e);return-1!==v(i,i,e.inputmask.maskset.validPositions)||!0!==o.nullable?t:""}return n(e)},set:function(t,n){var i,o=e(t);return i=r(t,n),t.inputmask&&o.trigger("setvalue"),i},inputmaskpatch:!0}}}(t.type),function(t){ne.on(t,"mouseenter",function(t){var n=e(this);this.inputmask._valueGet()!==T().join("")&&n.trigger("setvalue")})}(t))}}(t):t.inputmask=i,a}(t,u);if(!1!==o&&(Y=t,V=e(Y),G=Y!==i?Y.maxLength:i,-1===G&&(G=i),!0===u.colorMask&&B(Y),f&&(Y.hasOwnProperty("inputmode")&&(Y.inputmode=u.inputmode,Y.setAttribute("inputmode",u.inputmode)),"rtfm"===u.androidHack&&(!0!==u.colorMask&&B(Y),Y.type="password")),!0===o&&(ne.on(Y,"submit",ie.submitEvent),ne.on(Y,"reset",ie.resetEvent),ne.on(Y,"mouseenter",ie.mouseenterEvent),ne.on(Y,"blur",ie.blurEvent),ne.on(Y,"focus",ie.focusEvent),ne.on(Y,"mouseleave",ie.mouseleaveEvent),!0!==u.colorMask&&ne.on(Y,"click",ie.clickEvent),ne.on(Y,"dblclick",ie.dblclickEvent),ne.on(Y,"paste",ie.pasteEvent),ne.on(Y,"dragdrop",ie.pasteEvent),ne.on(Y,"drop",ie.pasteEvent),ne.on(Y,"cut",ie.cutEvent),ne.on(Y,"complete",u.oncomplete),ne.on(Y,"incomplete",u.onincomplete),ne.on(Y,"cleared",u.oncleared),f||!0===u.inputEventOnly?Y.removeAttribute("maxLength"):(ne.on(Y,"keydown",ie.keydownEvent),ne.on(Y,"keypress",ie.keypressEvent)),ne.on(Y,"compositionstart",e.noop),ne.on(Y,"compositionupdate",e.noop),ne.on(Y,"compositionend",e.noop),ne.on(Y,"keyup",e.noop),ne.on(Y,"input",ie.inputFallBackEvent),ne.on(Y,"beforeinput",e.noop)),ne.on(Y,"setvalue",ie.setValueEvent),U=S().join(""),""!==Y.inputmask._valueGet(!0)||!1===u.clearMaskOnLostFocus||n.activeElement===Y)){var r=e.isFunction(u.onBeforeMask)?u.onBeforeMask.call(X,Y.inputmask._valueGet(!0),u)||Y.inputmask._valueGet(!0):Y.inputmask._valueGet(!0);""!==r&&I(Y,!0,!1,Q?r.split("").reverse():r.split(""));var a=T().slice();U=a.join(""),!1===q(a)&&u.clearIncomplete&&m(),u.clearMaskOnLostFocus&&n.activeElement!==Y&&(-1===v()?a=[]:H(a)),j(Y,a),n.activeElement===Y&&L(Y,E(v()))}}(Y);break;case"format":return oe=(e.isFunction(u.onBeforeMask)?u.onBeforeMask.call(X,r.value,u)||r.value:r.value).split(""),I(i,!0,!1,Q?oe.reverse():oe),r.metadata?{value:Q?T().slice().reverse().join(""):T().join(""),metadata:l.call(this,{action:"getmetadata"},a,u)}:Q?T().slice().reverse().join(""):T().join("");case"isValid":r.value?(oe=r.value.split(""),I(i,!0,!0,Q?oe.reverse():oe)):r.value=T().join("");for(var re=T(),se=R(),ae=re.length-1;ae>se&&!$(ae);ae--);return re.splice(se,ae+1-se),q(re)&&r.value===T().join("");case"getemptymask":return S().join("");case"remove":return Y&&Y.inputmask&&(V=e(Y),Y.inputmask._valueSet(u.autoUnmask?F(Y):Y.inputmask._valueGet(!0)),ne.off(Y),Object.getOwnPropertyDescriptor&&Object.getPrototypeOf?Object.getOwnPropertyDescriptor(Object.getPrototypeOf(Y),"value")&&Y.inputmask.__valueGet&&Object.defineProperty(Y,"value",{get:Y.inputmask.__valueGet,set:Y.inputmask.__valueSet,configurable:!0}):n.__lookupGetter__&&Y.__lookupGetter__("value")&&Y.inputmask.__valueGet&&(Y.__defineGetter__("value",Y.inputmask.__valueGet),Y.__defineSetter__("value",Y.inputmask.__valueSet)),Y.inputmask=i),Y;case"getmetadata":if(e.isArray(a.metadata)){var le=h(!0,0,!1).join("");return e.each(a.metadata,function(e,t){if(t.mask===le)return le=t,!1}),le}return a.metadata}}var u=navigator.userAgent,c=/mobile/i.test(u),d=/iemobile/i.test(u),p=/iphone/i.test(u)&&!d,f=/android/i.test(u)&&!d;return o.prototype={dataAttribute:"data-inputmask",defaults:{placeholder:"_",optionalmarker:{start:"[",end:"]"},quantifiermarker:{start:"{",end:"}"},groupmarker:{start:"(",end:")"},alternatormarker:"|",escapeChar:"\\",mask:null,regex:null,oncomplete:e.noop,onincomplete:e.noop,oncleared:e.noop,repeat:0,greedy:!0,autoUnmask:!1,removeMaskOnSubmit:!1,clearMaskOnLostFocus:!0,insertMode:!0,clearIncomplete:!1,alias:null,onKeyDown:e.noop,onBeforeMask:null,onBeforePaste:function(t,n){return e.isFunction(n.onBeforeMask)?n.onBeforeMask.call(this,t,n):t},onBeforeWrite:null,onUnMask:null,showMaskOnFocus:!0,showMaskOnHover:!0,onKeyValidation:e.noop,skipOptionalPartCharacter:" ",numericInput:!1,rightAlign:!1,undoOnEscape:!0,radixPoint:"",radixPointDefinitionSymbol:i,groupSeparator:"",keepStatic:null,positionCaretOnTab:!0,tabThrough:!1,supportsInputType:["text","tel","password"],ignorables:[8,9,13,19,27,33,34,35,36,37,38,39,40,45,46,93,112,113,114,115,116,117,118,119,120,121,122,123,0,229],isComplete:null,canClearPosition:e.noop,preValidation:null,postValidation:null,staticDefinitionSymbol:i,jitMasking:!1,nullable:!0,inputEventOnly:!1,noValuePatching:!1,positionCaretOnClick:"lvp",casing:null,inputmode:"verbatim",colorMask:!1,androidHack:!1,importDataAttributes:!0},definitions:{9:{validator:"[0-9１-９]",cardinality:1,definitionSymbol:"*"},a:{validator:"[A-Za-zА-яЁёÀ-ÿµ]",cardinality:1,definitionSymbol:"*"},"*":{validator:"[0-9１-９A-Za-zА-яЁёÀ-ÿµ]",cardinality:1}},aliases:{},masksCache:{},mask:function(s){function u(n,o,s,a){if(!0===o.importDataAttributes){var l,u,c,d,p=function(e,o){null!==(o=o!==i?o:n.getAttribute(a+"-"+e))&&("string"==typeof o&&(0===e.indexOf("on")?o=t[o]:"false"===o?o=!1:"true"===o&&(o=!0)),s[e]=o)},f=n.getAttribute(a);if(f&&""!==f&&(f=f.replace(new RegExp("'","g"),'"'),u=JSON.parse("{"+f+"}")),u){c=i;for(d in u)if("alias"===d.toLowerCase()){c=u[d];break}}p("alias",c),s.alias&&r(s.alias,s,o);for(l in o){if(u){c=i;for(d in u)if(d.toLowerCase()===l.toLowerCase()){c=u[d];break}}p(l,c)}}return e.extend(!0,o,s),("rtl"===n.dir||o.rightAlign)&&(n.style.textAlign="right"),("rtl"===n.dir||o.numericInput)&&(n.dir="ltr",n.removeAttribute("dir"),o.isRTL=!0),o}var c=this;return"string"==typeof s&&(s=n.getElementById(s)||n.querySelectorAll(s)),s=s.nodeName?[s]:s,e.each(s,function(t,n){var r=e.extend(!0,{},c.opts);u(n,r,e.extend(!0,{},c.userOptions),c.dataAttribute);var s=a(r,c.noMasksCache);s!==i&&(n.inputmask!==i&&(n.inputmask.opts.autoUnmask=!0,n.inputmask.remove()),n.inputmask=new o(i,i,(!0)),n.inputmask.opts=r,n.inputmask.noMasksCache=c.noMasksCache,n.inputmask.userOptions=e.extend(!0,{},c.userOptions),n.inputmask.isRTL=r.isRTL||r.numericInput,n.inputmask.el=n,n.inputmask.maskset=s,e.data(n,"_inputmask_opts",r),l.call(n.inputmask,{action:"mask"}))}),s&&s[0]?s[0].inputmask||this:this},option:function(t,n){return"string"==typeof t?this.opts[t]:"object"===(void 0===t?"undefined":s(t))?(e.extend(this.userOptions,t),this.el&&!0!==n&&this.mask(this.el),this):void 0},unmaskedvalue:function(e){return this.maskset=this.maskset||a(this.opts,this.noMasksCache),l.call(this,{action:"unmaskedvalue",value:e})},remove:function(){return l.call(this,{action:"remove"})},getemptymask:function(){return this.maskset=this.maskset||a(this.opts,this.noMasksCache),l.call(this,{action:"getemptymask"})},hasMaskedValue:function(){return!this.opts.autoUnmask},isComplete:function(){return this.maskset=this.maskset||a(this.opts,this.noMasksCache),l.call(this,{action:"isComplete"})},getmetadata:function(){return this.maskset=this.maskset||a(this.opts,this.noMasksCache),l.call(this,{action:"getmetadata"})},isValid:function(e){return this.maskset=this.maskset||a(this.opts,this.noMasksCache),l.call(this,{action:"isValid",value:e})},format:function(e,t){return this.maskset=this.maskset||a(this.opts,this.noMasksCache),l.call(this,{action:"format",value:e,metadata:t})},analyseMask:function(t,n,r){function s(e,t,n,i){this.matches=[],this.openGroup=e||!1,this.alternatorGroup=!1,this.isGroup=e||!1,this.isOptional=t||!1,this.isQuantifier=n||!1,this.isAlternator=i||!1,this.quantifier={min:1,max:1}}function a(t,s,a){a=a!==i?a:t.matches.length;var l=t.matches[a-1];if(n)0===s.indexOf("[")||k&&/\\d|\\s|\\w]/i.test(s)||"."===s?t.matches.splice(a++,0,{fn:new RegExp(s,r.casing?"i":""),cardinality:1,optionality:t.isOptional,newBlockMarker:l===i||l.def!==s,casing:null,def:s,placeholder:i,nativeDef:s}):(k&&(s=s[s.length-1]),e.each(s.split(""),function(e,n){l=t.matches[a-1],t.matches.splice(a++,0,{fn:null,cardinality:0,optionality:t.isOptional,newBlockMarker:l===i||l.def!==n&&null!==l.fn,casing:null,def:r.staticDefinitionSymbol||n,placeholder:r.staticDefinitionSymbol!==i?n:i,nativeDef:n})})),k=!1;else{var u=(r.definitions?r.definitions[s]:i)||o.prototype.definitions[s];if(u&&!k){for(var c=u.prevalidator,d=c?c.length:0,p=1;p<u.cardinality;p++){var f=d>=p?c[p-1]:[],h=f.validator,g=f.cardinality;t.matches.splice(a++,0,{fn:h?"string"==typeof h?new RegExp(h,r.casing?"i":""):new function(){this.test=h}:new RegExp("."),cardinality:g||1,optionality:t.isOptional,newBlockMarker:l===i||l.def!==(u.definitionSymbol||s),casing:u.casing,def:u.definitionSymbol||s,placeholder:u.placeholder,nativeDef:s}),l=t.matches[a-1]}t.matches.splice(a++,0,{fn:u.validator?"string"==typeof u.validator?new RegExp(u.validator,r.casing?"i":""):new function(){this.test=u.validator}:new RegExp("."),cardinality:u.cardinality,optionality:t.isOptional,newBlockMarker:l===i||l.def!==(u.definitionSymbol||s),casing:u.casing,def:u.definitionSymbol||s,placeholder:u.placeholder,nativeDef:s})}else t.matches.splice(a++,0,{fn:null,cardinality:0,optionality:t.isOptional,newBlockMarker:l===i||l.def!==s&&null!==l.fn,casing:null,def:r.staticDefinitionSymbol||s,placeholder:r.staticDefinitionSymbol!==i?s:i,nativeDef:s}),k=!1}}function l(t){t&&t.matches&&e.each(t.matches,function(e,o){var s=t.matches[e+1];(s===i||s.matches===i||!1===s.isQuantifier)&&o&&o.isGroup&&(o.isGroup=!1,n||(a(o,r.groupmarker.start,0),!0!==o.openGroup&&a(o,r.groupmarker.end))),l(o)})}function u(){if(x.length>0){if(h=x[x.length-1],a(h,p),h.isAlternator){g=x.pop();for(var e=0;e<g.matches.length;e++)g.matches[e].isGroup=!1;x.length>0?(h=x[x.length-1],h.matches.push(g)):w.matches.push(g)}}else a(w,p)}function c(e){e.matches=e.matches.reverse();for(var t in e.matches)if(e.matches.hasOwnProperty(t)){var n=parseInt(t);if(e.matches[t].isQuantifier&&e.matches[n+1]&&e.matches[n+1].isGroup){var o=e.matches[t];e.matches.splice(t,1),e.matches.splice(n+1,0,o)}e.matches[t].matches!==i?e.matches[t]=c(e.matches[t]):e.matches[t]=function(e){return e===r.optionalmarker.start?e=r.optionalmarker.end:e===r.optionalmarker.end?e=r.optionalmarker.start:e===r.groupmarker.start?e=r.groupmarker.end:e===r.groupmarker.end&&(e=r.groupmarker.start),e}(e.matches[t])}return e}var d,p,f,h,g,m,v,y=/(?:[?*+]|\{[0-9\+\*]+(?:,[0-9\+\*]*)?\})|[^.?*+^${[]()|\\]+|./g,b=/\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g,k=!1,w=new s,x=[],C=[];for(n&&(r.optionalmarker.start=i,r.optionalmarker.end=i);d=n?b.exec(t):y.exec(t);){if(p=d[0],n)switch(p.charAt(0)){case"?":p="{0,1}";break;case"+":case"*":p="{"+p+"}"}if(k)u();else switch(p.charAt(0)){case r.escapeChar:k=!0,n&&u();break;case r.optionalmarker.end:case r.groupmarker.end:if(f=x.pop(),f.openGroup=!1,f!==i)if(x.length>0){if(h=x[x.length-1],h.matches.push(f),h.isAlternator){g=x.pop();for(var S=0;S<g.matches.length;S++)g.matches[S].isGroup=!1,g.matches[S].alternatorGroup=!1;x.length>0?(h=x[x.length-1],h.matches.push(g)):w.matches.push(g)}}else w.matches.push(f);else u();break;case r.optionalmarker.start:x.push(new s((!1),(!0)));break;case r.groupmarker.start:x.push(new s((!0)));break;case r.quantifiermarker.start:var T=new s((!1),(!1),(!0));p=p.replace(/[{}]/g,"");var _=p.split(","),O=isNaN(_[0])?_[0]:parseInt(_[0]),P=1===_.length?O:isNaN(_[1])?_[1]:parseInt(_[1]);if("*"!==P&&"+"!==P||(O="*"===P?0:1),T.quantifier={min:O,max:P},x.length>0){var A=x[x.length-1].matches;d=A.pop(),d.isGroup||(v=new s((!0)),v.matches.push(d),d=v),A.push(d),A.push(T)}else d=w.matches.pop(),d.isGroup||(n&&null===d.fn&&"."===d.def&&(d.fn=new RegExp(d.def,r.casing?"i":"")),v=new s((!0)),v.matches.push(d),d=v),w.matches.push(d),w.matches.push(T);break;case r.alternatormarker:if(x.length>0){h=x[x.length-1];var $=h.matches[h.matches.length-1];m=h.openGroup&&($.matches===i||!1===$.isGroup&&!1===$.isAlternator)?x.pop():h.matches.pop()}else m=w.matches.pop();if(m.isAlternator)x.push(m);else if(m.alternatorGroup?(g=x.pop(),m.alternatorGroup=!1):g=new s((!1),(!1),(!1),(!0)),g.matches.push(m),x.push(g),m.openGroup){m.openGroup=!1;var E=new s((!0));E.alternatorGroup=!0,x.push(E)}break;default:u()}}for(;x.length>0;)f=x.pop(),w.matches.push(f);return w.matches.length>0&&(l(w),C.push(w)),(r.numericInput||r.isRTL)&&c(C[0]),C}},o.extendDefaults=function(t){e.extend(!0,o.prototype.defaults,t)},o.extendDefinitions=function(t){e.extend(!0,o.prototype.definitions,t)},o.extendAliases=function(t){e.extend(!0,o.prototype.aliases,t)},o.format=function(e,t,n){return o(t).format(e,n)},o.unmask=function(e,t){return o(t).unmaskedvalue(e)},o.isValid=function(e,t){return o(t).isValid(e)},o.remove=function(t){e.each(t,function(e,t){t.inputmask&&t.inputmask.remove()})},o.escapeRegex=function(e){var t=["/",".","*","+","?","|","(",")","[","]","{","}","\\","$","^"];return e.replace(new RegExp("(\\"+t.join("|\\")+")","gim"),"\\$1")},o.keyCode={ALT:18,BACKSPACE:8,BACKSPACE_SAFARI:127,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91,X:88},o})},function(e,t){e.exports=jQuery},function(e,t,n){"use strict";var i,o,r;"function"==typeof Symbol&&Symbol.iterator,!function(s){o=[n(0),n(1)],i=s,void 0!==(r="function"==typeof i?i.apply(t,o):i)&&(e.exports=r)}(function(e,t){function n(e){return isNaN(e)||29===new Date(e,2,0).getDate()}return t.extendAliases({"dd/mm/yyyy":{mask:"1/2/y",placeholder:"dd/mm/yyyy",regex:{val1pre:new RegExp("[0-3]"),val1:new RegExp("0[1-9]|[12][0-9]|3[01]"),val2pre:function(e){var n=t.escapeRegex.call(this,e);return new RegExp("((0[1-9]|[12][0-9]|3[01])"+n+"[01])")},val2:function(e){var n=t.escapeRegex.call(this,e);return new RegExp("((0[1-9]|[12][0-9])"+n+"(0[1-9]|1[012]))|(30"+n+"(0[13-9]|1[012]))|(31"+n+"(0[13578]|1[02]))")}},leapday:"29/02/",separator:"/",yearrange:{minyear:1900,maxyear:2099},isInYearRange:function(e,t,n){if(isNaN(e))return!1;var i=parseInt(e.concat(t.toString().slice(e.length))),o=parseInt(e.concat(n.toString().slice(e.length)));return!isNaN(i)&&t<=i&&i<=n||!isNaN(o)&&t<=o&&o<=n},determinebaseyear:function(e,t,n){var i=(new Date).getFullYear();if(e>i)return e;if(t<i){for(var o=t.toString().slice(0,2),r=t.toString().slice(2,4);t<o+n;)o--;var s=o+r;return e>s?e:s}if(e<=i&&i<=t){for(var a=i.toString().slice(0,2);t<a+n;)a--;var l=a+n;return l<e?e:l}return i},onKeyDown:function(n,i,o,r){var s=e(this);if(n.ctrlKey&&n.keyCode===t.keyCode.RIGHT){var a=new Date;s.val(a.getDate().toString()+(a.getMonth()+1).toString()+a.getFullYear().toString()),s.trigger("setvalue")}},getFrontValue:function(e,t,n){for(var i=0,o=0,r=0;r<e.length&&"2"!==e.charAt(r);r++){var s=n.definitions[e.charAt(r)];s?(i+=o,o=s.cardinality):o++}return t.join("").substr(i,o)},postValidation:function(e,t,i){var o,r,s=e.join("");return 0===i.mask.indexOf("y")?(r=s.substr(0,4),o=s.substring(4,10)):(r=s.substring(6,10),o=s.substr(0,6)),t&&(o!==i.leapday||n(r))},definitions:{1:{validator:function(e,t,n,i,o){if("3"==e.charAt(0)&&new RegExp("[2-9]").test(e.charAt(1)))return e="30",t.buffer[n]="0",n++,{pos:n};var r=o.regex.val1.test(e);return i||r||e.charAt(1)!==o.separator&&-1==="-./".indexOf(e.charAt(1))||!(r=o.regex.val1.test("0"+e.charAt(0)))?r:(t.buffer[n-1]="0",{refreshFromBuffer:{start:n-1,end:n},pos:n,c:e.charAt(0)})},cardinality:2,prevalidator:[{validator:function(e,t,n,i,o){var r=e;isNaN(t.buffer[n+1])||(r+=t.buffer[n+1]);var s=1===r.length?o.regex.val1pre.test(r):o.regex.val1.test(r);if(!i&&!s){if(s=o.regex.val1.test(e+"0"))return t.buffer[n]=e,t.buffer[++n]="0",{pos:n,c:"0"};if(s=o.regex.val1.test("0"+e))return t.buffer[n]="0",n++,{pos:n}}return s},cardinality:1}]},2:{validator:function(e,t,n,i,o){var r=o.getFrontValue(t.mask,t.buffer,o);if(-1!==r.indexOf(o.placeholder[0])&&(r="01"+o.separator),"1"==e.charAt(0)&&new RegExp("[3-9]").test(e.charAt(1)))return e="10",t.buffer[n]="0",n++,{pos:n};var s=o.regex.val2(o.separator).test(r+e);return i||s||e.charAt(1)!==o.separator&&-1==="-./".indexOf(e.charAt(1))||!(s=o.regex.val2(o.separator).test(r+"0"+e.charAt(0)))?s:(t.buffer[n-1]="0",{refreshFromBuffer:{start:n-1,end:n},pos:n,c:e.charAt(0)})},cardinality:2,prevalidator:[{validator:function(e,t,n,i,o){isNaN(t.buffer[n+1])||(e+=t.buffer[n+1]);var r=o.getFrontValue(t.mask,t.buffer,o);-1!==r.indexOf(o.placeholder[0])&&(r="01"+o.separator);var s=1===e.length?o.regex.val2pre(o.separator).test(r+e):o.regex.val2(o.separator).test(r+e);return i||s||!(s=o.regex.val2(o.separator).test(r+"0"+e))?s:(t.buffer[n]="0",n++,{pos:n})},cardinality:1}]},y:{validator:function(e,t,n,i,o){return o.isInYearRange(e,o.yearrange.minyear,o.yearrange.maxyear)},cardinality:4,prevalidator:[{validator:function(e,t,n,i,o){var r=o.isInYearRange(e,o.yearrange.minyear,o.yearrange.maxyear);if(!i&&!r){var s=o.determinebaseyear(o.yearrange.minyear,o.yearrange.maxyear,e+"0").toString().slice(0,1);if(r=o.isInYearRange(s+e,o.yearrange.minyear,o.yearrange.maxyear))return t.buffer[n++]=s.charAt(0),{pos:n};if(s=o.determinebaseyear(o.yearrange.minyear,o.yearrange.maxyear,e+"0").toString().slice(0,2),r=o.isInYearRange(s+e,o.yearrange.minyear,o.yearrange.maxyear))return t.buffer[n++]=s.charAt(0),t.buffer[n++]=s.charAt(1),{pos:n}}return r},cardinality:1},{validator:function(e,t,n,i,o){var r=o.isInYearRange(e,o.yearrange.minyear,o.yearrange.maxyear);if(!i&&!r){var s=o.determinebaseyear(o.yearrange.minyear,o.yearrange.maxyear,e).toString().slice(0,2);if(r=o.isInYearRange(e[0]+s[1]+e[1],o.yearrange.minyear,o.yearrange.maxyear))return t.buffer[n++]=s.charAt(1),{pos:n};if(s=o.determinebaseyear(o.yearrange.minyear,o.yearrange.maxyear,e).toString().slice(0,2),r=o.isInYearRange(s+e,o.yearrange.minyear,o.yearrange.maxyear))return t.buffer[n-1]=s.charAt(0),t.buffer[n++]=s.charAt(1),t.buffer[n++]=e.charAt(0),{refreshFromBuffer:{start:n-3,end:n},pos:n}}return r},cardinality:2},{validator:function(e,t,n,i,o){return o.isInYearRange(e,o.yearrange.minyear,o.yearrange.maxyear)},cardinality:3}]}},insertMode:!1,autoUnmask:!1},"mm/dd/yyyy":{placeholder:"mm/dd/yyyy",alias:"dd/mm/yyyy",regex:{val2pre:function(e){var n=t.escapeRegex.call(this,e);return new RegExp("((0[13-9]|1[012])"+n+"[0-3])|(02"+n+"[0-2])")},val2:function(e){var n=t.escapeRegex.call(this,e);return new RegExp("((0[1-9]|1[012])"+n+"(0[1-9]|[12][0-9]))|((0[13-9]|1[012])"+n+"30)|((0[13578]|1[02])"+n+"31)")},val1pre:new RegExp("[01]"),val1:new RegExp("0[1-9]|1[012]")},leapday:"02/29/",onKeyDown:function(n,i,o,r){var s=e(this);if(n.ctrlKey&&n.keyCode===t.keyCode.RIGHT){var a=new Date;s.val((a.getMonth()+1).toString()+a.getDate().toString()+a.getFullYear().toString()),s.trigger("setvalue")}}},"yyyy/mm/dd":{mask:"y/1/2",
placeholder:"yyyy/mm/dd",alias:"mm/dd/yyyy",leapday:"/02/29",onKeyDown:function(n,i,o,r){var s=e(this);if(n.ctrlKey&&n.keyCode===t.keyCode.RIGHT){var a=new Date;s.val(a.getFullYear().toString()+(a.getMonth()+1).toString()+a.getDate().toString()),s.trigger("setvalue")}}},"dd.mm.yyyy":{mask:"1.2.y",placeholder:"dd.mm.yyyy",leapday:"29.02.",separator:".",alias:"dd/mm/yyyy"},"dd-mm-yyyy":{mask:"1-2-y",placeholder:"dd-mm-yyyy",leapday:"29-02-",separator:"-",alias:"dd/mm/yyyy"},"mm.dd.yyyy":{mask:"1.2.y",placeholder:"mm.dd.yyyy",leapday:"02.29.",separator:".",alias:"mm/dd/yyyy"},"mm-dd-yyyy":{mask:"1-2-y",placeholder:"mm-dd-yyyy",leapday:"02-29-",separator:"-",alias:"mm/dd/yyyy"},"yyyy.mm.dd":{mask:"y.1.2",placeholder:"yyyy.mm.dd",leapday:".02.29",separator:".",alias:"yyyy/mm/dd"},"yyyy-mm-dd":{mask:"y-1-2",placeholder:"yyyy-mm-dd",leapday:"-02-29",separator:"-",alias:"yyyy/mm/dd"},datetime:{mask:"1/2/y h:s",placeholder:"dd/mm/yyyy hh:mm",alias:"dd/mm/yyyy",regex:{hrspre:new RegExp("[012]"),hrs24:new RegExp("2[0-4]|1[3-9]"),hrs:new RegExp("[01][0-9]|2[0-4]"),ampm:new RegExp("^[a|p|A|P][m|M]"),mspre:new RegExp("[0-5]"),ms:new RegExp("[0-5][0-9]")},timeseparator:":",hourFormat:"24",definitions:{h:{validator:function(e,t,n,i,o){if("24"===o.hourFormat&&24===parseInt(e,10))return t.buffer[n-1]="0",t.buffer[n]="0",{refreshFromBuffer:{start:n-1,end:n},c:"0"};var r=o.regex.hrs.test(e);if(!i&&!r&&(e.charAt(1)===o.timeseparator||-1!=="-.:".indexOf(e.charAt(1)))&&(r=o.regex.hrs.test("0"+e.charAt(0))))return t.buffer[n-1]="0",t.buffer[n]=e.charAt(0),n++,{refreshFromBuffer:{start:n-2,end:n},pos:n,c:o.timeseparator};if(r&&"24"!==o.hourFormat&&o.regex.hrs24.test(e)){var s=parseInt(e,10);return 24===s?(t.buffer[n+5]="a",t.buffer[n+6]="m"):(t.buffer[n+5]="p",t.buffer[n+6]="m"),s-=12,s<10?(t.buffer[n]=s.toString(),t.buffer[n-1]="0"):(t.buffer[n]=s.toString().charAt(1),t.buffer[n-1]=s.toString().charAt(0)),{refreshFromBuffer:{start:n-1,end:n+6},c:t.buffer[n]}}return r},cardinality:2,prevalidator:[{validator:function(e,t,n,i,o){var r=o.regex.hrspre.test(e);return i||r||!(r=o.regex.hrs.test("0"+e))?r:(t.buffer[n]="0",n++,{pos:n})},cardinality:1}]},s:{validator:"[0-5][0-9]",cardinality:2,prevalidator:[{validator:function(e,t,n,i,o){var r=o.regex.mspre.test(e);return i||r||!(r=o.regex.ms.test("0"+e))?r:(t.buffer[n]="0",n++,{pos:n})},cardinality:1}]},t:{validator:function(e,t,n,i,o){return o.regex.ampm.test(e+"m")},casing:"lower",cardinality:1}},insertMode:!1,autoUnmask:!1},datetime12:{mask:"1/2/y h:s t\\m",placeholder:"dd/mm/yyyy hh:mm xm",alias:"datetime",hourFormat:"12"},"mm/dd/yyyy hh:mm xm":{mask:"1/2/y h:s t\\m",placeholder:"mm/dd/yyyy hh:mm xm",alias:"datetime12",regex:{val2pre:function(e){var n=t.escapeRegex.call(this,e);return new RegExp("((0[13-9]|1[012])"+n+"[0-3])|(02"+n+"[0-2])")},val2:function(e){var n=t.escapeRegex.call(this,e);return new RegExp("((0[1-9]|1[012])"+n+"(0[1-9]|[12][0-9]))|((0[13-9]|1[012])"+n+"30)|((0[13578]|1[02])"+n+"31)")},val1pre:new RegExp("[01]"),val1:new RegExp("0[1-9]|1[012]")},leapday:"02/29/",onKeyDown:function(n,i,o,r){var s=e(this);if(n.ctrlKey&&n.keyCode===t.keyCode.RIGHT){var a=new Date;s.val((a.getMonth()+1).toString()+a.getDate().toString()+a.getFullYear().toString()),s.trigger("setvalue")}}},"hh:mm t":{mask:"h:s t\\m",placeholder:"hh:mm xm",alias:"datetime",hourFormat:"12"},"h:s t":{mask:"h:s t\\m",placeholder:"hh:mm xm",alias:"datetime",hourFormat:"12"},"hh:mm:ss":{mask:"h:s:s",placeholder:"hh:mm:ss",alias:"datetime",autoUnmask:!1},"hh:mm":{mask:"h:s",placeholder:"hh:mm",alias:"datetime",autoUnmask:!1},date:{alias:"dd/mm/yyyy"},"mm/yyyy":{mask:"1/y",placeholder:"mm/yyyy",leapday:"donotuse",separator:"/",alias:"mm/dd/yyyy"},shamsi:{regex:{val2pre:function(e){var n=t.escapeRegex.call(this,e);return new RegExp("((0[1-9]|1[012])"+n+"[0-3])")},val2:function(e){var n=t.escapeRegex.call(this,e);return new RegExp("((0[1-9]|1[012])"+n+"(0[1-9]|[12][0-9]))|((0[1-9]|1[012])"+n+"30)|((0[1-6])"+n+"31)")},val1pre:new RegExp("[01]"),val1:new RegExp("0[1-9]|1[012]")},yearrange:{minyear:1300,maxyear:1499},mask:"y/1/2",leapday:"/12/30",placeholder:"yyyy/mm/dd",alias:"mm/dd/yyyy",clearIncomplete:!0},"yyyy-mm-dd hh:mm:ss":{mask:"y-1-2 h:s:s",placeholder:"yyyy-mm-dd hh:mm:ss",alias:"datetime",separator:"-",leapday:"-02-29",regex:{val2pre:function(e){var n=t.escapeRegex.call(this,e);return new RegExp("((0[13-9]|1[012])"+n+"[0-3])|(02"+n+"[0-2])")},val2:function(e){var n=t.escapeRegex.call(this,e);return new RegExp("((0[1-9]|1[012])"+n+"(0[1-9]|[12][0-9]))|((0[13-9]|1[012])"+n+"30)|((0[13578]|1[02])"+n+"31)")},val1pre:new RegExp("[01]"),val1:new RegExp("0[1-9]|1[012]")},onKeyDown:function(e,t,n,i){}}}),t})},function(e,t,n){"use strict";var i,o,r;"function"==typeof Symbol&&Symbol.iterator,!function(s){o=[n(0),n(1)],i=s,void 0!==(r="function"==typeof i?i.apply(t,o):i)&&(e.exports=r)}(function(e,t){return t.extendDefinitions({A:{validator:"[A-Za-zА-яЁёÀ-ÿµ]",cardinality:1,casing:"upper"},"&":{validator:"[0-9A-Za-zА-яЁёÀ-ÿµ]",cardinality:1,casing:"upper"},"#":{validator:"[0-9A-Fa-f]",cardinality:1,casing:"upper"}}),t.extendAliases({url:{definitions:{i:{validator:".",cardinality:1}},mask:"(\\http://)|(\\http\\s://)|(ftp://)|(ftp\\s://)i{+}",insertMode:!1,autoUnmask:!1,inputmode:"url"},ip:{mask:"i[i[i]].i[i[i]].i[i[i]].i[i[i]]",definitions:{i:{validator:function(e,t,n,i,o){return n-1>-1&&"."!==t.buffer[n-1]?(e=t.buffer[n-1]+e,e=n-2>-1&&"."!==t.buffer[n-2]?t.buffer[n-2]+e:"0"+e):e="00"+e,new RegExp("25[0-5]|2[0-4][0-9]|[01][0-9][0-9]").test(e)},cardinality:1}},onUnMask:function(e,t,n){return e},inputmode:"numeric"},email:{mask:"*{1,64}[.*{1,64}][.*{1,64}][.*{1,63}]@-{1,63}.-{1,63}[.-{1,63}][.-{1,63}]",greedy:!1,onBeforePaste:function(e,t){return e=e.toLowerCase(),e.replace("mailto:","")},definitions:{"*":{validator:"[0-9A-Za-z!#$%&'*+/=?^_`{|}~-]",cardinality:1,casing:"lower"},"-":{validator:"[0-9A-Za-z-]",cardinality:1,casing:"lower"}},onUnMask:function(e,t,n){return e},inputmode:"email"},mac:{mask:"##:##:##:##:##:##"},vin:{mask:"V{13}9{4}",definitions:{V:{validator:"[A-HJ-NPR-Za-hj-npr-z\\d]",cardinality:1,casing:"upper"}},clearIncomplete:!0,autoUnmask:!0}}),t})},function(e,t,n){"use strict";var i,o,r;"function"==typeof Symbol&&Symbol.iterator,!function(s){o=[n(0),n(1)],i=s,void 0!==(r="function"==typeof i?i.apply(t,o):i)&&(e.exports=r)}(function(e,t,n){function i(e,n){for(var i="",o=0;o<e.length;o++)i+=t.prototype.definitions[e.charAt(o)]||n.definitions[e.charAt(o)]||n.optionalmarker.start===e.charAt(o)||n.optionalmarker.end===e.charAt(o)||n.quantifiermarker.start===e.charAt(o)||n.quantifiermarker.end===e.charAt(o)||n.groupmarker.start===e.charAt(o)||n.groupmarker.end===e.charAt(o)||n.alternatormarker===e.charAt(o)?"\\"+e.charAt(o):e.charAt(o);return i}return t.extendAliases({numeric:{mask:function(e){if(0!==e.repeat&&isNaN(e.integerDigits)&&(e.integerDigits=e.repeat),e.repeat=0,e.groupSeparator===e.radixPoint&&e.digits&&"0"!==e.digits&&("."===e.radixPoint?e.groupSeparator=",":","===e.radixPoint?e.groupSeparator=".":e.groupSeparator="")," "===e.groupSeparator&&(e.skipOptionalPartCharacter=n),e.autoGroup=e.autoGroup&&""!==e.groupSeparator,e.autoGroup&&("string"==typeof e.groupSize&&isFinite(e.groupSize)&&(e.groupSize=parseInt(e.groupSize)),isFinite(e.integerDigits))){var t=Math.floor(e.integerDigits/e.groupSize),o=e.integerDigits%e.groupSize;e.integerDigits=parseInt(e.integerDigits)+(0===o?t-1:t),e.integerDigits<1&&(e.integerDigits="*")}e.placeholder.length>1&&(e.placeholder=e.placeholder.charAt(0)),"radixFocus"===e.positionCaretOnClick&&""===e.placeholder&&!1===e.integerOptional&&(e.positionCaretOnClick="lvp"),e.definitions[";"]=e.definitions["~"],e.definitions[";"].definitionSymbol="~",!0===e.numericInput&&(e.positionCaretOnClick="radixFocus"===e.positionCaretOnClick?"lvp":e.positionCaretOnClick,e.digitsOptional=!1,isNaN(e.digits)&&(e.digits=2),e.decimalProtect=!1);var r="[+]";if(r+=i(e.prefix,e),r+=!0===e.integerOptional?"~{1,"+e.integerDigits+"}":"~{"+e.integerDigits+"}",e.digits!==n){e.radixPointDefinitionSymbol=e.decimalProtect?":":e.radixPoint;var s=e.digits.toString().split(",");isFinite(s[0]&&s[1]&&isFinite(s[1]))?r+=e.radixPointDefinitionSymbol+";{"+e.digits+"}":(isNaN(e.digits)||parseInt(e.digits)>0)&&(r+=e.digitsOptional?"["+e.radixPointDefinitionSymbol+";{1,"+e.digits+"}]":e.radixPointDefinitionSymbol+";{"+e.digits+"}")}return r+=i(e.suffix,e),r+="[-]",e.greedy=!1,r},placeholder:"",greedy:!1,digits:"*",digitsOptional:!0,enforceDigitsOnBlur:!1,radixPoint:".",positionCaretOnClick:"radixFocus",groupSize:3,groupSeparator:"",autoGroup:!1,allowMinus:!0,negationSymbol:{front:"-",back:""},integerDigits:"+",integerOptional:!0,prefix:"",suffix:"",rightAlign:!0,decimalProtect:!0,min:null,max:null,step:1,insertMode:!0,autoUnmask:!1,unmaskAsNumber:!1,inputmode:"numeric",preValidation:function(t,i,o,r,s){if("-"===o||o===s.negationSymbol.front)return!0===s.allowMinus&&(s.isNegative=s.isNegative===n||!s.isNegative,""===t.join("")||{caret:i,dopost:!0});if(!1===r&&o===s.radixPoint&&s.digits!==n&&(isNaN(s.digits)||parseInt(s.digits)>0)){var a=e.inArray(s.radixPoint,t);if(-1!==a)return!0===s.numericInput?i===a:{caret:a+1}}return!0},postValidation:function(i,o,r){var s=r.suffix.split(""),a=r.prefix.split("");if(o.pos===n&&o.caret!==n&&!0!==o.dopost)return o;var l=o.caret!==n?o.caret:o.pos,u=i.slice();r.numericInput&&(l=u.length-l-1,u=u.reverse());var c=u[l];if(c===r.groupSeparator&&(l+=1,c=u[l]),l===u.length-r.suffix.length-1&&c===r.radixPoint)return o;c!==n&&c!==r.radixPoint&&c!==r.negationSymbol.front&&c!==r.negationSymbol.back&&(u[l]="?",r.prefix.length>0&&l>=(!1===r.isNegative?1:0)&&l<r.prefix.length-1+(!1===r.isNegative?1:0)?a[l-(!1===r.isNegative?1:0)]="?":r.suffix.length>0&&l>=u.length-r.suffix.length-(!1===r.isNegative?1:0)&&(s[l-(u.length-r.suffix.length-(!1===r.isNegative?1:0))]="?")),a=a.join(""),s=s.join("");var d=u.join("").replace(a,"");if(d=d.replace(s,""),d=d.replace(new RegExp(t.escapeRegex(r.groupSeparator),"g"),""),d=d.replace(new RegExp("[-"+t.escapeRegex(r.negationSymbol.front)+"]","g"),""),d=d.replace(new RegExp(t.escapeRegex(r.negationSymbol.back)+"$"),""),isNaN(r.placeholder)&&(d=d.replace(new RegExp(t.escapeRegex(r.placeholder),"g"),"")),d.length>1&&1!==d.indexOf(r.radixPoint)&&("0"===c&&(d=d.replace(/^\?/g,"")),d=d.replace(/^0/g,"")),d.charAt(0)===r.radixPoint&&""!==r.radixPoint&&!0!==r.numericInput&&(d="0"+d),""!==d){if(d=d.split(""),(!r.digitsOptional||r.enforceDigitsOnBlur&&"blur"===o.event)&&isFinite(r.digits)){var p=e.inArray(r.radixPoint,d),f=e.inArray(r.radixPoint,u);-1===p&&(d.push(r.radixPoint),p=d.length-1);for(var h=1;h<=r.digits;h++)r.digitsOptional&&(!r.enforceDigitsOnBlur||"blur"!==o.event)||d[p+h]!==n&&d[p+h]!==r.placeholder.charAt(0)?-1!==f&&u[f+h]!==n&&(d[p+h]=d[p+h]||u[f+h]):d[p+h]=o.placeholder||r.placeholder.charAt(0)}if(!0!==r.autoGroup||""===r.groupSeparator||c===r.radixPoint&&o.pos===n&&!o.dopost)d=d.join("");else{var g=d[d.length-1]===r.radixPoint&&o.c===r.radixPoint;d=t(function(e,t){var n="";if(n+="("+t.groupSeparator+"*{"+t.groupSize+"}){*}",""!==t.radixPoint){var i=e.join("").split(t.radixPoint);i[1]&&(n+=t.radixPoint+"*{"+i[1].match(/^\d*\??\d*/)[0].length+"}")}return n}(d,r),{numericInput:!0,jitMasking:!0,definitions:{"*":{validator:"[0-9?]",cardinality:1}}}).format(d.join("")),g&&(d+=r.radixPoint),d.charAt(0)===r.groupSeparator&&d.substr(1)}}if(r.isNegative&&"blur"===o.event&&(r.isNegative="0"!==d),d=a+d,d+=s,r.isNegative&&(d=r.negationSymbol.front+d,d+=r.negationSymbol.back),d=d.split(""),c!==n)if(c!==r.radixPoint&&c!==r.negationSymbol.front&&c!==r.negationSymbol.back)l=e.inArray("?",d),l>-1?d[l]=c:l=o.caret||0;else if(c===r.radixPoint||c===r.negationSymbol.front||c===r.negationSymbol.back){var m=e.inArray(c,d);-1!==m&&(l=m)}r.numericInput&&(l=d.length-l-1,d=d.reverse());var v={caret:c===n||o.pos!==n?l+(r.numericInput?-1:1):l,buffer:d,refreshFromBuffer:o.dopost||i.join("")!==d.join("")};return v.refreshFromBuffer?v:o},onBeforeWrite:function(i,o,r,s){if(i)switch(i.type){case"keydown":return s.postValidation(o,{caret:r,dopost:!0},s);case"blur":case"checkval":var a;if(function(e){e.parseMinMaxOptions===n&&(null!==e.min&&(e.min=e.min.toString().replace(new RegExp(t.escapeRegex(e.groupSeparator),"g"),""),","===e.radixPoint&&(e.min=e.min.replace(e.radixPoint,".")),e.min=isFinite(e.min)?parseFloat(e.min):NaN,isNaN(e.min)&&(e.min=Number.MIN_VALUE)),null!==e.max&&(e.max=e.max.toString().replace(new RegExp(t.escapeRegex(e.groupSeparator),"g"),""),","===e.radixPoint&&(e.max=e.max.replace(e.radixPoint,".")),e.max=isFinite(e.max)?parseFloat(e.max):NaN,isNaN(e.max)&&(e.max=Number.MAX_VALUE)),e.parseMinMaxOptions="done")}(s),null!==s.min||null!==s.max){if(a=s.onUnMask(o.join(""),n,e.extend({},s,{unmaskAsNumber:!0})),null!==s.min&&a<s.min)return s.isNegative=s.min<0,s.postValidation(s.min.toString().replace(".",s.radixPoint).split(""),{caret:r,dopost:!0,placeholder:"0"},s);if(null!==s.max&&a>s.max)return s.isNegative=s.max<0,s.postValidation(s.max.toString().replace(".",s.radixPoint).split(""),{caret:r,dopost:!0,placeholder:"0"},s)}return s.postValidation(o,{caret:r,placeholder:"0",event:"blur"},s);case"_checkval":return{caret:r}}},regex:{integerPart:function(e,n){return n?new RegExp("["+t.escapeRegex(e.negationSymbol.front)+"+]?"):new RegExp("["+t.escapeRegex(e.negationSymbol.front)+"+]?\\d+")},integerNPart:function(e){return new RegExp("[\\d"+t.escapeRegex(e.groupSeparator)+t.escapeRegex(e.placeholder.charAt(0))+"]+")}},definitions:{"~":{validator:function(e,i,o,r,s,a){var l=r?new RegExp("[0-9"+t.escapeRegex(s.groupSeparator)+"]").test(e):new RegExp("[0-9]").test(e);if(!0===l){if(!0!==s.numericInput&&i.validPositions[o]!==n&&"~"===i.validPositions[o].match.def&&!a){var u=i.buffer.join("");u=u.replace(new RegExp("[-"+t.escapeRegex(s.negationSymbol.front)+"]","g"),""),u=u.replace(new RegExp(t.escapeRegex(s.negationSymbol.back)+"$"),"");var c=u.split(s.radixPoint);c.length>1&&(c[1]=c[1].replace(/0/g,s.placeholder.charAt(0))),"0"===c[0]&&(c[0]=c[0].replace(/0/g,s.placeholder.charAt(0))),u=c[0]+s.radixPoint+c[1]||"";var d=i._buffer.join("");for(u===s.radixPoint&&(u=d);null===u.match(t.escapeRegex(d)+"$");)d=d.slice(1);u=u.replace(d,""),u=u.split(""),l=u[o]===n?{pos:o,remove:o}:{pos:o}}}else r||e!==s.radixPoint||i.validPositions[o-1]!==n||(i.buffer[o]="0",l={pos:o+1});return l},cardinality:1},"+":{validator:function(e,t,n,i,o){return o.allowMinus&&("-"===e||e===o.negationSymbol.front)},cardinality:1,placeholder:""},"-":{validator:function(e,t,n,i,o){return o.allowMinus&&e===o.negationSymbol.back},cardinality:1,placeholder:""},":":{validator:function(e,n,i,o,r){var s="["+t.escapeRegex(r.radixPoint)+"]",a=new RegExp(s).test(e);return a&&n.validPositions[i]&&n.validPositions[i].match.placeholder===r.radixPoint&&(a={caret:i+1}),a},cardinality:1,placeholder:function(e){return e.radixPoint}}},onUnMask:function(e,n,i){if(""===n&&!0===i.nullable)return n;var o=e.replace(i.prefix,"");return o=o.replace(i.suffix,""),o=o.replace(new RegExp(t.escapeRegex(i.groupSeparator),"g"),""),""!==i.placeholder.charAt(0)&&(o=o.replace(new RegExp(i.placeholder.charAt(0),"g"),"0")),i.unmaskAsNumber?(""!==i.radixPoint&&-1!==o.indexOf(i.radixPoint)&&(o=o.replace(t.escapeRegex.call(this,i.radixPoint),".")),o=o.replace(new RegExp("^"+t.escapeRegex(i.negationSymbol.front)),"-"),o=o.replace(new RegExp(t.escapeRegex(i.negationSymbol.back)+"$"),""),Number(o)):o},isComplete:function(e,n){var i=e.join("");if(e.slice().join("")!==i)return!1;var o=i.replace(n.prefix,"");return o=o.replace(n.suffix,""),o=o.replace(new RegExp(t.escapeRegex(n.groupSeparator),"g"),""),","===n.radixPoint&&(o=o.replace(t.escapeRegex(n.radixPoint),".")),isFinite(o)},onBeforeMask:function(e,i){if(i.isNegative=n,e=e.toString().charAt(e.length-1)===i.radixPoint?e.toString().substr(0,e.length-1):e.toString(),""!==i.radixPoint&&isFinite(e)){var o=e.split("."),r=""!==i.groupSeparator?parseInt(i.groupSize):0;2===o.length&&(o[0].length>r||o[1].length>r||o[0].length<=r&&o[1].length<r)&&(e=e.replace(".",i.radixPoint))}var s=e.match(/,/g),a=e.match(/\./g);if(a&&s?a.length>s.length?(e=e.replace(/\./g,""),e=e.replace(",",i.radixPoint)):s.length>a.length?(e=e.replace(/,/g,""),e=e.replace(".",i.radixPoint)):e=e.indexOf(".")<e.indexOf(",")?e.replace(/\./g,""):e.replace(/,/g,""):e=e.replace(new RegExp(t.escapeRegex(i.groupSeparator),"g"),""),0===i.digits&&(-1!==e.indexOf(".")?e=e.substring(0,e.indexOf(".")):-1!==e.indexOf(",")&&(e=e.substring(0,e.indexOf(",")))),""!==i.radixPoint&&isFinite(i.digits)&&-1!==e.indexOf(i.radixPoint)){var l=e.split(i.radixPoint),u=l[1].match(new RegExp("\\d*"))[0];if(parseInt(i.digits)<u.toString().length){var c=Math.pow(10,parseInt(i.digits));e=e.replace(t.escapeRegex(i.radixPoint),"."),e=Math.round(parseFloat(e)*c)/c,e=e.toString().replace(".",i.radixPoint)}}return e},canClearPosition:function(e,t,n,i,o){var r=e.validPositions[t],s=r.input!==o.radixPoint||null!==e.validPositions[t].match.fn&&!1===o.decimalProtect||r.input===o.radixPoint&&e.validPositions[t+1]&&null===e.validPositions[t+1].match.fn||isFinite(r.input)||t===n||r.input===o.groupSeparator||r.input===o.negationSymbol.front||r.input===o.negationSymbol.back;return!s||"+"!==r.match.nativeDef&&"-"!==r.match.nativeDef||(o.isNegative=!1),s},onKeyDown:function(n,i,o,r){var s=e(this);if(n.ctrlKey)switch(n.keyCode){case t.keyCode.UP:s.val(parseFloat(this.inputmask.unmaskedvalue())+parseInt(r.step)),s.trigger("setvalue");break;case t.keyCode.DOWN:s.val(parseFloat(this.inputmask.unmaskedvalue())-parseInt(r.step)),s.trigger("setvalue")}}},currency:{prefix:"$ ",groupSeparator:",",alias:"numeric",placeholder:"0",autoGroup:!0,digits:2,digitsOptional:!1,clearMaskOnLostFocus:!1},decimal:{alias:"numeric"},integer:{alias:"numeric",digits:0,radixPoint:""},percentage:{alias:"numeric",digits:2,digitsOptional:!0,radixPoint:".",placeholder:"0",autoGroup:!1,min:0,max:100,suffix:" %",allowMinus:!1}}),t})},function(e,t,n){"use strict";var i,o,r;"function"==typeof Symbol&&Symbol.iterator,!function(s){o=[n(0),n(1)],i=s,void 0!==(r="function"==typeof i?i.apply(t,o):i)&&(e.exports=r)}(function(e,t){function n(e,t){var n=(e.mask||e).replace(/#/g,"9").replace(/\)/,"9").replace(/[+()#-]/g,""),i=(t.mask||t).replace(/#/g,"9").replace(/\)/,"9").replace(/[+()#-]/g,""),o=(e.mask||e).split("#")[0],r=(t.mask||t).split("#")[0];return 0===r.indexOf(o)?-1:0===o.indexOf(r)?1:n.localeCompare(i)}var i=t.prototype.analyseMask;return t.prototype.analyseMask=function(t,n,o){function r(e,n,i){n=n||"",i=i||a,""!==n&&(i[n]={});for(var o="",s=i[n]||i,l=e.length-1;l>=0;l--)t=e[l].mask||e[l],o=t.substr(0,1),s[o]=s[o]||[],s[o].unshift(t.substr(1)),e.splice(l,1);for(var u in s)s[u].length>500&&r(s[u].slice(),u,s)}function s(t){var n="",i=[];for(var r in t)e.isArray(t[r])?1===t[r].length?i.push(r+t[r]):i.push(r+o.groupmarker.start+t[r].join(o.groupmarker.end+o.alternatormarker+o.groupmarker.start)+o.groupmarker.end):i.push(r+s(t[r]));return n+=1===i.length?i[0]:o.groupmarker.start+i.join(o.groupmarker.end+o.alternatormarker+o.groupmarker.start)+o.groupmarker.end}var a={};return o.phoneCodes&&(o.phoneCodes&&o.phoneCodes.length>1e3&&(t=t.substr(1,t.length-2),r(t.split(o.groupmarker.end+o.alternatormarker+o.groupmarker.start)),t=s(a)),t=t.replace(/9/g,"\\9")),i.call(this,t,n,o)},t.extendAliases({abstractphone:{groupmarker:{start:"<",end:">"},countrycode:"",phoneCodes:[],mask:function(e){return e.definitions={"#":t.prototype.definitions[9]},e.phoneCodes.sort(n)},keepStatic:!0,onBeforeMask:function(e,t){var n=e.replace(/^0{1,2}/,"").replace(/[\s]/g,"");return(n.indexOf(t.countrycode)>1||-1===n.indexOf(t.countrycode))&&(n="+"+t.countrycode+n),n},onUnMask:function(e,t,n){return e.replace(/[()#-]/g,"")},inputmode:"tel"}}),t})},function(e,t,n){"use strict";var i,o,r,s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};!function(s){o=[n(2),n(1)],i=s,void 0!==(r="function"==typeof i?i.apply(t,o):i)&&(e.exports=r)}(function(e,t){return void 0===e.fn.inputmask&&(e.fn.inputmask=function(n,i){var o,r=this[0];if(void 0===i&&(i={}),"string"==typeof n)switch(n){case"unmaskedvalue":return r&&r.inputmask?r.inputmask.unmaskedvalue():e(r).val();case"remove":return this.each(function(){this.inputmask&&this.inputmask.remove()});case"getemptymask":return r&&r.inputmask?r.inputmask.getemptymask():"";case"hasMaskedValue":return!(!r||!r.inputmask)&&r.inputmask.hasMaskedValue();case"isComplete":return!r||!r.inputmask||r.inputmask.isComplete();case"getmetadata":return r&&r.inputmask?r.inputmask.getmetadata():void 0;case"setvalue":e(r).val(i),r&&void 0===r.inputmask&&e(r).triggerHandler("setvalue");break;case"option":if("string"!=typeof i)return this.each(function(){if(void 0!==this.inputmask)return this.inputmask.option(i)});if(r&&void 0!==r.inputmask)return r.inputmask.option(i);break;default:return i.alias=n,o=new t(i),this.each(function(){o.mask(this)})}else{if("object"==(void 0===n?"undefined":s(n)))return o=new t(n),void 0===n.mask&&void 0===n.alias?this.each(function(){return void 0!==this.inputmask?this.inputmask.option(n):void o.mask(this)}):this.each(function(){o.mask(this)});if(void 0===n)return this.each(function(){o=new t(i),o.mask(this)})}}),e.fn.inputmask})},function(e,t,n){var i=n(12);"string"==typeof i&&(i=[[e.i,i,""]]),n(14)(i,{}),i.locals&&(e.exports=i.locals)},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{"default":e}}n(8),n(3),n(4),n(5),n(6);var o=n(1),r=i(o),s=n(0),a=i(s),l=n(2),u=i(l);a["default"]===u["default"]&&n(7),window.Inputmask=r["default"]},function(e,t,n){"use strict";var i;"function"==typeof Symbol&&Symbol.iterator,void 0!==(i=function(){return document}.call(t,n,t,e))&&(e.exports=i)},function(e,t,n){"use strict";var i;"function"==typeof Symbol&&Symbol.iterator,void 0!==(i=function(){return window}.call(t,n,t,e))&&(e.exports=i)},function(e,t,n){t=e.exports=n(13)(void 0),t.push([e.i,"span.im-caret {\r\n    -webkit-animation: 1s blink step-end infinite;\r\n    animation: 1s blink step-end infinite;\r\n}\r\n\r\n@keyframes blink {\r\n    from, to {\r\n        border-right-color: black;\r\n    }\r\n    50% {\r\n        border-right-color: transparent;\r\n    }\r\n}\r\n\r\n@-webkit-keyframes blink {\r\n    from, to {\r\n        border-right-color: black;\r\n    }\r\n    50% {\r\n        border-right-color: transparent;\r\n    }\r\n}\r\n\r\nspan.im-static {\r\n    color: grey;\r\n}\r\n\r\ndiv.im-colormask {\r\n    display: inline-block;\r\n    border-style: inset;\r\n    border-width: 2px;\r\n    -webkit-appearance: textfield;\r\n    -moz-appearance: textfield;\r\n    appearance: textfield;\r\n}\r\n\r\ndiv.im-colormask > input {\r\n    position: absolute;\r\n    display: inline-block;\r\n    background-color: transparent;\r\n    color: transparent;\r\n    -webkit-appearance: caret;\r\n    -moz-appearance: caret;\r\n    appearance: caret;\r\n    border-style: none;\r\n    left: 0; /*calculated*/\r\n}\r\n\r\ndiv.im-colormask > input:focus {\r\n    outline: none;\r\n}\r\n\r\ndiv.im-colormask > div {\r\n    color: black;\r\n    display: inline-block;\r\n    width: 100px; /*calculated*/\r\n}",""])},function(e,t){function n(e,t){var n=e[1]||"",o=e[3];if(!o)return n;if(t&&"function"==typeof btoa){var r=i(o);return[n].concat(o.sources.map(function(e){return"/*# sourceURL="+o.sourceRoot+e+" */"})).concat([r]).join("\n")}return[n].join("\n")}function i(e){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+" */"}e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var i=n(t,e);return t[2]?"@media "+t[2]+"{"+i+"}":i}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var i={},o=0;o<this.length;o++){var r=this[o][0];"number"==typeof r&&(i[r]=!0)}for(o=0;o<e.length;o++){var s=e[o];"number"==typeof s[0]&&i[s[0]]||(n&&!s[2]?s[2]=n:n&&(s[2]="("+s[2]+") and ("+n+")"),t.push(s))}},t}},function(e,t,n){function i(e,t){for(var n=0;n<e.length;n++){var i=e[n],o=h[i.id];if(o){o.refs++;for(var r=0;r<o.parts.length;r++)o.parts[r](i.parts[r]);for(;r<i.parts.length;r++)o.parts.push(c(i.parts[r],t))}else{for(var s=[],r=0;r<i.parts.length;r++)s.push(c(i.parts[r],t));h[i.id]={id:i.id,refs:1,parts:s}}}}function o(e){for(var t=[],n={},i=0;i<e.length;i++){var o=e[i],r=o[0],s=o[1],a=o[2],l=o[3],u={css:s,media:a,sourceMap:l};n[r]?n[r].parts.push(u):t.push(n[r]={id:r,parts:[u]})}return t}function r(e,t){var n=m(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var i=b[b.length-1];if("top"===e.insertAt)i?i.nextSibling?n.insertBefore(t,i.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),b.push(t);else{if("bottom"!==e.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");n.appendChild(t)}}function s(e){e.parentNode.removeChild(e);var t=b.indexOf(e);t>=0&&b.splice(t,1)}function a(e){var t=document.createElement("style");return e.attrs.type="text/css",u(t,e.attrs),r(e,t),t}function l(e){var t=document.createElement("link");return e.attrs.type="text/css",e.attrs.rel="stylesheet",u(t,e.attrs),r(e,t),t}function u(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function c(e,t){var n,i,o;if(t.singleton){var r=y++;n=v||(v=a(t)),i=d.bind(null,n,r,!1),o=d.bind(null,n,r,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=l(t),i=f.bind(null,n,t),o=function(){s(n),n.href&&URL.revokeObjectURL(n.href)}):(n=a(t),i=p.bind(null,n),o=function(){s(n)});return i(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;i(e=t)}else o()}}function d(e,t,n,i){var o=n?"":i.css;if(e.styleSheet)e.styleSheet.cssText=w(t,o);else{var r=document.createTextNode(o),s=e.childNodes;s[t]&&e.removeChild(s[t]),s.length?e.insertBefore(r,s[t]):e.appendChild(r)}}function p(e,t){var n=t.css,i=t.media;if(i&&e.setAttribute("media",i),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}function f(e,t,n){var i=n.css,o=n.sourceMap,r=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||r)&&(i=k(i)),o&&(i+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var s=new Blob([i],{type:"text/css"}),a=e.href;e.href=URL.createObjectURL(s),a&&URL.revokeObjectURL(a)}var h={},g=function(e){var t;return function(){return void 0===t&&(t=e.apply(this,arguments)),t}}(function(){return window&&document&&document.all&&!window.atob}),m=function(e){var t={};return function(n){return void 0===t[n]&&(t[n]=e.call(this,n)),t[n]}}(function(e){return document.querySelector(e)}),v=null,y=0,b=[],k=n(15);e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");t=t||{},t.attrs="object"==typeof t.attrs?t.attrs:{},void 0===t.singleton&&(t.singleton=g()),void 0===t.insertInto&&(t.insertInto="head"),void 0===t.insertAt&&(t.insertAt="bottom");var n=o(e);return i(n,t),function(e){for(var r=[],s=0;s<n.length;s++){var a=n[s],l=h[a.id];l.refs--,r.push(l)}e&&i(o(e),t);for(var s=0;s<r.length;s++){var l=r[s];if(0===l.refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete h[l.id]}}}};var w=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}()},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,i=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});if(/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(o))return e;var r;return r=0===o.indexOf("//")?o:0===o.indexOf("/")?n+o:i+o.replace(/^\.\//,""),"url("+JSON.stringify(r)+")"})}}]),function(e){var t="no-flexbox",n="flex -webkit-flex -ms-flexbox -moz-box -webkit-box".split(" "),i=n.length,o=e.createElement("b");try{for(var r=0;r<i;r++)o.style.display=n[r],o.style.display==n[r]&&(t="",r=i)}catch(o){t="no-flexbox"}t.length&&(e.documentElement.className+=t)}(document);var Tabs=function(e){this.container=$(e),this.content=this.container.find(".tab-content"),this.linksContainer=this.container.find(".tab-link-container"),this.links=this.container.find(".tab-link"),this.init()};Tabs.prototype.init=function(){this.checkActiveContent(),this.links.on("click",this.switchContent.bind(this))},Tabs.prototype.checkActiveContent=function(){var e=this.links.filter(".is-active"),t=this.links.index(e);this.content.eq(t).addClass("is-active")},Tabs.prototype.switchContent=function(e){e.preventDefault();var t=$(e.target),n=t.data("container-class");t.hasClass("is-active")||(this.linksContainer.removeClass("slide"),this.links.removeClass("is-active"),this.content.removeClass("is-active"),this.linksContainer.addClass(n),t.addClass("is-active"),this.checkActiveContent())};var Forms=function(){this.body=$("body"),this.select=$(".form-select"),this.init()};Forms.prototype.init=function(){this.initSelect(),this.initSlider(),this.initMasks()},Forms.prototype.initSelect=function(){this.select.selectize({sortField:{field:"text",direction:"asc"},create:!1,dropdownParent:"body"})},Forms.prototype.initSlider=function(){$(".formSlider").slider({range:"min",min:1,max:100,create:function(){var e=$(this).closest(".formBlock"),t=e.find(".fieldWrapper__input"),n=t.val();$(this).slider("value",n)},slide:function(e,t){var n=$(this).closest(".formBlock"),i=n.find(".fieldWrapper__input");i.val(t.value)}}),this.body.on("input",".fieldWrapper__input--slider",this.updateSlider)},Forms.prototype.updateSlider=function(){var e=$(this).val(),t=$(this).closest(".formBlock"),n=t.find(".formSlider");e<0?e=0:e>100&&(e=100),$(this).val(e),n.slider("value",e)},Forms.prototype.initMasks=function(){$(".field-mobile").inputmask("+7 (999) 999-99-99",{clearIncomplete:!0}),$(".field-date").inputmask("date",{placeholder:"дд/мм/гггг",clearIncomplete:!0}),$(".field-passport-numbers").inputmask("9999 999999",{clearIncomplete:!0}),$(".field-email").inputmask("email",{clearIncomplete:!0})};var Tooltip=function(e){this.container=$(e),this.content=this.container.find(".tooltip-content"),this.link=this.container.find(".tooltip-link"),this.init()};Tooltip.prototype.init=function(){this.link.on("click",this.switchTooltip.bind(this))},Tooltip.prototype.switchTooltip=function(e){e.preventDefault(),this.content.stop().fadeToggle(),this.link.toggleClass("is-active")};var ProjectAdd=function(){this.body=$("body"),this.personEntity=this.body.find(".person-entity-clone"),this.personEntityClone=this.personEntity.clone(),this.personButtonsContainer=this.body.find(".person-entity-links"),this.addPersonButton=this.personButtonsContainer.find(".person-entity-add"),this.removePersonButton=this.personButtonsContainer.find(".person-entity-remove"),this.init()};ProjectAdd.prototype.init=function(){this.body.on("click",".attention-close",this.closeAttention.bind(this)),this.body.on("click",".add-requisites-link",this.addRequisites.bind(this)),this.body.on("click",".remove-requisites-link",this.removeRequisites.bind(this)),this.body.on("click",".partner-entity-remove",this.removePartner.bind(this)),this.addPersonButton.on("click",this.addPerson.bind(this)),this.removePersonButton.on("click",this.removePerson.bind(this))},ProjectAdd.prototype.addRequisites=function(e){e.preventDefault();var t=$(e.target);t.hide(),t.siblings(".add-requisites-hidden").stop().slideDown(500,function(){
t.siblings(".remove-requisites-link").fadeIn()})},ProjectAdd.prototype.removeRequisites=function(e){e.preventDefault();var t=$(e.target);t.hide(),t.siblings(".add-requisites-hidden").stop().slideUp(500,function(){t.siblings(".add-requisites-link").fadeIn()})},ProjectAdd.prototype.closeAttention=function(e){e.preventDefault();var t=$(e.target);t.closest(".attention-container").slideUp(500)},ProjectAdd.prototype.addPerson=function(e){e.preventDefault();var t=$(".personEntity");if(this.personEntity.is(":hidden"))this.personEntity.slideDown(700),this.personButtonsContainer.removeClass("is-first");else{var n=this.personEntityClone.clone();new Tabs(n),n.find(".form-select").selectize({sortField:{field:"text",direction:"asc"},create:!1,dropdownParent:"body"}),$(e.target).data("partner")&&(this.initSlider(n),this.updatePartnerTitle(n,t.length)),n.find("input").val(""),n.hide(),t.last().after(n),n.slideDown(700)}},ProjectAdd.prototype.removePerson=function(e){e.preventDefault();var t=$(".personEntity");t.length<2?(this.personEntity.slideUp(700),this.personButtonsContainer.addClass("is-first")):t.last().slideUp(700,function(){$(this).remove()})},ProjectAdd.prototype.initSlider=function(e){e.find(".formSlider").slider({range:"min",min:1,max:100,create:function(){var e=$(this).closest(".formBlock"),t=e.find(".fieldWrapper__input"),n=t.val();$(this).slider("value",n)},slide:function(e,t){var n=$(this).closest(".formBlock"),i=n.find(".fieldWrapper__input");i.val(t.value)}})},ProjectAdd.prototype.updatePartnerTitle=function(e,t){var n=e.find(".formTitle__counter"),i=e.find(".formTitle__hint"),o="";switch(t){case 2:o="Третий";break;case 3:o="Четвертый";break;case 4:o="Пятый";break;case 5:o="Шестой"}i.remove(),n.text(o+" участник"),n.closest(".formTitle").append('<span class="formTitle__remove partner-entity-remove">убрать участника</span>')},ProjectAdd.prototype.removePartner=function(e){e.preventDefault();var t=$(e.target),n=this;t.closest(".personEntity").slideUp(700,function(){$(this).remove(),n.updateTitles()})},ProjectAdd.prototype.updateTitles=function(){for(var e=$(".formTitle__counter"),t=e.length,n=2;n<t;n++){var i="";switch(n){case 2:i="Третий";break;case 3:i="Четвертый";break;case 4:i="Пятый";break;case 5:i="Шестой"}e.eq(n).text(i+" участник")}},$(document).ready(function(){new ProjectAdd});var Popups=function(){this.body=$("body"),this.bPopupOpened=!1,this.init()};Popups.prototype.init=function(){this.body.on("click",".popup-open",this.openPopup.bind(this))},Popups.prototype.openPopup=function(e){e.preventDefault();var t=this,n=$(e.target).data("popup"),i=$("."+n),o="popup-close";this.bPopupOpened&&this.bPopupOpened.bPopup().close(),this.bPopupOpened=i.bPopup({opacity:.8,follow:[!0,!1],closeClass:o,onClose:function(){t.bPopupOpened=""}})};var Viewer=function(){this.window=$(window),this.body=$("body"),this.init()};Viewer.prototype.init=function(){this.initClasses(),this.initFunctions(),this.window.on("resize",this.updateResizer.bind(this)),$(".first-enter-close").one("click",function(e){e.preventDefault(),$("body").removeClass("first-enter")})},Viewer.prototype.initClasses=function(){new Forms,new Popups,$(".tab-container").each(function(){new Tabs(this)}),$(".tooltip-container").each(function(){new Tooltip(this)})},Viewer.prototype.initFunctions=function(){this.fullWindowHeight()},Viewer.prototype.updateResizer=function(){this.fullWindowHeight()},Viewer.prototype.fullWindowHeight=function(){var e=this.window.height()-$(".header").height();$(".full-height").height(e)},$(document).ready(function(){new Viewer});
//# sourceMappingURL=data:application/json;base64,
